name: Deploy to Production

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies (API)
      run: |
        cd api
        npm ci --only=production
    
    - name: Install dependencies (Dashboard)
      run: |
        cd dashboard
        npm ci
    
    - name: Build Dashboard for production
      run: |
        cd dashboard
        npm run build
    
    - name: Create deployment package
      run: |
        # Wait for all npm processes to complete and file handles to close
        sleep 5
        # Kill any remaining npm processes that might hold file locks
        pkill -f npm || true
        sleep 2
        # Create deployment package excluding development files
        tar -czf homelab-gitops-auditor-${{ github.sha }}.tar.gz \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='*.tar.gz' \
          --exclude='.github' \
          --exclude='*.log' \
          --exclude='coverage' \
          --exclude='*.test.*' \
          --exclude='dist/.vite' \
          .
    
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package-${{ github.sha }}
        path: homelab-gitops-auditor-${{ github.sha }}.tar.gz
        retention-days: 30
    
    - name: Deploy to homelab
      run: |
        echo "Deployment package created: homelab-gitops-auditor-${{ github.sha }}.tar.gz"
        echo "Manual deployment steps:"
        echo "1. Download artifact"
        echo "2. Transfer to homelab server"
        echo "3. Run: bash scripts/deploy.sh"
    
    - name: Create GitHub release (on tag)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
