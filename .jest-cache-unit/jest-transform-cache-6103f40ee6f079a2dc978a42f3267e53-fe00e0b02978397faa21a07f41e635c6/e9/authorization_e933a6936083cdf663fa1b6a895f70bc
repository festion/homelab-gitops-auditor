941fe2d4b30aabad728cae8c24689e6e
/* istanbul ignore next */
function cov_1jd3hw5m69() {
  var path = "/home/dev/workspace/homelab-gitops-auditor/api/middleware/authorization.js";
  var hash = "5ed6ecd9259e2d21091c5a70d7d44c1cae9b994e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/dev/workspace/homelab-gitops-auditor/api/middleware/authorization.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 24
        },
        end: {
          line: 1,
          column: 56
        }
      },
      "1": {
        start: {
          line: 2,
          column: 19
        },
        end: {
          line: 2,
          column: 45
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 27
        }
      },
      "3": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 33
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "6": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "7": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "9": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "10": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 30
        }
      },
      "11": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "12": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 26,
          column: 63
        }
      },
      "13": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 81
        }
      },
      "14": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 18
        }
      },
      "15": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "16": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "17": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "18": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "19": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "20": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 84,
          column: 7
        }
      },
      "21": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "22": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 95,
          column: 7
        }
      },
      "23": {
        start: {
          line: 102,
          column: 22
        },
        end: {
          line: 161,
          column: 3
        }
      },
      "24": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "25": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 159,
          column: 7
        }
      },
      "26": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "27": {
        start: {
          line: 107,
          column: 10
        },
        end: {
          line: 107,
          column: 34
        }
      },
      "28": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "29": {
        start: {
          line: 111,
          column: 10
        },
        end: {
          line: 111,
          column: 79
        }
      },
      "30": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 114,
          column: 65
        }
      },
      "31": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 115,
          column: 105
        }
      },
      "32": {
        start: {
          line: 117,
          column: 30
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "33": {
        start: {
          line: 118,
          column: 10
        },
        end: {
          line: 118,
          column: 57
        }
      },
      "34": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "35": {
        start: {
          line: 122,
          column: 10
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "36": {
        start: {
          line: 133,
          column: 10
        },
        end: {
          line: 133,
          column: 111
        }
      },
      "37": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "38": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 15
        }
      },
      "39": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 56
        }
      },
      "40": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "41": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 228,
          column: 3
        }
      },
      "42": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 227,
          column: 6
        }
      },
      "43": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 226,
          column: 7
        }
      },
      "44": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "45": {
        start: {
          line: 171,
          column: 10
        },
        end: {
          line: 171,
          column: 34
        }
      },
      "46": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "47": {
        start: {
          line: 175,
          column: 10
        },
        end: {
          line: 175,
          column: 79
        }
      },
      "48": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "49": {
        start: {
          line: 180,
          column: 10
        },
        end: {
          line: 180,
          column: 100
        }
      },
      "50": {
        start: {
          line: 183,
          column: 26
        },
        end: {
          line: 183,
          column: 88
        }
      },
      "51": {
        start: {
          line: 184,
          column: 25
        },
        end: {
          line: 184,
          column: 87
        }
      },
      "52": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 102
        }
      },
      "53": {
        start: {
          line: 186,
          column: 46
        },
        end: {
          line: 186,
          column: 70
        }
      },
      "54": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "55": {
        start: {
          line: 189,
          column: 10
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "56": {
        start: {
          line: 200,
          column: 10
        },
        end: {
          line: 200,
          column: 92
        }
      },
      "57": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 212,
          column: 11
        }
      },
      "58": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 15
        }
      },
      "59": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 53
        }
      },
      "60": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "61": {
        start: {
          line: 234,
          column: 26
        },
        end: {
          line: 275,
          column: 3
        }
      },
      "62": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 274,
          column: 6
        }
      },
      "63": {
        start: {
          line: 236,
          column: 6
        },
        end: {
          line: 273,
          column: 7
        }
      },
      "64": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "65": {
        start: {
          line: 238,
          column: 10
        },
        end: {
          line: 238,
          column: 79
        }
      },
      "66": {
        start: {
          line: 241,
          column: 27
        },
        end: {
          line: 241,
          column: 99
        }
      },
      "67": {
        start: {
          line: 244,
          column: 26
        },
        end: {
          line: 244,
          column: 92
        }
      },
      "68": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "69": {
        start: {
          line: 247,
          column: 10
        },
        end: {
          line: 256,
          column: 13
        }
      },
      "70": {
        start: {
          line: 258,
          column: 10
        },
        end: {
          line: 258,
          column: 100
        }
      },
      "71": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 15
        }
      },
      "72": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 64
        }
      },
      "73": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 272,
          column: 11
        }
      },
      "74": {
        start: {
          line: 280,
          column: 17
        },
        end: {
          line: 282,
          column: 3
        }
      },
      "75": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 281,
          column: 37
        }
      },
      "76": {
        start: {
          line: 287,
          column: 32
        },
        end: {
          line: 301,
          column: 3
        }
      },
      "77": {
        start: {
          line: 288,
          column: 26
        },
        end: {
          line: 293,
          column: 5
        }
      },
      "78": {
        start: {
          line: 295,
          column: 23
        },
        end: {
          line: 295,
          column: 47
        }
      },
      "79": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "80": {
        start: {
          line: 297,
          column: 6
        },
        end: {
          line: 297,
          column: 68
        }
      },
      "81": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 300,
          column: 46
        }
      },
      "82": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 307,
          column: 25
        }
      },
      "83": {
        start: {
          line: 307,
          column: 15
        },
        end: {
          line: 307,
          column: 25
        }
      },
      "84": {
        start: {
          line: 309,
          column: 24
        },
        end: {
          line: 309,
          column: 55
        }
      },
      "85": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 318,
          column: 5
        }
      },
      "86": {
        start: {
          line: 313,
          column: 20
        },
        end: {
          line: 313,
          column: 70
        }
      },
      "87": {
        start: {
          line: 314,
          column: 6
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "88": {
        start: {
          line: 315,
          column: 32
        },
        end: {
          line: 315,
          column: 58
        }
      },
      "89": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 75
        }
      },
      "90": {
        start: {
          line: 316,
          column: 46
        },
        end: {
          line: 316,
          column: 73
        }
      },
      "91": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 320,
          column: 35
        }
      },
      "92": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "93": {
        start: {
          line: 329,
          column: 6
        },
        end: {
          line: 329,
          column: 18
        }
      },
      "94": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "95": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 336,
          column: 7
        }
      },
      "96": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 20
        }
      },
      "97": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 339,
          column: 17
        }
      },
      "98": {
        start: {
          line: 347,
          column: 4
        },
        end: {
          line: 349,
          column: 5
        }
      },
      "99": {
        start: {
          line: 348,
          column: 6
        },
        end: {
          line: 348,
          column: 18
        }
      },
      "100": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 361,
          column: 5
        }
      },
      "101": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 60
        }
      },
      "102": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 60
        }
      },
      "103": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 54
        }
      },
      "104": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 21
        }
      },
      "105": {
        start: {
          line: 370,
          column: 28
        },
        end: {
          line: 370,
          column: 57
        }
      },
      "106": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 371,
          column: 66
        }
      },
      "107": {
        start: {
          line: 379,
          column: 28
        },
        end: {
          line: 379,
          column: 57
        }
      },
      "108": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 380,
          column: 66
        }
      },
      "109": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 390,
          column: 5
        }
      },
      "110": {
        start: {
          line: 389,
          column: 6
        },
        end: {
          line: 389,
          column: 18
        }
      },
      "111": {
        start: {
          line: 393,
          column: 28
        },
        end: {
          line: 393,
          column: 57
        }
      },
      "112": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 394,
          column: 60
        }
      },
      "113": {
        start: {
          line: 400,
          column: 11
        },
        end: {
          line: 436,
          column: 3
        }
      },
      "114": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 435,
          column: 6
        }
      },
      "115": {
        start: {
          line: 402,
          column: 6
        },
        end: {
          line: 434,
          column: 7
        }
      },
      "116": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "117": {
        start: {
          line: 404,
          column: 10
        },
        end: {
          line: 404,
          column: 79
        }
      },
      "118": {
        start: {
          line: 407,
          column: 29
        },
        end: {
          line: 407,
          column: 71
        }
      },
      "119": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "120": {
        start: {
          line: 410,
          column: 10
        },
        end: {
          line: 417,
          column: 13
        }
      },
      "121": {
        start: {
          line: 419,
          column: 10
        },
        end: {
          line: 419,
          column: 80
        }
      },
      "122": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 15
        }
      },
      "123": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 63
        }
      },
      "124": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 433,
          column: 11
        }
      },
      "125": {
        start: {
          line: 442,
          column: 4
        },
        end: {
          line: 449,
          column: 7
        }
      },
      "126": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 463,
          column: 7
        }
      },
      "127": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 473,
          column: 6
        }
      },
      "128": {
        start: {
          line: 480,
          column: 18
        },
        end: {
          line: 480,
          column: 20
        }
      },
      "129": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 483,
          column: 5
        }
      },
      "130": {
        start: {
          line: 482,
          column: 6
        },
        end: {
          line: 482,
          column: 36
        }
      },
      "131": {
        start: {
          line: 484,
          column: 4
        },
        end: {
          line: 484,
          column: 17
        }
      },
      "132": {
        start: {
          line: 491,
          column: 27
        },
        end: {
          line: 491,
          column: 36
        }
      },
      "133": {
        start: {
          line: 494,
          column: 4
        },
        end: {
          line: 496,
          column: 5
        }
      },
      "134": {
        start: {
          line: 495,
          column: 6
        },
        end: {
          line: 495,
          column: 72
        }
      },
      "135": {
        start: {
          line: 495,
          column: 40
        },
        end: {
          line: 495,
          column: 70
        }
      },
      "136": {
        start: {
          line: 499,
          column: 4
        },
        end: {
          line: 501,
          column: 5
        }
      },
      "137": {
        start: {
          line: 500,
          column: 6
        },
        end: {
          line: 500,
          column: 72
        }
      },
      "138": {
        start: {
          line: 500,
          column: 40
        },
        end: {
          line: 500,
          column: 70
        }
      },
      "139": {
        start: {
          line: 503,
          column: 4
        },
        end: {
          line: 503,
          column: 45
        }
      },
      "140": {
        start: {
          line: 508,
          column: 32
        },
        end: {
          line: 508,
          column: 61
        }
      },
      "141": {
        start: {
          line: 511,
          column: 0
        },
        end: {
          line: 521,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 16
          },
          end: {
            line: 14,
            column: 3
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        loc: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 36,
            column: 2
          },
          end: {
            line: 36,
            column: 3
          }
        },
        loc: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 65,
            column: 3
          }
        },
        line: 36
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 3
          }
        },
        loc: {
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 96,
            column: 3
          }
        },
        line: 70
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 23
          }
        },
        loc: {
          start: {
            line: 102,
            column: 47
          },
          end: {
            line: 161,
            column: 3
          }
        },
        line: 102
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 103,
            column: 11
          },
          end: {
            line: 103,
            column: 12
          }
        },
        loc: {
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 103
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 117,
            column: 45
          },
          end: {
            line: 117,
            column: 46
          }
        },
        loc: {
          start: {
            line: 118,
            column: 10
          },
          end: {
            line: 118,
            column: 57
          }
        },
        line: 118
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 166,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        },
        loc: {
          start: {
            line: 166,
            column: 35
          },
          end: {
            line: 228,
            column: 3
          }
        },
        line: 166
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 167,
            column: 11
          },
          end: {
            line: 167,
            column: 12
          }
        },
        loc: {
          start: {
            line: 167,
            column: 37
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 167
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 186,
            column: 38
          },
          end: {
            line: 186,
            column: 39
          }
        },
        loc: {
          start: {
            line: 186,
            column: 46
          },
          end: {
            line: 186,
            column: 70
          }
        },
        line: 186
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 234,
            column: 26
          },
          end: {
            line: 234,
            column: 27
          }
        },
        loc: {
          start: {
            line: 234,
            column: 59
          },
          end: {
            line: 275,
            column: 3
          }
        },
        line: 234
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 235,
            column: 11
          },
          end: {
            line: 235,
            column: 12
          }
        },
        loc: {
          start: {
            line: 235,
            column: 37
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 235
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 280,
            column: 17
          },
          end: {
            line: 280,
            column: 18
          }
        },
        loc: {
          start: {
            line: 280,
            column: 23
          },
          end: {
            line: 282,
            column: 3
          }
        },
        line: 280
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 287,
            column: 32
          },
          end: {
            line: 287,
            column: 33
          }
        },
        loc: {
          start: {
            line: 287,
            column: 47
          },
          end: {
            line: 301,
            column: 3
          }
        },
        line: 287
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 306,
            column: 2
          },
          end: {
            line: 306,
            column: 3
          }
        },
        loc: {
          start: {
            line: 306,
            column: 27
          },
          end: {
            line: 321,
            column: 3
          }
        },
        line: 306
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 314,
            column: 20
          },
          end: {
            line: 314,
            column: 21
          }
        },
        loc: {
          start: {
            line: 314,
            column: 28
          },
          end: {
            line: 317,
            column: 7
          }
        },
        line: 314
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 316,
            column: 32
          },
          end: {
            line: 316,
            column: 33
          }
        },
        loc: {
          start: {
            line: 316,
            column: 46
          },
          end: {
            line: 316,
            column: 73
          }
        },
        line: 316
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 326,
            column: 2
          },
          end: {
            line: 326,
            column: 3
          }
        },
        loc: {
          start: {
            line: 326,
            column: 53
          },
          end: {
            line: 340,
            column: 3
          }
        },
        line: 326
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 345,
            column: 2
          },
          end: {
            line: 345,
            column: 3
          }
        },
        loc: {
          start: {
            line: 345,
            column: 60
          },
          end: {
            line: 362,
            column: 3
          }
        },
        line: 345
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 367,
            column: 2
          },
          end: {
            line: 367,
            column: 3
          }
        },
        loc: {
          start: {
            line: 367,
            column: 50
          },
          end: {
            line: 372,
            column: 3
          }
        },
        line: 367
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 377,
            column: 2
          },
          end: {
            line: 377,
            column: 3
          }
        },
        loc: {
          start: {
            line: 377,
            column: 50
          },
          end: {
            line: 381,
            column: 3
          }
        },
        line: 377
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 386,
            column: 2
          },
          end: {
            line: 386,
            column: 3
          }
        },
        loc: {
          start: {
            line: 386,
            column: 38
          },
          end: {
            line: 395,
            column: 3
          }
        },
        line: 386
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 400,
            column: 11
          },
          end: {
            line: 400,
            column: 12
          }
        },
        loc: {
          start: {
            line: 400,
            column: 38
          },
          end: {
            line: 436,
            column: 3
          }
        },
        line: 400
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 401,
            column: 11
          },
          end: {
            line: 401,
            column: 12
          }
        },
        loc: {
          start: {
            line: 401,
            column: 37
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 401
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 441,
            column: 2
          },
          end: {
            line: 441,
            column: 3
          }
        },
        loc: {
          start: {
            line: 441,
            column: 41
          },
          end: {
            line: 450,
            column: 3
          }
        },
        line: 441
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 455,
            column: 2
          },
          end: {
            line: 455,
            column: 3
          }
        },
        loc: {
          start: {
            line: 455,
            column: 38
          },
          end: {
            line: 464,
            column: 3
          }
        },
        line: 455
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 469,
            column: 2
          },
          end: {
            line: 469,
            column: 3
          }
        },
        loc: {
          start: {
            line: 469,
            column: 24
          },
          end: {
            line: 474,
            column: 3
          }
        },
        line: 469
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 479,
            column: 2
          },
          end: {
            line: 479,
            column: 3
          }
        },
        loc: {
          start: {
            line: 479,
            column: 16
          },
          end: {
            line: 485,
            column: 3
          }
        },
        line: 479
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 490,
            column: 2
          },
          end: {
            line: 490,
            column: 3
          }
        },
        loc: {
          start: {
            line: 490,
            column: 22
          },
          end: {
            line: 504,
            column: 3
          }
        },
        line: 490
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 495,
            column: 26
          },
          end: {
            line: 495,
            column: 27
          }
        },
        loc: {
          start: {
            line: 495,
            column: 40
          },
          end: {
            line: 495,
            column: 70
          }
        },
        line: 495
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 500,
            column: 26
          },
          end: {
            line: 500,
            column: 27
          }
        },
        loc: {
          start: {
            line: 500,
            column: 40
          },
          end: {
            line: 500,
            column: 70
          }
        },
        line: 500
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "2": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "3": {
        loc: {
          start: {
            line: 115,
            column: 25
          },
          end: {
            line: 115,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 62
          },
          end: {
            line: 115,
            column: 81
          }
        }, {
          start: {
            line: 115,
            column: 84
          },
          end: {
            line: 115,
            column: 105
          }
        }],
        line: 115
      },
      "4": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "5": {
        loc: {
          start: {
            line: 124,
            column: 20
          },
          end: {
            line: 124,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 20
          },
          end: {
            line: 124,
            column: 35
          }
        }, {
          start: {
            line: 124,
            column: 39
          },
          end: {
            line: 124,
            column: 43
          }
        }],
        line: 124
      },
      "6": {
        loc: {
          start: {
            line: 125,
            column: 22
          },
          end: {
            line: 125,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 22
          },
          end: {
            line: 125,
            column: 39
          }
        }, {
          start: {
            line: 125,
            column: 43
          },
          end: {
            line: 125,
            column: 59
          }
        }, {
          start: {
            line: 125,
            column: 63
          },
          end: {
            line: 125,
            column: 67
          }
        }],
        line: 125
      },
      "7": {
        loc: {
          start: {
            line: 139,
            column: 18
          },
          end: {
            line: 139,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 18
          },
          end: {
            line: 139,
            column: 33
          }
        }, {
          start: {
            line: 139,
            column: 37
          },
          end: {
            line: 139,
            column: 41
          }
        }],
        line: 139
      },
      "8": {
        loc: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 140,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 140,
            column: 37
          }
        }, {
          start: {
            line: 140,
            column: 41
          },
          end: {
            line: 140,
            column: 57
          }
        }, {
          start: {
            line: 140,
            column: 61
          },
          end: {
            line: 140,
            column: 65
          }
        }],
        line: 140
      },
      "9": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "10": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "11": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "12": {
        loc: {
          start: {
            line: 183,
            column: 26
          },
          end: {
            line: 183,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 57
          },
          end: {
            line: 183,
            column: 70
          }
        }, {
          start: {
            line: 183,
            column: 73
          },
          end: {
            line: 183,
            column: 88
          }
        }],
        line: 183
      },
      "13": {
        loc: {
          start: {
            line: 184,
            column: 25
          },
          end: {
            line: 184,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 56
          },
          end: {
            line: 184,
            column: 69
          }
        }, {
          start: {
            line: 184,
            column: 72
          },
          end: {
            line: 184,
            column: 87
          }
        }],
        line: 184
      },
      "14": {
        loc: {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 186,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 186,
            column: 71
          }
        }, {
          start: {
            line: 186,
            column: 75
          },
          end: {
            line: 186,
            column: 102
          }
        }],
        line: 186
      },
      "15": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "16": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "17": {
        loc: {
          start: {
            line: 241,
            column: 27
          },
          end: {
            line: 241,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 65
          },
          end: {
            line: 241,
            column: 83
          }
        }, {
          start: {
            line: 241,
            column: 86
          },
          end: {
            line: 241,
            column: 99
          }
        }],
        line: 241
      },
      "18": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "19": {
        loc: {
          start: {
            line: 249,
            column: 20
          },
          end: {
            line: 249,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 20
          },
          end: {
            line: 249,
            column: 35
          }
        }, {
          start: {
            line: 249,
            column: 39
          },
          end: {
            line: 249,
            column: 43
          }
        }],
        line: 249
      },
      "20": {
        loc: {
          start: {
            line: 250,
            column: 22
          },
          end: {
            line: 250,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 22
          },
          end: {
            line: 250,
            column: 39
          }
        }, {
          start: {
            line: 250,
            column: 43
          },
          end: {
            line: 250,
            column: 59
          }
        }, {
          start: {
            line: 250,
            column: 63
          },
          end: {
            line: 250,
            column: 67
          }
        }],
        line: 250
      },
      "21": {
        loc: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "22": {
        loc: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "23": {
        loc: {
          start: {
            line: 309,
            column: 32
          },
          end: {
            line: 309,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 32
          },
          end: {
            line: 309,
            column: 48
          }
        }, {
          start: {
            line: 309,
            column: 52
          },
          end: {
            line: 309,
            column: 54
          }
        }],
        line: 309
      },
      "24": {
        loc: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "25": {
        loc: {
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 312,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 312,
            column: 27
          }
        }, {
          start: {
            line: 312,
            column: 31
          },
          end: {
            line: 312,
            column: 40
          }
        }],
        line: 312
      },
      "26": {
        loc: {
          start: {
            line: 313,
            column: 20
          },
          end: {
            line: 313,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 47
          },
          end: {
            line: 313,
            column: 56
          }
        }, {
          start: {
            line: 313,
            column: 59
          },
          end: {
            line: 313,
            column: 70
          }
        }],
        line: 313
      },
      "27": {
        loc: {
          start: {
            line: 315,
            column: 32
          },
          end: {
            line: 315,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 32
          },
          end: {
            line: 315,
            column: 52
          }
        }, {
          start: {
            line: 315,
            column: 56
          },
          end: {
            line: 315,
            column: 58
          }
        }],
        line: 315
      },
      "28": {
        loc: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "29": {
        loc: {
          start: {
            line: 334,
            column: 6
          },
          end: {
            line: 336,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 6
          },
          end: {
            line: 336,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "30": {
        loc: {
          start: {
            line: 334,
            column: 10
          },
          end: {
            line: 334,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 10
          },
          end: {
            line: 334,
            column: 46
          }
        }, {
          start: {
            line: 334,
            column: 50
          },
          end: {
            line: 334,
            column: 97
          }
        }],
        line: 334
      },
      "31": {
        loc: {
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "32": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 347,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 347,
            column: 27
          }
        }, {
          start: {
            line: 347,
            column: 32
          },
          end: {
            line: 347,
            column: 53
          }
        }, {
          start: {
            line: 347,
            column: 58
          },
          end: {
            line: 347,
            column: 82
          }
        }, {
          start: {
            line: 347,
            column: 86
          },
          end: {
            line: 347,
            column: 113
          }
        }],
        line: 347
      },
      "33": {
        loc: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 353,
            column: 6
          },
          end: {
            line: 354,
            column: 60
          }
        }, {
          start: {
            line: 355,
            column: 6
          },
          end: {
            line: 356,
            column: 60
          }
        }, {
          start: {
            line: 357,
            column: 6
          },
          end: {
            line: 358,
            column: 54
          }
        }, {
          start: {
            line: 359,
            column: 6
          },
          end: {
            line: 360,
            column: 21
          }
        }],
        line: 352
      },
      "34": {
        loc: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "35": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 388,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 388,
            column: 27
          }
        }, {
          start: {
            line: 388,
            column: 31
          },
          end: {
            line: 388,
            column: 53
          }
        }],
        line: 388
      },
      "36": {
        loc: {
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "37": {
        loc: {
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "38": {
        loc: {
          start: {
            line: 412,
            column: 20
          },
          end: {
            line: 412,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 412,
            column: 20
          },
          end: {
            line: 412,
            column: 35
          }
        }, {
          start: {
            line: 412,
            column: 39
          },
          end: {
            line: 412,
            column: 43
          }
        }],
        line: 412
      },
      "39": {
        loc: {
          start: {
            line: 413,
            column: 22
          },
          end: {
            line: 413,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 22
          },
          end: {
            line: 413,
            column: 39
          }
        }, {
          start: {
            line: 413,
            column: 43
          },
          end: {
            line: 413,
            column: 59
          }
        }, {
          start: {
            line: 413,
            column: 63
          },
          end: {
            line: 413,
            column: 67
          }
        }],
        line: 413
      },
      "40": {
        loc: {
          start: {
            line: 472,
            column: 19
          },
          end: {
            line: 472,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 472,
            column: 19
          },
          end: {
            line: 472,
            column: 43
          }
        }, {
          start: {
            line: 472,
            column: 47
          },
          end: {
            line: 472,
            column: 49
          }
        }],
        line: 472
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0, 0],
      "33": [0, 0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0],
      "40": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5ed6ecd9259e2d21091c5a70d7d44c1cae9b994e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jd3hw5m69 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jd3hw5m69();
const {
  AuditLogger
} =
/* istanbul ignore next */
(cov_1jd3hw5m69().s[0]++, require('../utils/audit-logger'));
const {
  Logger
} =
/* istanbul ignore next */
(cov_1jd3hw5m69().s[1]++, require('../utils/logger'));

/**
 * Authorization Middleware
 * Provides comprehensive Role-Based Access Control (RBAC) and permission-based authorization
 */
class AuthorizationMiddleware {
  constructor() {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[0]++;
    cov_1jd3hw5m69().s[2]++;
    this.roles = new Map();
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[3]++;
    this.permissions = new Map();
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[4]++;
    this.logger = new Logger('AuthorizationMiddleware');
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[5]++;
    this.initialized = false;
  }

  /**
   * Initialize the authorization middleware
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[1]++;
    cov_1jd3hw5m69().s[6]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().b[0][0]++;
      cov_1jd3hw5m69().s[7]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1jd3hw5m69().b[0][1]++;
    }
    cov_1jd3hw5m69().s[8]++;
    try {
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[9]++;
      this.setupRoles();
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[10]++;
      this.setupPermissions();
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[11]++;
      this.initialized = true;
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[12]++;
      this.logger.info('Authorization middleware initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[13]++;
      this.logger.error('Failed to initialize authorization middleware:', error);
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[14]++;
      throw error;
    }
  }

  /**
   * Setup role definitions and their permissions
   */
  setupRoles() {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[2]++;
    cov_1jd3hw5m69().s[15]++;
    // Define roles and their permissions
    this.roles.set('admin', ['deployment:read', 'deployment:write', 'deployment:rollback', 'deployment:admin', 'system:admin', 'user:manage', 'config:manage', 'audit:read']);
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[16]++;
    this.roles.set('operator', ['deployment:read', 'deployment:write', 'deployment:rollback', 'monitoring:read']);
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[17]++;
    this.roles.set('viewer', ['deployment:read', 'monitoring:read']);
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[18]++;
    this.roles.set('webhook', ['webhook:receive', 'deployment:trigger']);
  }

  /**
   * Setup permission hierarchy
   */
  setupPermissions() {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[3]++;
    cov_1jd3hw5m69().s[19]++;
    // Define permission hierarchy (higher permissions include lower ones)
    this.permissions.set('system:admin', ['deployment:admin', 'user:manage', 'config:manage', 'audit:read']);
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[20]++;
    this.permissions.set('deployment:admin', ['deployment:read', 'deployment:write', 'deployment:rollback', 'deployment:configure']);
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[21]++;
    this.permissions.set('deployment:write', ['deployment:read']);
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[22]++;
    this.permissions.set('user:manage', ['user:read', 'user:create', 'user:update', 'user:delete']);
  }

  /**
   * Authorization middleware factory
   * Creates middleware to check specific permissions
   */
  requirePermission =
  /* istanbul ignore next */
  (cov_1jd3hw5m69().s[23]++, requiredPermissions => {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[4]++;
    cov_1jd3hw5m69().s[24]++;
    return async (req, res, next) => {
      /* istanbul ignore next */
      cov_1jd3hw5m69().f[5]++;
      cov_1jd3hw5m69().s[25]++;
      try {
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[26]++;
        // Ensure middleware is initialized
        if (!this.initialized) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[1][0]++;
          cov_1jd3hw5m69().s[27]++;
          await this.initialize();
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[1][1]++;
        }
        cov_1jd3hw5m69().s[28]++;
        if (!req.auth) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[2][0]++;
          cov_1jd3hw5m69().s[29]++;
          return this.sendUnauthorizedResponse(res, 'Authentication required');
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[2][1]++;
        }
        const userPermissions =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[30]++, this.getUserPermissions(req.auth));
        const required =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[31]++, Array.isArray(requiredPermissions) ?
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[3][0]++, requiredPermissions) :
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[3][1]++, [requiredPermissions]));
        const hasPermission =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[32]++, required.every(permission => {
          /* istanbul ignore next */
          cov_1jd3hw5m69().f[6]++;
          cov_1jd3hw5m69().s[33]++;
          return this.hasPermission(userPermissions, permission);
        }));
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[34]++;
        if (!hasPermission) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[4][0]++;
          cov_1jd3hw5m69().s[35]++;
          AuditLogger.logAuthorizationEvent({
            type: 'authorization-failure',
            userId:
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[5][0]++, req.auth.userId) ||
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[5][1]++, null),
            username:
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[6][0]++, req.auth.username) ||
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[6][1]++, req.auth.keyName) ||
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[6][2]++, null),
            requiredPermissions: required,
            userPermissions: userPermissions,
            ipAddress: req.ip,
            endpoint: req.path,
            method: req.method
          });
          /* istanbul ignore next */
          cov_1jd3hw5m69().s[36]++;
          return this.sendForbiddenResponse(res, `Insufficient permissions. Required: ${required.join(', ')}`);
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[4][1]++;
        }

        // Log successful authorization
        cov_1jd3hw5m69().s[37]++;
        AuditLogger.logAuthorizationEvent({
          type: 'authorization-success',
          userId:
          /* istanbul ignore next */
          (cov_1jd3hw5m69().b[7][0]++, req.auth.userId) ||
          /* istanbul ignore next */
          (cov_1jd3hw5m69().b[7][1]++, null),
          username:
          /* istanbul ignore next */
          (cov_1jd3hw5m69().b[8][0]++, req.auth.username) ||
          /* istanbul ignore next */
          (cov_1jd3hw5m69().b[8][1]++, req.auth.keyName) ||
          /* istanbul ignore next */
          (cov_1jd3hw5m69().b[8][2]++, null),
          requiredPermissions: required,
          ipAddress: req.ip,
          endpoint: req.path,
          method: req.method
        });
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[38]++;
        next();
      } catch (error) {
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[39]++;
        this.logger.error('Authorization error', error);
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[40]++;
        return res.status(500).json({
          status: 'error',
          error: {
            code: 'AUTHORIZATION_ERROR',
            message: 'Authorization check failed',
            timestamp: new Date().toISOString()
          }
        });
      }
    };
  });

  /**
   * Role-based authorization middleware
   */
  requireRole =
  /* istanbul ignore next */
  (cov_1jd3hw5m69().s[41]++, requiredRoles => {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[7]++;
    cov_1jd3hw5m69().s[42]++;
    return async (req, res, next) => {
      /* istanbul ignore next */
      cov_1jd3hw5m69().f[8]++;
      cov_1jd3hw5m69().s[43]++;
      try {
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[44]++;
        // Ensure middleware is initialized
        if (!this.initialized) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[9][0]++;
          cov_1jd3hw5m69().s[45]++;
          await this.initialize();
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[9][1]++;
        }
        cov_1jd3hw5m69().s[46]++;
        if (!req.auth) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[10][0]++;
          cov_1jd3hw5m69().s[47]++;
          return this.sendUnauthorizedResponse(res, 'Authentication required');
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[10][1]++;
        }

        // API keys don't have roles, only users do
        cov_1jd3hw5m69().s[48]++;
        if (req.auth.type !== 'jwt') {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[11][0]++;
          cov_1jd3hw5m69().s[49]++;
          return this.sendForbiddenResponse(res, 'User authentication required for this operation');
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[11][1]++;
        }
        const userRoles =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[50]++, Array.isArray(req.auth.role) ?
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[12][0]++, req.auth.role) :
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[12][1]++, [req.auth.role]));
        const required =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[51]++, Array.isArray(requiredRoles) ?
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[13][0]++, requiredRoles) :
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[13][1]++, [requiredRoles]));
        const hasRole =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[52]++,
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[14][0]++, required.some(role => {
          /* istanbul ignore next */
          cov_1jd3hw5m69().f[9]++;
          cov_1jd3hw5m69().s[53]++;
          return userRoles.includes(role);
        })) ||
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[14][1]++, userRoles.includes('admin')));
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[54]++;
        if (!hasRole) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[15][0]++;
          cov_1jd3hw5m69().s[55]++;
          AuditLogger.logAuthorizationEvent({
            type: 'role-authorization-failure',
            userId: req.auth.userId,
            username: req.auth.username,
            requiredRoles: required,
            userRoles: userRoles,
            ipAddress: req.ip,
            endpoint: req.path,
            method: req.method
          });
          /* istanbul ignore next */
          cov_1jd3hw5m69().s[56]++;
          return this.sendForbiddenResponse(res, `Required role: ${required.join(' or ')}`);
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[15][1]++;
        }
        cov_1jd3hw5m69().s[57]++;
        AuditLogger.logAuthorizationEvent({
          type: 'role-authorization-success',
          userId: req.auth.userId,
          username: req.auth.username,
          requiredRoles: required,
          userRoles: userRoles,
          ipAddress: req.ip,
          endpoint: req.path,
          method: req.method
        });
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[58]++;
        next();
      } catch (error) {
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[59]++;
        this.logger.error('Role check error', error);
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[60]++;
        return res.status(500).json({
          status: 'error',
          error: {
            code: 'ROLE_CHECK_ERROR',
            message: 'Role check failed',
            timestamp: new Date().toISOString()
          }
        });
      }
    };
  });

  /**
   * Resource-level authorization middleware
   * Checks if user can access specific resources
   */
  requireResourceAccess =
  /* istanbul ignore next */
  (cov_1jd3hw5m69().s[61]++, (resourceType, getResourceId) => {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[10]++;
    cov_1jd3hw5m69().s[62]++;
    return async (req, res, next) => {
      /* istanbul ignore next */
      cov_1jd3hw5m69().f[11]++;
      cov_1jd3hw5m69().s[63]++;
      try {
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[64]++;
        if (!req.auth) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[16][0]++;
          cov_1jd3hw5m69().s[65]++;
          return this.sendUnauthorizedResponse(res, 'Authentication required');
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[16][1]++;
        }
        const resourceId =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[66]++, typeof getResourceId === 'function' ?
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[17][0]++, getResourceId(req)) :
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[17][1]++, getResourceId));

        // Check if user has access to this specific resource
        const hasAccess =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[67]++, await this.checkResourceAccess(req.auth, resourceType, resourceId));
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[68]++;
        if (!hasAccess) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[18][0]++;
          cov_1jd3hw5m69().s[69]++;
          AuditLogger.logAuthorizationEvent({
            type: 'resource-access-denied',
            userId:
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[19][0]++, req.auth.userId) ||
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[19][1]++, null),
            username:
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[20][0]++, req.auth.username) ||
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[20][1]++, req.auth.keyName) ||
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[20][2]++, null),
            resourceType: resourceType,
            resourceId: resourceId,
            ipAddress: req.ip,
            endpoint: req.path,
            method: req.method
          });
          /* istanbul ignore next */
          cov_1jd3hw5m69().s[70]++;
          return this.sendForbiddenResponse(res, `Access denied to ${resourceType}: ${resourceId}`);
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[18][1]++;
        }
        cov_1jd3hw5m69().s[71]++;
        next();
      } catch (error) {
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[72]++;
        this.logger.error('Resource access check error', error);
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[73]++;
        return res.status(500).json({
          status: 'error',
          error: {
            code: 'RESOURCE_ACCESS_ERROR',
            message: 'Resource access check failed',
            timestamp: new Date().toISOString()
          }
        });
      }
    };
  });

  /**
   * Admin-only middleware
   */
  requireAdmin =
  /* istanbul ignore next */
  (cov_1jd3hw5m69().s[74]++, () => {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[12]++;
    cov_1jd3hw5m69().s[75]++;
    return this.requireRole('admin');
  });

  /**
   * Deployment operation authorization
   */
  requireDeploymentPermission =
  /* istanbul ignore next */
  (cov_1jd3hw5m69().s[76]++, operation => {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[13]++;
    const permissionMap =
    /* istanbul ignore next */
    (cov_1jd3hw5m69().s[77]++, {
      'read': 'deployment:read',
      'deploy': 'deployment:write',
      'rollback': 'deployment:rollback',
      'configure': 'deployment:admin'
    });
    const permission =
    /* istanbul ignore next */
    (cov_1jd3hw5m69().s[78]++, permissionMap[operation]);
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[79]++;
    if (!permission) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().b[21][0]++;
      cov_1jd3hw5m69().s[80]++;
      throw new Error(`Invalid deployment operation: ${operation}`);
    } else
    /* istanbul ignore next */
    {
      cov_1jd3hw5m69().b[21][1]++;
    }
    cov_1jd3hw5m69().s[81]++;
    return this.requirePermission(permission);
  });

  /**
   * Get user permissions including role-based permissions
   */
  getUserPermissions(auth) {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[14]++;
    cov_1jd3hw5m69().s[82]++;
    if (!auth) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().b[22][0]++;
      cov_1jd3hw5m69().s[83]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1jd3hw5m69().b[22][1]++;
    }
    const permissions =
    /* istanbul ignore next */
    (cov_1jd3hw5m69().s[84]++, new Set(
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[23][0]++, auth.permissions) ||
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[23][1]++, [])));

    // Add permissions from roles (if user authentication)
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[85]++;
    if (
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[25][0]++, auth.type === 'jwt') &&
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[25][1]++, auth.role)) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().b[24][0]++;
      const roles =
      /* istanbul ignore next */
      (cov_1jd3hw5m69().s[86]++, Array.isArray(auth.role) ?
      /* istanbul ignore next */
      (cov_1jd3hw5m69().b[26][0]++, auth.role) :
      /* istanbul ignore next */
      (cov_1jd3hw5m69().b[26][1]++, [auth.role]));
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[87]++;
      roles.forEach(role => {
        /* istanbul ignore next */
        cov_1jd3hw5m69().f[15]++;
        const rolePermissions =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[88]++,
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[27][0]++, this.roles.get(role)) ||
        /* istanbul ignore next */
        (cov_1jd3hw5m69().b[27][1]++, []));
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[89]++;
        rolePermissions.forEach(permission => {
          /* istanbul ignore next */
          cov_1jd3hw5m69().f[16]++;
          cov_1jd3hw5m69().s[90]++;
          return permissions.add(permission);
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_1jd3hw5m69().b[24][1]++;
    }
    cov_1jd3hw5m69().s[91]++;
    return Array.from(permissions);
  }

  /**
   * Check if user has specific permission
   */
  hasPermission(userPermissions, requiredPermission) {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[17]++;
    cov_1jd3hw5m69().s[92]++;
    // Direct permission check
    if (userPermissions.includes(requiredPermission)) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().b[28][0]++;
      cov_1jd3hw5m69().s[93]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1jd3hw5m69().b[28][1]++;
    }

    // Check for higher-level permissions that include this permission
    cov_1jd3hw5m69().s[94]++;
    for (const [permission, impliedPermissions] of this.permissions) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[95]++;
      if (
      /* istanbul ignore next */
      (cov_1jd3hw5m69().b[30][0]++, userPermissions.includes(permission)) &&
      /* istanbul ignore next */
      (cov_1jd3hw5m69().b[30][1]++, impliedPermissions.includes(requiredPermission))) {
        /* istanbul ignore next */
        cov_1jd3hw5m69().b[29][0]++;
        cov_1jd3hw5m69().s[96]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_1jd3hw5m69().b[29][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[97]++;
    return false;
  }

  /**
   * Check resource-level access
   */
  async checkResourceAccess(auth, resourceType, resourceId) {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[18]++;
    cov_1jd3hw5m69().s[98]++;
    // Admin users have access to all resources
    if (
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[32][0]++, auth.type === 'jwt') && (
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[32][1]++, auth.role === 'admin') ||
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[32][2]++, Array.isArray(auth.role)) &&
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[32][3]++, auth.role.includes('admin')))) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().b[31][0]++;
      cov_1jd3hw5m69().s[99]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1jd3hw5m69().b[31][1]++;
    }

    // Implement resource-specific access control logic here
    cov_1jd3hw5m69().s[100]++;
    switch (resourceType) {
      case 'repository':
        /* istanbul ignore next */
        cov_1jd3hw5m69().b[33][0]++;
        cov_1jd3hw5m69().s[101]++;
        return this.checkRepositoryAccess(auth, resourceId);
      case 'deployment':
        /* istanbul ignore next */
        cov_1jd3hw5m69().b[33][1]++;
        cov_1jd3hw5m69().s[102]++;
        return this.checkDeploymentAccess(auth, resourceId);
      case 'user':
        /* istanbul ignore next */
        cov_1jd3hw5m69().b[33][2]++;
        cov_1jd3hw5m69().s[103]++;
        return this.checkUserAccess(auth, resourceId);
      default:
        /* istanbul ignore next */
        cov_1jd3hw5m69().b[33][3]++;
        cov_1jd3hw5m69().s[104]++;
        return false;
    }
  }

  /**
   * Check repository access
   */
  async checkRepositoryAccess(auth, repositoryId) {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[19]++;
    // For now, allow access if user has deployment permissions
    // In production, this would check against a repository access control list
    const userPermissions =
    /* istanbul ignore next */
    (cov_1jd3hw5m69().s[105]++, this.getUserPermissions(auth));
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[106]++;
    return this.hasPermission(userPermissions, 'deployment:read');
  }

  /**
   * Check deployment access
   */
  async checkDeploymentAccess(auth, deploymentId) {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[20]++;
    // Check if user has deployment read permission
    const userPermissions =
    /* istanbul ignore next */
    (cov_1jd3hw5m69().s[107]++, this.getUserPermissions(auth));
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[108]++;
    return this.hasPermission(userPermissions, 'deployment:read');
  }

  /**
   * Check user access (for user management operations)
   */
  async checkUserAccess(auth, userId) {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[21]++;
    cov_1jd3hw5m69().s[109]++;
    // Users can access their own data
    if (
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[35][0]++, auth.type === 'jwt') &&
    /* istanbul ignore next */
    (cov_1jd3hw5m69().b[35][1]++, auth.userId === userId)) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().b[34][0]++;
      cov_1jd3hw5m69().s[110]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1jd3hw5m69().b[34][1]++;
    }

    // Check if user has user management permissions
    const userPermissions =
    /* istanbul ignore next */
    (cov_1jd3hw5m69().s[111]++, this.getUserPermissions(auth));
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[112]++;
    return this.hasPermission(userPermissions, 'user:read');
  }

  /**
   * Create custom authorization middleware
   */
  custom =
  /* istanbul ignore next */
  (cov_1jd3hw5m69().s[113]++, authorizationFunction => {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[22]++;
    cov_1jd3hw5m69().s[114]++;
    return async (req, res, next) => {
      /* istanbul ignore next */
      cov_1jd3hw5m69().f[23]++;
      cov_1jd3hw5m69().s[115]++;
      try {
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[116]++;
        if (!req.auth) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[36][0]++;
          cov_1jd3hw5m69().s[117]++;
          return this.sendUnauthorizedResponse(res, 'Authentication required');
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[36][1]++;
        }
        const isAuthorized =
        /* istanbul ignore next */
        (cov_1jd3hw5m69().s[118]++, await authorizationFunction(req.auth, req));
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[119]++;
        if (!isAuthorized) {
          /* istanbul ignore next */
          cov_1jd3hw5m69().b[37][0]++;
          cov_1jd3hw5m69().s[120]++;
          AuditLogger.logAuthorizationEvent({
            type: 'custom-authorization-failure',
            userId:
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[38][0]++, req.auth.userId) ||
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[38][1]++, null),
            username:
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[39][0]++, req.auth.username) ||
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[39][1]++, req.auth.keyName) ||
            /* istanbul ignore next */
            (cov_1jd3hw5m69().b[39][2]++, null),
            ipAddress: req.ip,
            endpoint: req.path,
            method: req.method
          });
          /* istanbul ignore next */
          cov_1jd3hw5m69().s[121]++;
          return this.sendForbiddenResponse(res, 'Custom authorization failed');
        } else
        /* istanbul ignore next */
        {
          cov_1jd3hw5m69().b[37][1]++;
        }
        cov_1jd3hw5m69().s[122]++;
        next();
      } catch (error) {
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[123]++;
        this.logger.error('Custom authorization error', error);
        /* istanbul ignore next */
        cov_1jd3hw5m69().s[124]++;
        return res.status(500).json({
          status: 'error',
          error: {
            code: 'CUSTOM_AUTHORIZATION_ERROR',
            message: 'Custom authorization check failed',
            timestamp: new Date().toISOString()
          }
        });
      }
    };
  });

  /**
   * Send unauthorized response
   */
  sendUnauthorizedResponse(res, message) {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[24]++;
    cov_1jd3hw5m69().s[125]++;
    res.status(401).json({
      status: 'error',
      error: {
        code: 'UNAUTHORIZED',
        message: message,
        timestamp: new Date().toISOString()
      }
    });
  }

  /**
   * Send forbidden response
   */
  sendForbiddenResponse(res, message) {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[25]++;
    cov_1jd3hw5m69().s[126]++;
    res.status(403).json({
      status: 'error',
      error: {
        code: 'FORBIDDEN',
        message: message,
        timestamp: new Date().toISOString()
      }
    });
  }

  /**
   * Get role information
   */
  getRoleInfo(roleName) {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[26]++;
    cov_1jd3hw5m69().s[127]++;
    return {
      name: roleName,
      permissions:
      /* istanbul ignore next */
      (cov_1jd3hw5m69().b[40][0]++, this.roles.get(roleName)) ||
      /* istanbul ignore next */
      (cov_1jd3hw5m69().b[40][1]++, [])
    };
  }

  /**
   * Get all available roles
   */
  getAllRoles() {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[27]++;
    const roles =
    /* istanbul ignore next */
    (cov_1jd3hw5m69().s[128]++, {});
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[129]++;
    for (const [roleName, permissions] of this.roles) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[130]++;
      roles[roleName] = permissions;
    }
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[131]++;
    return roles;
  }

  /**
   * Get all available permissions
   */
  getAllPermissions() {
    /* istanbul ignore next */
    cov_1jd3hw5m69().f[28]++;
    const allPermissions =
    /* istanbul ignore next */
    (cov_1jd3hw5m69().s[132]++, new Set());

    // Add all role permissions
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[133]++;
    for (const permissions of this.roles.values()) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[134]++;
      permissions.forEach(permission => {
        /* istanbul ignore next */
        cov_1jd3hw5m69().f[29]++;
        cov_1jd3hw5m69().s[135]++;
        return allPermissions.add(permission);
      });
    }

    // Add all implied permissions
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[136]++;
    for (const permissions of this.permissions.values()) {
      /* istanbul ignore next */
      cov_1jd3hw5m69().s[137]++;
      permissions.forEach(permission => {
        /* istanbul ignore next */
        cov_1jd3hw5m69().f[30]++;
        cov_1jd3hw5m69().s[138]++;
        return allPermissions.add(permission);
      });
    }
    /* istanbul ignore next */
    cov_1jd3hw5m69().s[139]++;
    return Array.from(allPermissions).sort();
  }
}

// Create singleton instance
const authorizationMiddleware =
/* istanbul ignore next */
(cov_1jd3hw5m69().s[140]++, new AuthorizationMiddleware());

// Export individual middleware functions
/* istanbul ignore next */
cov_1jd3hw5m69().s[141]++;
module.exports = {
  requirePermission: authorizationMiddleware.requirePermission,
  requireRole: authorizationMiddleware.requireRole,
  requireResourceAccess: authorizationMiddleware.requireResourceAccess,
  requireAdmin: authorizationMiddleware.requireAdmin,
  requireDeploymentPermission: authorizationMiddleware.requireDeploymentPermission,
  custom: authorizationMiddleware.custom,
  AuthorizationMiddleware,
  // Export instance for direct access
  authorizationMiddleware
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,