{"version":3,"names":["cov_psipq9uwv","actualCoverage","helmet","s","require","cors","rateLimit","AuditLogger","Logger","SecurityMiddleware","constructor","f","config","logger","rateLimitStore","Map","ipWhitelist","Set","ipBlacklist","initialize","loadConfig","setupIPFilters","info","error","getDefaultConfig","ConfigManager","getConfig","b","security","origins","credentials","windowMs","max","authMax","sensitiveMax","headers","hsts","maxAge","includeSubDomains","preload","ipFiltering","whitelist","blacklist","forEach","ip","add","getSecurityHeaders","contentSecurityPolicy","directives","defaultSrc","styleSrc","scriptSrc","imgSrc","connectSrc","fontSrc","objectSrc","mediaSrc","frameSrc","baseUri","formAction","reportOnly","noSniff","frameguard","action","xssFilter","referrerPolicy","policy","hidePoweredBy","dnsPrefetchControl","allow","expectCt","enforce","crossOriginOpenerPolicy","crossOriginResourcePolicy","crossOriginEmbedderPolicy","getCorsConfig","allowedOrigins","origin","callback","includes","logSecurityEvent","type","timestamp","Date","toISOString","Error","methods","allowedHeaders","exposedHeaders","getApiRateLimit","standardHeaders","legacyHeaders","message","status","code","skip","req","has","process","env","NODE_ENV","handler","res","ipAddress","userAgent","get","endpoint","path","method","limit","json","retryAfter","Math","ceil","getAuthRateLimit","skipSuccessfulRequests","skipFailedRequests","keyGenerator","createHash","update","digest","substr","getSensitiveRateLimit","userId","auth","getIpFilter","next","clientIp","connection","remoteAddress","size","isLocalhost","getCustomHeaders","requestId","randomUUID","setHeader","removeHeader","startsWith","now","toString","on","responseTime","parseInt","getHeader","getRequestSizeLimit","maxSize","contentLength","getRequestLogger","start","logData","duration","responseLogData","statusCode","responseSize","warn","getSecurityEventDetector","suspicious","detectSuspiciousActivity","length","threats","sanitizeHeaders","suspiciousUA","some","pattern","test","push","suspiciousPaths","xForwardedFor","split","sanitized","getErrorHandler","err","stack","name","getProductionMiddleware","getDevelopmentMiddleware","securityMiddleware","module","exports"],"sources":["enhanced-security-headers.js"],"sourcesContent":["const helmet = require('helmet');\nconst cors = require('cors');\nconst rateLimit = require('express-rate-limit');\nconst { AuditLogger } = require('../utils/audit-logger');\nconst { Logger } = require('../utils/logger');\n\n/**\n * Enhanced Security Middleware\n * Provides comprehensive security headers, rate limiting, and attack prevention\n */\nclass SecurityMiddleware {\n  constructor() {\n    this.config = null;\n    this.logger = new Logger('SecurityMiddleware');\n    this.rateLimitStore = new Map();\n    this.ipWhitelist = new Set();\n    this.ipBlacklist = new Set();\n  }\n\n  /**\n   * Initialize security middleware\n   */\n  async initialize() {\n    try {\n      this.config = await this.loadConfig();\n      this.setupIPFilters();\n      this.logger.info('Security middleware initialized');\n    } catch (error) {\n      this.logger.error('Failed to initialize security middleware:', error);\n      // Use default configuration\n      this.config = this.getDefaultConfig();\n    }\n  }\n\n  /**\n   * Load security configuration\n   */\n  async loadConfig() {\n    try {\n      const ConfigManager = require('../config/utils/config-manager');\n      const config = await ConfigManager.getConfig();\n      return config.security || this.getDefaultConfig();\n    } catch (error) {\n      return this.getDefaultConfig();\n    }\n  }\n\n  /**\n   * Get default security configuration\n   */\n  getDefaultConfig() {\n    return {\n      cors: {\n        origins: ['http://localhost:3000', 'http://localhost:5173'],\n        credentials: true\n      },\n      rateLimit: {\n        windowMs: 15 * 60 * 1000, // 15 minutes\n        max: 1000,\n        authMax: 5,\n        sensitiveMax: 10\n      },\n      headers: {\n        hsts: {\n          maxAge: 31536000,\n          includeSubDomains: true,\n          preload: true\n        }\n      },\n      ipFiltering: {\n        whitelist: [],\n        blacklist: []\n      }\n    };\n  }\n\n  /**\n   * Setup IP filtering\n   */\n  setupIPFilters() {\n    const { whitelist = [], blacklist = [] } = this.config.ipFiltering || {};\n    \n    whitelist.forEach(ip => this.ipWhitelist.add(ip));\n    blacklist.forEach(ip => this.ipBlacklist.add(ip));\n  }\n\n  /**\n   * Enhanced security headers using Helmet\n   */\n  getSecurityHeaders() {\n    return helmet({\n      // Content Security Policy\n      contentSecurityPolicy: {\n        directives: {\n          defaultSrc: [\"'self'\"],\n          styleSrc: [\"'self'\", \"'unsafe-inline'\", \"https:\"],\n          scriptSrc: [\"'self'\"],\n          imgSrc: [\"'self'\", \"data:\", \"https:\"],\n          connectSrc: [\"'self'\", \"wss:\", \"ws:\"],\n          fontSrc: [\"'self'\", \"https:\"],\n          objectSrc: [\"'none'\"],\n          mediaSrc: [\"'self'\"],\n          frameSrc: [\"'none'\"],\n          baseUri: [\"'self'\"],\n          formAction: [\"'self'\"]\n        },\n        reportOnly: false\n      },\n\n      // HTTP Strict Transport Security\n      hsts: {\n        maxAge: this.config.headers?.hsts?.maxAge || 31536000,\n        includeSubDomains: this.config.headers?.hsts?.includeSubDomains || true,\n        preload: this.config.headers?.hsts?.preload || true\n      },\n\n      // Prevent MIME type sniffing\n      noSniff: true,\n\n      // X-Frame-Options\n      frameguard: { action: 'deny' },\n\n      // X-XSS-Protection\n      xssFilter: true,\n\n      // Referrer Policy\n      referrerPolicy: { policy: 'strict-origin-when-cross-origin' },\n\n      // Hide X-Powered-By header\n      hidePoweredBy: true,\n\n      // DNS Prefetch Control\n      dnsPrefetchControl: { allow: false },\n\n      // Expect-CT header\n      expectCt: {\n        maxAge: 86400,\n        enforce: true\n      },\n\n      // Cross-Origin-Opener-Policy\n      crossOriginOpenerPolicy: { policy: 'same-origin' },\n\n      // Cross-Origin-Resource-Policy\n      crossOriginResourcePolicy: { policy: 'same-origin' },\n\n      // Cross-Origin-Embedder-Policy\n      crossOriginEmbedderPolicy: false // Disabled for API compatibility\n    });\n  }\n\n  /**\n   * Enhanced CORS configuration\n   */\n  getCorsConfig() {\n    const allowedOrigins = this.config.cors?.origins || ['http://localhost:3000'];\n    \n    return cors({\n      origin: (origin, callback) => {\n        // Allow requests with no origin (mobile apps, Postman, etc.)\n        if (!origin) return callback(null, true);\n        \n        // Check against allowed origins\n        if (allowedOrigins.includes('*') || allowedOrigins.includes(origin)) {\n          callback(null, true);\n        } else {\n          // Log CORS violation\n          AuditLogger.logSecurityEvent({\n            type: 'cors-violation',\n            origin: origin,\n            allowedOrigins: allowedOrigins,\n            timestamp: new Date().toISOString()\n          });\n          \n          callback(new Error('Not allowed by CORS policy'));\n        }\n      },\n      credentials: this.config.cors?.credentials || true,\n      methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'PATCH'],\n      allowedHeaders: [\n        'Origin',\n        'X-Requested-With',\n        'Content-Type',\n        'Accept',\n        'Authorization',\n        'X-API-Key',\n        'X-MFA-Token',\n        'X-Forwarded-For',\n        'User-Agent'\n      ],\n      exposedHeaders: [\n        'X-RateLimit-Limit',\n        'X-RateLimit-Remaining',\n        'X-RateLimit-Reset',\n        'X-Request-ID'\n      ],\n      maxAge: 86400 // 24 hours\n    });\n  }\n\n  /**\n   * General API rate limiting\n   */\n  getApiRateLimit() {\n    return rateLimit({\n      windowMs: this.config.rateLimit?.windowMs || 15 * 60 * 1000,\n      max: this.config.rateLimit?.max || 1000,\n      standardHeaders: true,\n      legacyHeaders: false,\n      message: {\n        status: 'error',\n        error: {\n          code: 'RATE_LIMIT_EXCEEDED',\n          message: 'Too many requests, please try again later',\n          timestamp: new Date().toISOString()\n        }\n      },\n      skip: (req) => {\n        // Skip rate limiting for whitelisted IPs\n        if (this.ipWhitelist.has(req.ip)) {\n          return true;\n        }\n        \n        // Skip for development\n        return process.env.NODE_ENV === 'development' && \n               (req.ip === '127.0.0.1' || req.ip === '::1' || req.ip === '::ffff:127.0.0.1');\n      },\n      handler: (req, res) => {\n        AuditLogger.logSecurityEvent({\n          type: 'rate-limit-exceeded',\n          ipAddress: req.ip,\n          userAgent: req.get('User-Agent'),\n          endpoint: req.path,\n          method: req.method,\n          limit: this.config.rateLimit?.max || 1000,\n          windowMs: this.config.rateLimit?.windowMs || 15 * 60 * 1000\n        });\n        \n        res.status(429).json({\n          status: 'error',\n          error: {\n            code: 'RATE_LIMIT_EXCEEDED',\n            message: 'Too many requests, please try again later',\n            retryAfter: Math.ceil((this.config.rateLimit?.windowMs || 15 * 60 * 1000) / 1000),\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Strict rate limiting for authentication endpoints\n   */\n  getAuthRateLimit() {\n    return rateLimit({\n      windowMs: 15 * 60 * 1000, // 15 minutes\n      max: this.config.rateLimit?.authMax || 5,\n      standardHeaders: true,\n      legacyHeaders: false,\n      skipSuccessfulRequests: true,\n      skipFailedRequests: false,\n      keyGenerator: (req) => {\n        // Use IP + User-Agent for more specific tracking\n        return `auth-${req.ip}-${require('crypto').createHash('md5').update(req.get('User-Agent') || '').digest('hex').substr(0, 8)}`;\n      },\n      message: {\n        status: 'error',\n        error: {\n          code: 'AUTH_RATE_LIMIT_EXCEEDED',\n          message: 'Too many authentication attempts, please try again later',\n          timestamp: new Date().toISOString()\n        }\n      },\n      handler: (req, res) => {\n        AuditLogger.logSecurityEvent({\n          type: 'auth-rate-limit-exceeded',\n          ipAddress: req.ip,\n          userAgent: req.get('User-Agent'),\n          endpoint: req.path,\n          method: req.method\n        });\n        \n        res.status(429).json({\n          status: 'error',\n          error: {\n            code: 'AUTH_RATE_LIMIT_EXCEEDED',\n            message: 'Too many authentication attempts, please try again later',\n            retryAfter: 900, // 15 minutes\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Rate limiting for sensitive operations\n   */\n  getSensitiveRateLimit() {\n    return rateLimit({\n      windowMs: 10 * 60 * 1000, // 10 minutes\n      max: this.config.rateLimit?.sensitiveMax || 10,\n      standardHeaders: true,\n      legacyHeaders: false,\n      keyGenerator: (req) => {\n        // Include user ID if authenticated\n        const userId = req.auth?.userId || 'anonymous';\n        return `sensitive-${req.ip}-${userId}`;\n      },\n      message: {\n        status: 'error',\n        error: {\n          code: 'SENSITIVE_RATE_LIMIT_EXCEEDED',\n          message: 'Too many sensitive operations, please try again later',\n          timestamp: new Date().toISOString()\n        }\n      },\n      handler: (req, res) => {\n        AuditLogger.logSecurityEvent({\n          type: 'sensitive-rate-limit-exceeded',\n          ipAddress: req.ip,\n          userAgent: req.get('User-Agent'),\n          userId: req.auth?.userId || null,\n          endpoint: req.path,\n          method: req.method\n        });\n        \n        res.status(429).json({\n          status: 'error',\n          error: {\n            code: 'SENSITIVE_RATE_LIMIT_EXCEEDED',\n            message: 'Too many sensitive operations, please try again later',\n            retryAfter: 600, // 10 minutes\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * IP filtering middleware\n   */\n  getIpFilter() {\n    return (req, res, next) => {\n      const clientIp = req.ip || req.connection.remoteAddress;\n      \n      // Check blacklist first\n      if (this.ipBlacklist.has(clientIp)) {\n        AuditLogger.logSecurityEvent({\n          type: 'ip-blacklisted',\n          ipAddress: clientIp,\n          userAgent: req.get('User-Agent'),\n          endpoint: req.path,\n          method: req.method\n        });\n        \n        return res.status(403).json({\n          status: 'error',\n          error: {\n            code: 'IP_BLOCKED',\n            message: 'Access denied from this IP address',\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n      \n      // If whitelist is configured and IP is not whitelisted\n      if (this.ipWhitelist.size > 0 && !this.ipWhitelist.has(clientIp)) {\n        // Allow localhost in development\n        const isLocalhost = clientIp === '127.0.0.1' || clientIp === '::1' || clientIp === '::ffff:127.0.0.1';\n        \n        if (!(process.env.NODE_ENV === 'development' && isLocalhost)) {\n          AuditLogger.logSecurityEvent({\n            type: 'ip-not-whitelisted',\n            ipAddress: clientIp,\n            userAgent: req.get('User-Agent'),\n            endpoint: req.path,\n            method: req.method\n          });\n          \n          return res.status(403).json({\n            status: 'error',\n            error: {\n              code: 'IP_NOT_ALLOWED',\n              message: 'Access denied from this IP address',\n              timestamp: new Date().toISOString()\n            }\n          });\n        }\n      }\n      \n      next();\n    };\n  }\n\n  /**\n   * Custom security headers middleware\n   */\n  getCustomHeaders() {\n    return (req, res, next) => {\n      // Generate unique request ID\n      const requestId = require('crypto').randomUUID();\n      req.requestId = requestId;\n      \n      // API-specific headers\n      res.setHeader('X-Request-ID', requestId);\n      res.setHeader('X-API-Version', 'v2');\n      res.setHeader('X-Content-Type-Options', 'nosniff');\n      res.setHeader('X-Download-Options', 'noopen');\n      res.setHeader('X-Permitted-Cross-Domain-Policies', 'none');\n      res.setHeader('X-DNS-Prefetch-Control', 'off');\n      \n      // Remove potentially revealing headers\n      res.removeHeader('X-Powered-By');\n      res.removeHeader('Server');\n      \n      // Cache control for API responses\n      if (req.path.startsWith('/api/')) {\n        res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');\n        res.setHeader('Pragma', 'no-cache');\n        res.setHeader('Expires', '0');\n      }\n      \n      // Security timing headers\n      res.setHeader('X-Response-Time-Start', Date.now().toString());\n      \n      // Add response time on finish\n      res.on('finish', () => {\n        const responseTime = Date.now() - parseInt(res.getHeader('X-Response-Time-Start'));\n        res.setHeader('X-Response-Time', `${responseTime}ms`);\n      });\n      \n      next();\n    };\n  }\n\n  /**\n   * Request size limiting middleware\n   */\n  getRequestSizeLimit(maxSize = 10 * 1024 * 1024) { // 10MB default\n    return (req, res, next) => {\n      const contentLength = parseInt(req.headers['content-length'] || '0');\n      \n      if (contentLength > maxSize) {\n        AuditLogger.logSecurityEvent({\n          type: 'request-size-exceeded',\n          contentLength: contentLength,\n          maxSize: maxSize,\n          ipAddress: req.ip,\n          userAgent: req.get('User-Agent'),\n          endpoint: req.path,\n          method: req.method\n        });\n        \n        return res.status(413).json({\n          status: 'error',\n          error: {\n            code: 'PAYLOAD_TOO_LARGE',\n            message: `Request body exceeds maximum allowed size of ${maxSize} bytes`,\n            maxSize: maxSize,\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n      \n      next();\n    };\n  }\n\n  /**\n   * Request logging middleware\n   */\n  getRequestLogger() {\n    return (req, res, next) => {\n      const start = Date.now();\n      \n      // Enhanced request logging\n      const logData = {\n        requestId: req.requestId,\n        method: req.method,\n        path: req.path,\n        ip: req.ip,\n        userAgent: req.get('User-Agent'),\n        contentLength: req.headers['content-length'],\n        userId: req.auth?.userId || null,\n        timestamp: new Date().toISOString()\n      };\n      \n      this.logger.info('Request received', logData);\n      \n      // Log response when finished\n      res.on('finish', () => {\n        const duration = Date.now() - start;\n        const responseLogData = {\n          ...logData,\n          statusCode: res.statusCode,\n          duration: `${duration}ms`,\n          responseSize: res.get('Content-Length')\n        };\n        \n        if (res.statusCode >= 400) {\n          this.logger.warn('Request completed with error', responseLogData);\n        } else {\n          this.logger.info('Request completed', responseLogData);\n        }\n      });\n      \n      next();\n    };\n  }\n\n  /**\n   * Security event detection middleware\n   */\n  getSecurityEventDetector() {\n    return (req, res, next) => {\n      // Detect potential security threats\n      const userAgent = req.get('User-Agent') || '';\n      const suspicious = this.detectSuspiciousActivity(req, userAgent);\n      \n      if (suspicious.length > 0) {\n        AuditLogger.logSecurityEvent({\n          type: 'suspicious-activity-detected',\n          threats: suspicious,\n          ipAddress: req.ip,\n          userAgent: userAgent,\n          endpoint: req.path,\n          method: req.method,\n          headers: this.sanitizeHeaders(req.headers)\n        });\n      }\n      \n      next();\n    };\n  }\n\n  /**\n   * Detect suspicious activity patterns\n   */\n  detectSuspiciousActivity(req, userAgent) {\n    const threats = [];\n    \n    // Check for suspicious user agents\n    const suspiciousUA = [\n      /sqlmap/i,\n      /nikto/i,\n      /nmap/i,\n      /masscan/i,\n      /nessus/i,\n      /openvas/i,\n      /burp/i,\n      /zap/i\n    ];\n    \n    if (suspiciousUA.some(pattern => pattern.test(userAgent))) {\n      threats.push('suspicious-user-agent');\n    }\n    \n    // Check for suspicious paths\n    const suspiciousPaths = [\n      /\\/\\.env/,\n      /\\/\\.git/,\n      /\\/admin/,\n      /\\/phpmyadmin/,\n      /\\/wp-admin/,\n      /\\/config\\.php/,\n      /\\/\\.well-known/\n    ];\n    \n    if (suspiciousPaths.some(pattern => pattern.test(req.path))) {\n      threats.push('suspicious-path-access');\n    }\n    \n    // Check for suspicious headers\n    const xForwardedFor = req.get('X-Forwarded-For');\n    if (xForwardedFor && xForwardedFor.split(',').length > 5) {\n      threats.push('suspicious-forwarded-headers');\n    }\n    \n    // Check for empty or missing User-Agent\n    if (!userAgent || userAgent.length < 10) {\n      threats.push('missing-or-minimal-user-agent');\n    }\n    \n    return threats;\n  }\n\n  /**\n   * Sanitize headers for logging\n   */\n  sanitizeHeaders(headers) {\n    const sanitized = { ...headers };\n    \n    // Remove sensitive headers\n    delete sanitized['authorization'];\n    delete sanitized['x-api-key'];\n    delete sanitized['cookie'];\n    delete sanitized['x-mfa-token'];\n    \n    return sanitized;\n  }\n\n  /**\n   * Error handling middleware\n   */\n  getErrorHandler() {\n    return (err, req, res, next) => {\n      // Log error with context\n      this.logger.error('Request error', {\n        error: err.message,\n        stack: err.stack,\n        requestId: req.requestId,\n        method: req.method,\n        path: req.path,\n        ip: req.ip,\n        userAgent: req.get('User-Agent'),\n        userId: req.auth?.userId || null\n      });\n      \n      // Handle specific error types\n      if (err.message === 'Not allowed by CORS policy') {\n        return res.status(403).json({\n          status: 'error',\n          error: {\n            code: 'CORS_ERROR',\n            message: 'CORS policy violation',\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n      \n      if (err.status === 429) {\n        return res.status(429).json({\n          status: 'error',\n          error: {\n            code: 'RATE_LIMIT_EXCEEDED',\n            message: err.message || 'Rate limit exceeded',\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n      \n      if (err.name === 'JsonWebTokenError') {\n        return res.status(401).json({\n          status: 'error',\n          error: {\n            code: 'INVALID_TOKEN',\n            message: 'Invalid authentication token',\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n      \n      if (err.name === 'TokenExpiredError') {\n        return res.status(401).json({\n          status: 'error',\n          error: {\n            code: 'TOKEN_EXPIRED',\n            message: 'Authentication token expired',\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n      \n      if (err.name === 'ValidationError') {\n        return res.status(400).json({\n          status: 'error',\n          error: {\n            code: 'VALIDATION_ERROR',\n            message: err.message,\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n      \n      // Generic error response (don't expose internal errors in production)\n      const statusCode = err.status || 500;\n      const message = process.env.NODE_ENV === 'development' \n        ? err.message \n        : 'Internal server error';\n      \n      res.status(statusCode).json({\n        status: 'error',\n        error: {\n          code: 'INTERNAL_ERROR',\n          message: message,\n          requestId: req.requestId,\n          timestamp: new Date().toISOString()\n        }\n      });\n    };\n  }\n\n  /**\n   * Complete security middleware stack for production\n   */\n  getProductionMiddleware() {\n    return [\n      this.getIpFilter(),\n      this.getSecurityHeaders(),\n      this.getCorsConfig(),\n      this.getApiRateLimit(),\n      this.getCustomHeaders(),\n      this.getRequestSizeLimit(),\n      this.getSecurityEventDetector(),\n      this.getRequestLogger()\n    ];\n  }\n\n  /**\n   * Development middleware stack (relaxed security)\n   */\n  getDevelopmentMiddleware() {\n    return [\n      this.getCorsConfig(),\n      this.getCustomHeaders(),\n      this.getRequestSizeLimit(50 * 1024 * 1024), // 50MB for development\n      this.getRequestLogger()\n    ];\n  }\n}\n\n// Create singleton instance\nconst securityMiddleware = new SecurityMiddleware();\n\nmodule.exports = {\n  getSecurityHeaders: () => securityMiddleware.getSecurityHeaders(),\n  getCorsConfig: () => securityMiddleware.getCorsConfig(),\n  getApiRateLimit: () => securityMiddleware.getApiRateLimit(),\n  getAuthRateLimit: () => securityMiddleware.getAuthRateLimit(),\n  getSensitiveRateLimit: () => securityMiddleware.getSensitiveRateLimit(),\n  getIpFilter: () => securityMiddleware.getIpFilter(),\n  getCustomHeaders: () => securityMiddleware.getCustomHeaders(),\n  getRequestSizeLimit: (maxSize) => securityMiddleware.getRequestSizeLimit(maxSize),\n  getRequestLogger: () => securityMiddleware.getRequestLogger(),\n  getSecurityEventDetector: () => securityMiddleware.getSecurityEventDetector(),\n  getErrorHandler: () => securityMiddleware.getErrorHandler(),\n  getProductionMiddleware: () => securityMiddleware.getProductionMiddleware(),\n  getDevelopmentMiddleware: () => securityMiddleware.getDevelopmentMiddleware(),\n  SecurityMiddleware,\n  // Export instance for initialization\n  securityMiddleware\n};"],"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","ignoreList":[]}