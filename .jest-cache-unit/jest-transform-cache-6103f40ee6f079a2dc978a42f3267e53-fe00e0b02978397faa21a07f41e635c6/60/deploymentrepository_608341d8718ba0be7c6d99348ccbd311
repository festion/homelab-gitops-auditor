173ec7fb13514976a1741477ae75b0aa
/* istanbul ignore next */
function cov_1wiqnaul4a() {
  var path = "/home/dev/workspace/homelab-gitops-auditor/scripts/services/database/deployment-repository.js";
  var hash = "e12b8cc74ce730a33ee0c4baf6afe7d780babfad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/dev/workspace/homelab-gitops-auditor/scripts/services/database/deployment-repository.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 44
        }
      },
      "1": {
        start: {
          line: 2,
          column: 17
        },
        end: {
          line: 2,
          column: 34
        }
      },
      "2": {
        start: {
          line: 3,
          column: 13
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "3": {
        start: {
          line: 4,
          column: 11
        },
        end: {
          line: 4,
          column: 33
        }
      },
      "4": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 6
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "6": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "8": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "9": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 50
        }
      },
      "10": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 49
        }
      },
      "11": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "12": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "13": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "14": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "15": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "16": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 18
        }
      },
      "17": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "18": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 18
        }
      },
      "19": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "20": {
        start: {
          line: 167,
          column: 31
        },
        end: {
          line: 170,
          column: 6
        }
      },
      "21": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "22": {
        start: {
          line: 174,
          column: 6
        },
        end: {
          line: 180,
          column: 7
        }
      },
      "23": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 42
        }
      },
      "24": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "25": {
        start: {
          line: 183,
          column: 6
        },
        end: {
          line: 188,
          column: 7
        }
      },
      "26": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 187,
          column: 10
        }
      },
      "27": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "28": {
        start: {
          line: 195,
          column: 30
        },
        end: {
          line: 195,
          column: 76
        }
      },
      "29": {
        start: {
          line: 195,
          column: 65
        },
        end: {
          line: 195,
          column: 74
        }
      },
      "30": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "31": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "32": {
        start: {
          line: 199,
          column: 10
        },
        end: {
          line: 199,
          column: 44
        }
      },
      "33": {
        start: {
          line: 200,
          column: 10
        },
        end: {
          line: 203,
          column: 12
        }
      },
      "34": {
        start: {
          line: 205,
          column: 10
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "35": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 215,
          column: 29
        }
      },
      "36": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "37": {
        start: {
          line: 225,
          column: 19
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "38": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 259,
          column: 5
        }
      },
      "39": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 244,
          column: 37
        }
      },
      "40": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "41": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 251,
          column: 27
        }
      },
      "42": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "43": {
        start: {
          line: 258,
          column: 6
        },
        end: {
          line: 258,
          column: 18
        }
      },
      "44": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 29
        }
      },
      "45": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "46": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "47": {
        start: {
          line: 277,
          column: 25
        },
        end: {
          line: 277,
          column: 63
        }
      },
      "48": {
        start: {
          line: 279,
          column: 6
        },
        end: {
          line: 281,
          column: 7
        }
      },
      "49": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 54
        }
      },
      "50": {
        start: {
          line: 283,
          column: 6
        },
        end: {
          line: 283,
          column: 18
        }
      },
      "51": {
        start: {
          line: 286,
          column: 6
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "52": {
        start: {
          line: 290,
          column: 6
        },
        end: {
          line: 290,
          column: 18
        }
      },
      "53": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 29
        }
      },
      "54": {
        start: {
          line: 297,
          column: 26
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "55": {
        start: {
          line: 302,
          column: 22
        },
        end: {
          line: 302,
          column: 24
        }
      },
      "56": {
        start: {
          line: 303,
          column: 19
        },
        end: {
          line: 303,
          column: 21
        }
      },
      "57": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "58": {
        start: {
          line: 306,
          column: 6
        },
        end: {
          line: 309,
          column: 7
        }
      },
      "59": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 37
        }
      },
      "60": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 27
        }
      },
      "61": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "62": {
        start: {
          line: 313,
          column: 6
        },
        end: {
          line: 313,
          column: 51
        }
      },
      "63": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 319,
          column: 5
        }
      },
      "64": {
        start: {
          line: 318,
          column: 6
        },
        end: {
          line: 318,
          column: 55
        }
      },
      "65": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 321,
          column: 30
        }
      },
      "66": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 77
        }
      },
      "67": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 345,
          column: 5
        }
      },
      "68": {
        start: {
          line: 326,
          column: 21
        },
        end: {
          line: 326,
          column: 51
        }
      },
      "69": {
        start: {
          line: 328,
          column: 6
        },
        end: {
          line: 330,
          column: 7
        }
      },
      "70": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 64
        }
      },
      "71": {
        start: {
          line: 332,
          column: 6
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "72": {
        start: {
          line: 337,
          column: 6
        },
        end: {
          line: 337,
          column: 28
        }
      },
      "73": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "74": {
        start: {
          line: 344,
          column: 6
        },
        end: {
          line: 344,
          column: 18
        }
      },
      "75": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 349,
          column: 29
        }
      },
      "76": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 359,
          column: 5
        }
      },
      "77": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 370,
          column: 5
        }
      },
      "78": {
        start: {
          line: 362,
          column: 26
        },
        end: {
          line: 362,
          column: 57
        }
      },
      "79": {
        start: {
          line: 363,
          column: 6
        },
        end: {
          line: 363,
          column: 65
        }
      },
      "80": {
        start: {
          line: 363,
          column: 34
        },
        end: {
          line: 363,
          column: 63
        }
      },
      "81": {
        start: {
          line: 366,
          column: 6
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "82": {
        start: {
          line: 369,
          column: 6
        },
        end: {
          line: 369,
          column: 18
        }
      },
      "83": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 374,
          column: 29
        }
      },
      "84": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 15
        }
      },
      "85": {
        start: {
          line: 385,
          column: 19
        },
        end: {
          line: 385,
          column: 37
        }
      },
      "86": {
        start: {
          line: 386,
          column: 23
        },
        end: {
          line: 386,
          column: 25
        }
      },
      "87": {
        start: {
          line: 387,
          column: 19
        },
        end: {
          line: 387,
          column: 21
        }
      },
      "88": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 392,
          column: 5
        }
      },
      "89": {
        start: {
          line: 390,
          column: 6
        },
        end: {
          line: 390,
          column: 36
        }
      },
      "90": {
        start: {
          line: 391,
          column: 6
        },
        end: {
          line: 391,
          column: 26
        }
      },
      "91": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "92": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 395,
          column: 40
        }
      },
      "93": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 396,
          column: 30
        }
      },
      "94": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 402,
          column: 5
        }
      },
      "95": {
        start: {
          line: 400,
          column: 6
        },
        end: {
          line: 400,
          column: 43
        }
      },
      "96": {
        start: {
          line: 401,
          column: 6
        },
        end: {
          line: 401,
          column: 29
        }
      },
      "97": {
        start: {
          line: 404,
          column: 4
        },
        end: {
          line: 407,
          column: 5
        }
      },
      "98": {
        start: {
          line: 405,
          column: 6
        },
        end: {
          line: 405,
          column: 43
        }
      },
      "99": {
        start: {
          line: 406,
          column: 6
        },
        end: {
          line: 406,
          column: 27
        }
      },
      "100": {
        start: {
          line: 409,
          column: 24
        },
        end: {
          line: 409,
          column: 88
        }
      },
      "101": {
        start: {
          line: 412,
          column: 21
        },
        end: {
          line: 412,
          column: 79
        }
      },
      "102": {
        start: {
          line: 413,
          column: 22
        },
        end: {
          line: 413,
          column: 57
        }
      },
      "103": {
        start: {
          line: 416,
          column: 20
        },
        end: {
          line: 425,
          column: 5
        }
      },
      "104": {
        start: {
          line: 427,
          column: 24
        },
        end: {
          line: 427,
          column: 78
        }
      },
      "105": {
        start: {
          line: 429,
          column: 4
        },
        end: {
          line: 439,
          column: 6
        }
      },
      "106": {
        start: {
          line: 430,
          column: 40
        },
        end: {
          line: 430,
          column: 69
        }
      },
      "107": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 443,
          column: 29
        }
      },
      "108": {
        start: {
          line: 445,
          column: 16
        },
        end: {
          line: 448,
          column: 5
        }
      },
      "109": {
        start: {
          line: 450,
          column: 19
        },
        end: {
          line: 456,
          column: 5
        }
      },
      "110": {
        start: {
          line: 458,
          column: 4
        },
        end: {
          line: 473,
          column: 5
        }
      },
      "111": {
        start: {
          line: 459,
          column: 6
        },
        end: {
          line: 459,
          column: 37
        }
      },
      "112": {
        start: {
          line: 461,
          column: 6
        },
        end: {
          line: 465,
          column: 9
        }
      },
      "113": {
        start: {
          line: 468,
          column: 6
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "114": {
        start: {
          line: 472,
          column: 6
        },
        end: {
          line: 472,
          column: 18
        }
      },
      "115": {
        start: {
          line: 477,
          column: 4
        },
        end: {
          line: 477,
          column: 29
        }
      },
      "116": {
        start: {
          line: 479,
          column: 16
        },
        end: {
          line: 485,
          column: 5
        }
      },
      "117": {
        start: {
          line: 487,
          column: 4
        },
        end: {
          line: 501,
          column: 5
        }
      },
      "118": {
        start: {
          line: 488,
          column: 19
        },
        end: {
          line: 488,
          column: 64
        }
      },
      "119": {
        start: {
          line: 490,
          column: 6
        },
        end: {
          line: 493,
          column: 10
        }
      },
      "120": {
        start: {
          line: 490,
          column: 30
        },
        end: {
          line: 493,
          column: 7
        }
      },
      "121": {
        start: {
          line: 496,
          column: 6
        },
        end: {
          line: 499,
          column: 9
        }
      },
      "122": {
        start: {
          line: 500,
          column: 6
        },
        end: {
          line: 500,
          column: 18
        }
      },
      "123": {
        start: {
          line: 505,
          column: 4
        },
        end: {
          line: 505,
          column: 29
        }
      },
      "124": {
        start: {
          line: 507,
          column: 16
        },
        end: {
          line: 512,
          column: 5
        }
      },
      "125": {
        start: {
          line: 514,
          column: 19
        },
        end: {
          line: 522,
          column: 5
        }
      },
      "126": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 535,
          column: 5
        }
      },
      "127": {
        start: {
          line: 525,
          column: 21
        },
        end: {
          line: 525,
          column: 51
        }
      },
      "128": {
        start: {
          line: 526,
          column: 6
        },
        end: {
          line: 526,
          column: 27
        }
      },
      "129": {
        start: {
          line: 529,
          column: 6
        },
        end: {
          line: 533,
          column: 9
        }
      },
      "130": {
        start: {
          line: 534,
          column: 6
        },
        end: {
          line: 534,
          column: 18
        }
      },
      "131": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 539,
          column: 29
        }
      },
      "132": {
        start: {
          line: 541,
          column: 26
        },
        end: {
          line: 541,
          column: 69
        }
      },
      "133": {
        start: {
          line: 542,
          column: 22
        },
        end: {
          line: 542,
          column: 24
        }
      },
      "134": {
        start: {
          line: 543,
          column: 19
        },
        end: {
          line: 543,
          column: 21
        }
      },
      "135": {
        start: {
          line: 545,
          column: 4
        },
        end: {
          line: 550,
          column: 5
        }
      },
      "136": {
        start: {
          line: 546,
          column: 6
        },
        end: {
          line: 549,
          column: 7
        }
      },
      "137": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 547,
          column: 37
        }
      },
      "138": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 548,
          column: 27
        }
      },
      "139": {
        start: {
          line: 552,
          column: 4
        },
        end: {
          line: 554,
          column: 5
        }
      },
      "140": {
        start: {
          line: 553,
          column: 6
        },
        end: {
          line: 553,
          column: 51
        }
      },
      "141": {
        start: {
          line: 556,
          column: 4
        },
        end: {
          line: 556,
          column: 24
        }
      },
      "142": {
        start: {
          line: 558,
          column: 16
        },
        end: {
          line: 558,
          column: 82
        }
      },
      "143": {
        start: {
          line: 560,
          column: 4
        },
        end: {
          line: 570,
          column: 5
        }
      },
      "144": {
        start: {
          line: 561,
          column: 21
        },
        end: {
          line: 561,
          column: 51
        }
      },
      "145": {
        start: {
          line: 562,
          column: 6
        },
        end: {
          line: 562,
          column: 28
        }
      },
      "146": {
        start: {
          line: 565,
          column: 6
        },
        end: {
          line: 568,
          column: 9
        }
      },
      "147": {
        start: {
          line: 569,
          column: 6
        },
        end: {
          line: 569,
          column: 18
        }
      },
      "148": {
        start: {
          line: 574,
          column: 4
        },
        end: {
          line: 574,
          column: 29
        }
      },
      "149": {
        start: {
          line: 576,
          column: 16
        },
        end: {
          line: 582,
          column: 5
        }
      },
      "150": {
        start: {
          line: 584,
          column: 4
        },
        end: {
          line: 593,
          column: 5
        }
      },
      "151": {
        start: {
          line: 585,
          column: 6
        },
        end: {
          line: 585,
          column: 52
        }
      },
      "152": {
        start: {
          line: 588,
          column: 6
        },
        end: {
          line: 591,
          column: 9
        }
      },
      "153": {
        start: {
          line: 592,
          column: 6
        },
        end: {
          line: 592,
          column: 18
        }
      },
      "154": {
        start: {
          line: 597,
          column: 4
        },
        end: {
          line: 597,
          column: 29
        }
      },
      "155": {
        start: {
          line: 599,
          column: 16
        },
        end: {
          line: 602,
          column: 5
        }
      },
      "156": {
        start: {
          line: 604,
          column: 19
        },
        end: {
          line: 610,
          column: 5
        }
      },
      "157": {
        start: {
          line: 612,
          column: 4
        },
        end: {
          line: 622,
          column: 5
        }
      },
      "158": {
        start: {
          line: 613,
          column: 6
        },
        end: {
          line: 613,
          column: 37
        }
      },
      "159": {
        start: {
          line: 616,
          column: 6
        },
        end: {
          line: 620,
          column: 9
        }
      },
      "160": {
        start: {
          line: 621,
          column: 6
        },
        end: {
          line: 621,
          column: 18
        }
      },
      "161": {
        start: {
          line: 626,
          column: 4
        },
        end: {
          line: 626,
          column: 29
        }
      },
      "162": {
        start: {
          line: 628,
          column: 16
        },
        end: {
          line: 633,
          column: 5
        }
      },
      "163": {
        start: {
          line: 635,
          column: 4
        },
        end: {
          line: 649,
          column: 5
        }
      },
      "164": {
        start: {
          line: 636,
          column: 22
        },
        end: {
          line: 636,
          column: 60
        }
      },
      "165": {
        start: {
          line: 638,
          column: 6
        },
        end: {
          line: 641,
          column: 10
        }
      },
      "166": {
        start: {
          line: 638,
          column: 36
        },
        end: {
          line: 641,
          column: 7
        }
      },
      "167": {
        start: {
          line: 644,
          column: 6
        },
        end: {
          line: 647,
          column: 9
        }
      },
      "168": {
        start: {
          line: 648,
          column: 6
        },
        end: {
          line: 648,
          column: 18
        }
      },
      "169": {
        start: {
          line: 653,
          column: 4
        },
        end: {
          line: 653,
          column: 29
        }
      },
      "170": {
        start: {
          line: 655,
          column: 23
        },
        end: {
          line: 660,
          column: 5
        }
      },
      "171": {
        start: {
          line: 662,
          column: 18
        },
        end: {
          line: 662,
          column: 60
        }
      },
      "172": {
        start: {
          line: 664,
          column: 16
        },
        end: {
          line: 678,
          column: 5
        }
      },
      "173": {
        start: {
          line: 680,
          column: 4
        },
        end: {
          line: 709,
          column: 5
        }
      },
      "174": {
        start: {
          line: 681,
          column: 20
        },
        end: {
          line: 681,
          column: 42
        }
      },
      "175": {
        start: {
          line: 683,
          column: 23
        },
        end: {
          line: 687,
          column: 7
        }
      },
      "176": {
        start: {
          line: 689,
          column: 36
        },
        end: {
          line: 689,
          column: 63
        }
      },
      "177": {
        start: {
          line: 691,
          column: 6
        },
        end: {
          line: 701,
          column: 8
        }
      },
      "178": {
        start: {
          line: 695,
          column: 10
        },
        end: {
          line: 698,
          column: 12
        }
      },
      "179": {
        start: {
          line: 699,
          column: 10
        },
        end: {
          line: 699,
          column: 21
        }
      },
      "180": {
        start: {
          line: 704,
          column: 6
        },
        end: {
          line: 707,
          column: 9
        }
      },
      "181": {
        start: {
          line: 708,
          column: 6
        },
        end: {
          line: 708,
          column: 18
        }
      },
      "182": {
        start: {
          line: 713,
          column: 4
        },
        end: {
          line: 713,
          column: 29
        }
      },
      "183": {
        start: {
          line: 715,
          column: 4
        },
        end: {
          line: 776,
          column: 5
        }
      },
      "184": {
        start: {
          line: 716,
          column: 25
        },
        end: {
          line: 716,
          column: 35
        }
      },
      "185": {
        start: {
          line: 717,
          column: 6
        },
        end: {
          line: 717,
          column: 63
        }
      },
      "186": {
        start: {
          line: 720,
          column: 25
        },
        end: {
          line: 727,
          column: 36
        }
      },
      "187": {
        start: {
          line: 730,
          column: 28
        },
        end: {
          line: 737,
          column: 36
        }
      },
      "188": {
        start: {
          line: 740,
          column: 26
        },
        end: {
          line: 747,
          column: 36
        }
      },
      "189": {
        start: {
          line: 750,
          column: 32
        },
        end: {
          line: 754,
          column: 36
        }
      },
      "190": {
        start: {
          line: 756,
          column: 6
        },
        end: {
          line: 762,
          column: 9
        }
      },
      "191": {
        start: {
          line: 764,
          column: 6
        },
        end: {
          line: 769,
          column: 8
        }
      },
      "192": {
        start: {
          line: 772,
          column: 6
        },
        end: {
          line: 774,
          column: 9
        }
      },
      "193": {
        start: {
          line: 775,
          column: 6
        },
        end: {
          line: 775,
          column: 18
        }
      },
      "194": {
        start: {
          line: 780,
          column: 4
        },
        end: {
          line: 807,
          column: 5
        }
      },
      "195": {
        start: {
          line: 781,
          column: 6
        },
        end: {
          line: 783,
          column: 7
        }
      },
      "196": {
        start: {
          line: 782,
          column: 8
        },
        end: {
          line: 782,
          column: 74
        }
      },
      "197": {
        start: {
          line: 786,
          column: 6
        },
        end: {
          line: 786,
          column: 36
        }
      },
      "198": {
        start: {
          line: 789,
          column: 20
        },
        end: {
          line: 794,
          column: 8
        }
      },
      "199": {
        start: {
          line: 796,
          column: 6
        },
        end: {
          line: 800,
          column: 8
        }
      },
      "200": {
        start: {
          line: 803,
          column: 6
        },
        end: {
          line: 806,
          column: 8
        }
      },
      "201": {
        start: {
          line: 811,
          column: 4
        },
        end: {
          line: 829,
          column: 6
        }
      },
      "202": {
        start: {
          line: 833,
          column: 4
        },
        end: {
          line: 835,
          column: 5
        }
      },
      "203": {
        start: {
          line: 834,
          column: 6
        },
        end: {
          line: 834,
          column: 76
        }
      },
      "204": {
        start: {
          line: 839,
          column: 4
        },
        end: {
          line: 845,
          column: 5
        }
      },
      "205": {
        start: {
          line: 840,
          column: 6
        },
        end: {
          line: 840,
          column: 28
        }
      },
      "206": {
        start: {
          line: 841,
          column: 6
        },
        end: {
          line: 841,
          column: 21
        }
      },
      "207": {
        start: {
          line: 842,
          column: 6
        },
        end: {
          line: 842,
          column: 33
        }
      },
      "208": {
        start: {
          line: 844,
          column: 6
        },
        end: {
          line: 844,
          column: 54
        }
      },
      "209": {
        start: {
          line: 849,
          column: 0
        },
        end: {
          line: 849,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 7,
            column: 28
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 51,
            column: 3
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        },
        loc: {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 212,
            column: 3
          }
        },
        line: 53
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 195,
            column: 60
          },
          end: {
            line: 195,
            column: 61
          }
        },
        loc: {
          start: {
            line: 195,
            column: 65
          },
          end: {
            line: 195,
            column: 74
          }
        },
        line: 195
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 214,
            column: 2
          },
          end: {
            line: 214,
            column: 3
          }
        },
        loc: {
          start: {
            line: 214,
            column: 37
          },
          end: {
            line: 260,
            column: 3
          }
        },
        line: 214
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 262,
            column: 2
          },
          end: {
            line: 262,
            column: 3
          }
        },
        loc: {
          start: {
            line: 262,
            column: 36
          },
          end: {
            line: 292,
            column: 3
          }
        },
        line: 262
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 294,
            column: 2
          },
          end: {
            line: 294,
            column: 3
          }
        },
        loc: {
          start: {
            line: 294,
            column: 48
          },
          end: {
            line: 346,
            column: 3
          }
        },
        line: 294
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 348,
            column: 2
          },
          end: {
            line: 348,
            column: 3
          }
        },
        loc: {
          start: {
            line: 348,
            column: 41
          },
          end: {
            line: 371,
            column: 3
          }
        },
        line: 348
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 363,
            column: 29
          },
          end: {
            line: 363,
            column: 30
          }
        },
        loc: {
          start: {
            line: 363,
            column: 34
          },
          end: {
            line: 363,
            column: 63
          }
        },
        line: 363
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 373,
            column: 2
          },
          end: {
            line: 373,
            column: 3
          }
        },
        loc: {
          start: {
            line: 373,
            column: 43
          },
          end: {
            line: 440,
            column: 3
          }
        },
        line: 373
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 430,
            column: 35
          },
          end: {
            line: 430,
            column: 36
          }
        },
        loc: {
          start: {
            line: 430,
            column: 40
          },
          end: {
            line: 430,
            column: 69
          }
        },
        line: 430
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 442,
            column: 2
          },
          end: {
            line: 442,
            column: 3
          }
        },
        loc: {
          start: {
            line: 442,
            column: 93
          },
          end: {
            line: 474,
            column: 3
          }
        },
        line: 442
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 476,
            column: 2
          },
          end: {
            line: 476,
            column: 3
          }
        },
        loc: {
          start: {
            line: 476,
            column: 53
          },
          end: {
            line: 502,
            column: 3
          }
        },
        line: 476
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 490,
            column: 22
          },
          end: {
            line: 490,
            column: 23
          }
        },
        loc: {
          start: {
            line: 490,
            column: 30
          },
          end: {
            line: 493,
            column: 7
          }
        },
        line: 490
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 504,
            column: 2
          },
          end: {
            line: 504,
            column: 3
          }
        },
        loc: {
          start: {
            line: 504,
            column: 50
          },
          end: {
            line: 536,
            column: 3
          }
        },
        line: 504
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 538,
            column: 2
          },
          end: {
            line: 538,
            column: 3
          }
        },
        loc: {
          start: {
            line: 538,
            column: 46
          },
          end: {
            line: 571,
            column: 3
          }
        },
        line: 538
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 573,
            column: 2
          },
          end: {
            line: 573,
            column: 3
          }
        },
        loc: {
          start: {
            line: 573,
            column: 41
          },
          end: {
            line: 594,
            column: 3
          }
        },
        line: 573
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 596,
            column: 2
          },
          end: {
            line: 596,
            column: 3
          }
        },
        loc: {
          start: {
            line: 596,
            column: 96
          },
          end: {
            line: 623,
            column: 3
          }
        },
        line: 596
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 625,
            column: 2
          },
          end: {
            line: 625,
            column: 3
          }
        },
        loc: {
          start: {
            line: 625,
            column: 43
          },
          end: {
            line: 650,
            column: 3
          }
        },
        line: 625
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 638,
            column: 25
          },
          end: {
            line: 638,
            column: 26
          }
        },
        loc: {
          start: {
            line: 638,
            column: 36
          },
          end: {
            line: 641,
            column: 7
          }
        },
        line: 638
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 652,
            column: 2
          },
          end: {
            line: 652,
            column: 3
          }
        },
        loc: {
          start: {
            line: 652,
            column: 46
          },
          end: {
            line: 710,
            column: 3
          }
        },
        line: 652
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 694,
            column: 31
          },
          end: {
            line: 694,
            column: 32
          }
        },
        loc: {
          start: {
            line: 694,
            column: 46
          },
          end: {
            line: 700,
            column: 9
          }
        },
        line: 694
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 712,
            column: 2
          },
          end: {
            line: 712,
            column: 3
          }
        },
        loc: {
          start: {
            line: 712,
            column: 36
          },
          end: {
            line: 777,
            column: 3
          }
        },
        line: 712
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 779,
            column: 2
          },
          end: {
            line: 779,
            column: 3
          }
        },
        loc: {
          start: {
            line: 779,
            column: 22
          },
          end: {
            line: 808,
            column: 3
          }
        },
        line: 779
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 810,
            column: 2
          },
          end: {
            line: 810,
            column: 3
          }
        },
        loc: {
          start: {
            line: 810,
            column: 36
          },
          end: {
            line: 830,
            column: 3
          }
        },
        line: 810
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 832,
            column: 2
          },
          end: {
            line: 832,
            column: 3
          }
        },
        loc: {
          start: {
            line: 832,
            column: 22
          },
          end: {
            line: 836,
            column: 3
          }
        },
        line: 832
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 838,
            column: 2
          },
          end: {
            line: 838,
            column: 3
          }
        },
        loc: {
          start: {
            line: 838,
            column: 16
          },
          end: {
            line: 846,
            column: 3
          }
        },
        line: 838
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 14
          },
          end: {
            line: 7,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 7,
            column: 24
          },
          end: {
            line: 7,
            column: 26
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 11,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 34
          }
        }, {
          start: {
            line: 8,
            column: 38
          },
          end: {
            line: 11,
            column: 5
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        }, {
          start: {
            line: 189,
            column: 11
          },
          end: {
            line: 211,
            column: 5
          }
        }],
        line: 172
      },
      "3": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "4": {
        loc: {
          start: {
            line: 228,
            column: 6
          },
          end: {
            line: 228,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 6
          },
          end: {
            line: 228,
            column: 23
          }
        }, {
          start: {
            line: 228,
            column: 27
          },
          end: {
            line: 228,
            column: 33
          }
        }],
        line: 228
      },
      "5": {
        loc: {
          start: {
            line: 229,
            column: 6
          },
          end: {
            line: 229,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 6
          },
          end: {
            line: 229,
            column: 23
          }
        }, {
          start: {
            line: 229,
            column: 27
          },
          end: {
            line: 229,
            column: 35
          }
        }],
        line: 229
      },
      "6": {
        loc: {
          start: {
            line: 230,
            column: 6
          },
          end: {
            line: 230,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 6
          },
          end: {
            line: 230,
            column: 21
          }
        }, {
          start: {
            line: 230,
            column: 25
          },
          end: {
            line: 230,
            column: 37
          }
        }],
        line: 230
      },
      "7": {
        loc: {
          start: {
            line: 231,
            column: 6
          },
          end: {
            line: 231,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 6
          },
          end: {
            line: 231,
            column: 25
          }
        }, {
          start: {
            line: 231,
            column: 29
          },
          end: {
            line: 231,
            column: 37
          }
        }],
        line: 231
      },
      "8": {
        loc: {
          start: {
            line: 235,
            column: 6
          },
          end: {
            line: 235,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 6
          },
          end: {
            line: 235,
            column: 24
          }
        }, {
          start: {
            line: 235,
            column: 28
          },
          end: {
            line: 235,
            column: 32
          }
        }],
        line: 235
      },
      "9": {
        loc: {
          start: {
            line: 236,
            column: 6
          },
          end: {
            line: 236,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 31
          },
          end: {
            line: 236,
            column: 69
          }
        }, {
          start: {
            line: 236,
            column: 72
          },
          end: {
            line: 236,
            column: 76
          }
        }],
        line: 236
      },
      "10": {
        loc: {
          start: {
            line: 237,
            column: 6
          },
          end: {
            line: 237,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 30
          },
          end: {
            line: 237,
            column: 67
          }
        }, {
          start: {
            line: 237,
            column: 70
          },
          end: {
            line: 237,
            column: 74
          }
        }],
        line: 237
      },
      "11": {
        loc: {
          start: {
            line: 238,
            column: 6
          },
          end: {
            line: 238,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 6
          },
          end: {
            line: 238,
            column: 27
          }
        }, {
          start: {
            line: 238,
            column: 31
          },
          end: {
            line: 238,
            column: 32
          }
        }],
        line: 238
      },
      "12": {
        loc: {
          start: {
            line: 239,
            column: 6
          },
          end: {
            line: 239,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 6
          },
          end: {
            line: 239,
            column: 27
          }
        }, {
          start: {
            line: 239,
            column: 31
          },
          end: {
            line: 239,
            column: 32
          }
        }],
        line: 239
      },
      "13": {
        loc: {
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 240,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 240,
            column: 37
          }
        }, {
          start: {
            line: 240,
            column: 41
          },
          end: {
            line: 240,
            column: 45
          }
        }],
        line: 240
      },
      "14": {
        loc: {
          start: {
            line: 279,
            column: 6
          },
          end: {
            line: 281,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 6
          },
          end: {
            line: 281,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "15": {
        loc: {
          start: {
            line: 306,
            column: 6
          },
          end: {
            line: 309,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 6
          },
          end: {
            line: 309,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "16": {
        loc: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "17": {
        loc: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "18": {
        loc: {
          start: {
            line: 328,
            column: 6
          },
          end: {
            line: 330,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 6
          },
          end: {
            line: 330,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "19": {
        loc: {
          start: {
            line: 348,
            column: 29
          },
          end: {
            line: 348,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 348,
            column: 37
          },
          end: {
            line: 348,
            column: 39
          }
        }],
        line: 348
      },
      "20": {
        loc: {
          start: {
            line: 373,
            column: 29
          },
          end: {
            line: 373,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 373,
            column: 39
          },
          end: {
            line: 373,
            column: 41
          }
        }],
        line: 373
      },
      "21": {
        loc: {
          start: {
            line: 377,
            column: 6
          },
          end: {
            line: 377,
            column: 14
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 377,
            column: 13
          },
          end: {
            line: 377,
            column: 14
          }
        }],
        line: 377
      },
      "22": {
        loc: {
          start: {
            line: 378,
            column: 6
          },
          end: {
            line: 378,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 378,
            column: 14
          },
          end: {
            line: 378,
            column: 16
          }
        }],
        line: 378
      },
      "23": {
        loc: {
          start: {
            line: 379,
            column: 6
          },
          end: {
            line: 379,
            column: 19
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 379,
            column: 15
          },
          end: {
            line: 379,
            column: 19
          }
        }],
        line: 379
      },
      "24": {
        loc: {
          start: {
            line: 380,
            column: 6
          },
          end: {
            line: 380,
            column: 23
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 380,
            column: 19
          },
          end: {
            line: 380,
            column: 23
          }
        }],
        line: 380
      },
      "25": {
        loc: {
          start: {
            line: 381,
            column: 6
          },
          end: {
            line: 381,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 381,
            column: 18
          },
          end: {
            line: 381,
            column: 22
          }
        }],
        line: 381
      },
      "26": {
        loc: {
          start: {
            line: 382,
            column: 6
          },
          end: {
            line: 382,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 382,
            column: 16
          },
          end: {
            line: 382,
            column: 20
          }
        }],
        line: 382
      },
      "27": {
        loc: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "28": {
        loc: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "29": {
        loc: {
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      },
      "30": {
        loc: {
          start: {
            line: 404,
            column: 4
          },
          end: {
            line: 407,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 4
          },
          end: {
            line: 407,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "31": {
        loc: {
          start: {
            line: 409,
            column: 24
          },
          end: {
            line: 409,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 409,
            column: 48
          },
          end: {
            line: 409,
            column: 83
          }
        }, {
          start: {
            line: 409,
            column: 86
          },
          end: {
            line: 409,
            column: 88
          }
        }],
        line: 409
      },
      "32": {
        loc: {
          start: {
            line: 442,
            column: 57
          },
          end: {
            line: 442,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 442,
            column: 68
          },
          end: {
            line: 442,
            column: 74
          }
        }],
        line: 442
      },
      "33": {
        loc: {
          start: {
            line: 442,
            column: 76
          },
          end: {
            line: 442,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 442,
            column: 87
          },
          end: {
            line: 442,
            column: 91
          }
        }],
        line: 442
      },
      "34": {
        loc: {
          start: {
            line: 455,
            column: 6
          },
          end: {
            line: 455,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 455,
            column: 17
          },
          end: {
            line: 455,
            column: 41
          }
        }, {
          start: {
            line: 455,
            column: 44
          },
          end: {
            line: 455,
            column: 48
          }
        }],
        line: 455
      },
      "35": {
        loc: {
          start: {
            line: 476,
            column: 40
          },
          end: {
            line: 476,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 476,
            column: 48
          },
          end: {
            line: 476,
            column: 51
          }
        }],
        line: 476
      },
      "36": {
        loc: {
          start: {
            line: 492,
            column: 18
          },
          end: {
            line: 492,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 492,
            column: 33
          },
          end: {
            line: 492,
            column: 57
          }
        }, {
          start: {
            line: 492,
            column: 60
          },
          end: {
            line: 492,
            column: 64
          }
        }],
        line: 492
      },
      "37": {
        loc: {
          start: {
            line: 518,
            column: 6
          },
          end: {
            line: 518,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 518,
            column: 6
          },
          end: {
            line: 518,
            column: 19
          }
        }, {
          start: {
            line: 518,
            column: 23
          },
          end: {
            line: 518,
            column: 27
          }
        }],
        line: 518
      },
      "38": {
        loc: {
          start: {
            line: 519,
            column: 6
          },
          end: {
            line: 519,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 519,
            column: 6
          },
          end: {
            line: 519,
            column: 19
          }
        }, {
          start: {
            line: 519,
            column: 23
          },
          end: {
            line: 519,
            column: 27
          }
        }],
        line: 519
      },
      "39": {
        loc: {
          start: {
            line: 520,
            column: 6
          },
          end: {
            line: 520,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 520,
            column: 6
          },
          end: {
            line: 520,
            column: 25
          }
        }, {
          start: {
            line: 520,
            column: 29
          },
          end: {
            line: 520,
            column: 33
          }
        }],
        line: 520
      },
      "40": {
        loc: {
          start: {
            line: 521,
            column: 6
          },
          end: {
            line: 521,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 6
          },
          end: {
            line: 521,
            column: 21
          }
        }, {
          start: {
            line: 521,
            column: 25
          },
          end: {
            line: 521,
            column: 34
          }
        }],
        line: 521
      },
      "41": {
        loc: {
          start: {
            line: 546,
            column: 6
          },
          end: {
            line: 549,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 546,
            column: 6
          },
          end: {
            line: 549,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 546
      },
      "42": {
        loc: {
          start: {
            line: 552,
            column: 4
          },
          end: {
            line: 554,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 552,
            column: 4
          },
          end: {
            line: 554,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 552
      },
      "43": {
        loc: {
          start: {
            line: 596,
            column: 60
          },
          end: {
            line: 596,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 596,
            column: 73
          },
          end: {
            line: 596,
            column: 77
          }
        }],
        line: 596
      },
      "44": {
        loc: {
          start: {
            line: 596,
            column: 79
          },
          end: {
            line: 596,
            column: 94
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 596,
            column: 90
          },
          end: {
            line: 596,
            column: 94
          }
        }],
        line: 596
      },
      "45": {
        loc: {
          start: {
            line: 609,
            column: 6
          },
          end: {
            line: 609,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 609,
            column: 17
          },
          end: {
            line: 609,
            column: 41
          }
        }, {
          start: {
            line: 609,
            column: 44
          },
          end: {
            line: 609,
            column: 48
          }
        }],
        line: 609
      },
      "46": {
        loc: {
          start: {
            line: 640,
            column: 18
          },
          end: {
            line: 640,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 640,
            column: 36
          },
          end: {
            line: 640,
            column: 63
          }
        }, {
          start: {
            line: 640,
            column: 66
          },
          end: {
            line: 640,
            column: 70
          }
        }],
        line: 640
      },
      "47": {
        loc: {
          start: {
            line: 652,
            column: 27
          },
          end: {
            line: 652,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 652,
            column: 39
          },
          end: {
            line: 652,
            column: 44
          }
        }],
        line: 652
      },
      "48": {
        loc: {
          start: {
            line: 662,
            column: 18
          },
          end: {
            line: 662,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 662,
            column: 18
          },
          end: {
            line: 662,
            column: 39
          }
        }, {
          start: {
            line: 662,
            column: 43
          },
          end: {
            line: 662,
            column: 60
          }
        }],
        line: 662
      },
      "49": {
        loc: {
          start: {
            line: 712,
            column: 16
          },
          end: {
            line: 712,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 712,
            column: 32
          },
          end: {
            line: 712,
            column: 34
          }
        }],
        line: 712
      },
      "50": {
        loc: {
          start: {
            line: 781,
            column: 6
          },
          end: {
            line: 783,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 781,
            column: 6
          },
          end: {
            line: 783,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 781
      },
      "51": {
        loc: {
          start: {
            line: 813,
            column: 19
          },
          end: {
            line: 813,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 813,
            column: 45
          },
          end: {
            line: 813,
            column: 80
          }
        }, {
          start: {
            line: 813,
            column: 83
          },
          end: {
            line: 813,
            column: 87
          }
        }],
        line: 813
      },
      "52": {
        loc: {
          start: {
            line: 814,
            column: 18
          },
          end: {
            line: 814,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 814,
            column: 42
          },
          end: {
            line: 814,
            column: 75
          }
        }, {
          start: {
            line: 814,
            column: 78
          },
          end: {
            line: 814,
            column: 82
          }
        }],
        line: 814
      },
      "53": {
        loc: {
          start: {
            line: 833,
            column: 4
          },
          end: {
            line: 835,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 833,
            column: 4
          },
          end: {
            line: 835,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 833
      },
      "54": {
        loc: {
          start: {
            line: 833,
            column: 8
          },
          end: {
            line: 833,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 833,
            column: 8
          },
          end: {
            line: 833,
            column: 27
          }
        }, {
          start: {
            line: 833,
            column: 31
          },
          end: {
            line: 833,
            column: 39
          }
        }],
        line: 833
      },
      "55": {
        loc: {
          start: {
            line: 839,
            column: 4
          },
          end: {
            line: 845,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 839,
            column: 4
          },
          end: {
            line: 845,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 839
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0],
      "21": [0],
      "22": [0],
      "23": [0],
      "24": [0],
      "25": [0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0],
      "34": [0, 0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0],
      "44": [0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0],
      "48": [0, 0],
      "49": [0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e12b8cc74ce730a33ee0c4baf6afe7d780babfad"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wiqnaul4a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wiqnaul4a();
const sqlite3 =
/* istanbul ignore next */
(cov_1wiqnaul4a().s[0]++, require('sqlite3').verbose());
const {
  open
} =
/* istanbul ignore next */
(cov_1wiqnaul4a().s[1]++, require('sqlite'));
const path =
/* istanbul ignore next */
(cov_1wiqnaul4a().s[2]++, require('path'));
const fs =
/* istanbul ignore next */
(cov_1wiqnaul4a().s[3]++, require('fs').promises);
class DeploymentRepository {
  constructor(options =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[0]++;
    cov_1wiqnaul4a().s[4]++;
    this.config =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[1][0]++, options.database) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[1][1]++, {
      type: 'sqlite',
      path: path.join(__dirname, '../../../logs/deployments.db')
    });
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[5]++;
    this.db = null;
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[6]++;
    this.logger = options.logger;
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[7]++;
    this.isInitialized = false;
  }
  async initialize() {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[1]++;
    cov_1wiqnaul4a().s[8]++;
    try {
      // Ensure database directory exists
      const dbDir =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[9]++, path.dirname(this.config.path));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[10]++;
      await fs.mkdir(dbDir, {
        recursive: true
      });

      // Open database connection
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[11]++;
      this.db = await open({
        filename: this.config.path,
        driver: sqlite3.Database
      });

      // Enable foreign keys
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[12]++;
      await this.db.exec('PRAGMA foreign_keys = ON');

      // Run migrations
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[13]++;
      await this.runMigrations();
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[14]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[15]++;
      this.logger?.info('Database initialized successfully', {
        path: this.config.path,
        type: this.config.type
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[16]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[17]++;
      this.logger?.error('Failed to initialize database', {
        error: error.message,
        path: this.config.path
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[18]++;
      throw error;
    }
  }
  async runMigrations() {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[2]++;
    const migrations =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[19]++, [{
      version: 1,
      name: 'initial_schema',
      sql: `
          CREATE TABLE IF NOT EXISTS deployments (
            id TEXT PRIMARY KEY,
            repository TEXT NOT NULL,
            branch TEXT NOT NULL DEFAULT 'main',
            status TEXT NOT NULL DEFAULT 'queued',
            type TEXT NOT NULL DEFAULT 'deployment',
            priority TEXT NOT NULL DEFAULT 'normal',
            requested_by TEXT NOT NULL,
            requested_at DATETIME NOT NULL,
            started_at DATETIME,
            completed_at DATETIME,
            correlation_id TEXT,
            trigger_type TEXT,
            webhook_data TEXT,
            parameters TEXT,
            backup_path TEXT,
            error_message TEXT,
            retry_count INTEGER DEFAULT 0,
            max_retries INTEGER DEFAULT 3,
            original_deployment_id TEXT,
            rollback_id TEXT,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (original_deployment_id) REFERENCES deployments(id)
          );
        `
    }, {
      version: 2,
      name: 'deployment_logs',
      sql: `
          CREATE TABLE IF NOT EXISTS deployment_logs (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            deployment_id TEXT NOT NULL,
            log_level TEXT NOT NULL DEFAULT 'info',
            log_type TEXT NOT NULL DEFAULT 'stdout',
            message TEXT NOT NULL,
            timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
            metadata TEXT,
            FOREIGN KEY (deployment_id) REFERENCES deployments(id) ON DELETE CASCADE
          );
          
          CREATE INDEX IF NOT EXISTS idx_deployment_logs_deployment_id 
          ON deployment_logs(deployment_id);
          
          CREATE INDEX IF NOT EXISTS idx_deployment_logs_timestamp 
          ON deployment_logs(timestamp);
        `
    }, {
      version: 3,
      name: 'deployment_metrics',
      sql: `
          CREATE TABLE IF NOT EXISTS deployment_metrics (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            deployment_id TEXT NOT NULL,
            metric_name TEXT NOT NULL,
            metric_value REAL NOT NULL,
            metric_unit TEXT,
            timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
            metadata TEXT,
            FOREIGN KEY (deployment_id) REFERENCES deployments(id) ON DELETE CASCADE
          );
          
          CREATE INDEX IF NOT EXISTS idx_deployment_metrics_deployment_id 
          ON deployment_metrics(deployment_id);
          
          CREATE INDEX IF NOT EXISTS idx_deployment_metrics_name 
          ON deployment_metrics(metric_name);
        `
    }, {
      version: 4,
      name: 'deployment_files',
      sql: `
          CREATE TABLE IF NOT EXISTS deployment_files (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            deployment_id TEXT NOT NULL,
            file_path TEXT NOT NULL,
            file_operation TEXT NOT NULL,
            file_size INTEGER,
            file_hash TEXT,
            backup_path TEXT,
            status TEXT NOT NULL DEFAULT 'pending',
            error_message TEXT,
            processed_at DATETIME,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (deployment_id) REFERENCES deployments(id) ON DELETE CASCADE
          );
          
          CREATE INDEX IF NOT EXISTS idx_deployment_files_deployment_id 
          ON deployment_files(deployment_id);
        `
    }, {
      version: 5,
      name: 'schema_migrations',
      sql: `
          CREATE TABLE IF NOT EXISTS schema_migrations (
            version INTEGER PRIMARY KEY,
            name TEXT NOT NULL,
            applied_at DATETIME DEFAULT CURRENT_TIMESTAMP
          );
        `
    }]);

    // Check if migrations table exists
    const hasMigrationsTable =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[20]++, await this.db.get(`
      SELECT name FROM sqlite_master 
      WHERE type='table' AND name='schema_migrations'
    `));
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[21]++;
    if (!hasMigrationsTable) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[2][0]++;
      cov_1wiqnaul4a().s[22]++;
      // Run all migrations for fresh database
      for (const migration of migrations) {
        /* istanbul ignore next */
        cov_1wiqnaul4a().s[23]++;
        await this.db.exec(migration.sql);
        /* istanbul ignore next */
        cov_1wiqnaul4a().s[24]++;
        this.logger?.debug('Applied migration', {
          version: migration.version,
          name: migration.name
        });
      }

      // Record all migrations as applied
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[25]++;
      for (const migration of migrations) {
        /* istanbul ignore next */
        cov_1wiqnaul4a().s[26]++;
        await this.db.run('INSERT OR IGNORE INTO schema_migrations (version, name) VALUES (?, ?)', [migration.version, migration.name]);
      }
    } else {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[2][1]++;
      // Run only pending migrations
      const appliedMigrations =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[27]++, await this.db.all('SELECT version FROM schema_migrations ORDER BY version'));
      const appliedVersions =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[28]++, new Set(appliedMigrations.map(m => {
        /* istanbul ignore next */
        cov_1wiqnaul4a().f[3]++;
        cov_1wiqnaul4a().s[29]++;
        return m.version;
      })));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[30]++;
      for (const migration of migrations) {
        /* istanbul ignore next */
        cov_1wiqnaul4a().s[31]++;
        if (!appliedVersions.has(migration.version)) {
          /* istanbul ignore next */
          cov_1wiqnaul4a().b[3][0]++;
          cov_1wiqnaul4a().s[32]++;
          await this.db.exec(migration.sql);
          /* istanbul ignore next */
          cov_1wiqnaul4a().s[33]++;
          await this.db.run('INSERT INTO schema_migrations (version, name) VALUES (?, ?)', [migration.version, migration.name]);
          /* istanbul ignore next */
          cov_1wiqnaul4a().s[34]++;
          this.logger?.info('Applied migration', {
            version: migration.version,
            name: migration.name
          });
        } else
        /* istanbul ignore next */
        {
          cov_1wiqnaul4a().b[3][1]++;
        }
      }
    }
  }
  async createDeployment(deployment) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[4]++;
    cov_1wiqnaul4a().s[35]++;
    this.ensureInitialized();
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[36]++, `
      INSERT INTO deployments (
        id, repository, branch, status, type, priority, requested_by, 
        requested_at, correlation_id, trigger_type, webhook_data, 
        parameters, retry_count, max_retries, original_deployment_id
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `);
    const params =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[37]++, [deployment.id, deployment.repository,
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[4][0]++, deployment.branch) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[4][1]++, 'main'),
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[5][0]++, deployment.status) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[5][1]++, 'queued'),
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[6][0]++, deployment.type) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[6][1]++, 'deployment'),
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[7][0]++, deployment.priority) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[7][1]++, 'normal'), deployment.requestedBy, deployment.requestedAt, deployment.correlationId,
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[8][0]++, deployment.trigger) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[8][1]++, null), deployment.webhookData ?
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[9][0]++, JSON.stringify(deployment.webhookData)) :
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[9][1]++, null), deployment.parameters ?
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[10][0]++, JSON.stringify(deployment.parameters)) :
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[10][1]++, null),
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[11][0]++, deployment.retryCount) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[11][1]++, 0),
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[12][0]++, deployment.maxRetries) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[12][1]++, 3),
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[13][0]++, deployment.originalDeploymentId) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[13][1]++, null)]);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[38]++;
    try {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[39]++;
      await this.db.run(sql, params);
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[40]++;
      this.logger?.debug('Deployment created in database', {
        deploymentId: deployment.id,
        repository: deployment.repository
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[41]++;
      return deployment.id;
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[42]++;
      this.logger?.error('Failed to create deployment', {
        deploymentId: deployment.id,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[43]++;
      throw error;
    }
  }
  async getDeployment(deploymentId) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[5]++;
    cov_1wiqnaul4a().s[44]++;
    this.ensureInitialized();
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[45]++, `
      SELECT 
        id, repository, branch, status, type, priority, requested_by,
        requested_at, started_at, completed_at, correlation_id,
        trigger_type, webhook_data, parameters, backup_path,
        error_message, retry_count, max_retries, original_deployment_id,
        rollback_id, created_at, updated_at
      FROM deployments 
      WHERE id = ?
    `);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[46]++;
    try {
      const deployment =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[47]++, await this.db.get(sql, [deploymentId]));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[48]++;
      if (deployment) {
        /* istanbul ignore next */
        cov_1wiqnaul4a().b[14][0]++;
        cov_1wiqnaul4a().s[49]++;
        return this.deserializeDeployment(deployment);
      } else
      /* istanbul ignore next */
      {
        cov_1wiqnaul4a().b[14][1]++;
      }
      cov_1wiqnaul4a().s[50]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[51]++;
      this.logger?.error('Failed to get deployment', {
        deploymentId,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[52]++;
      throw error;
    }
  }
  async updateDeployment(deploymentId, updates) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[6]++;
    cov_1wiqnaul4a().s[53]++;
    this.ensureInitialized();
    const allowedFields =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[54]++, ['status', 'started_at', 'completed_at', 'backup_path', 'error_message', 'retry_count', 'rollback_id', 'updated_at']);
    const setClause =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[55]++, []);
    const params =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[56]++, []);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[57]++;
    for (const [key, value] of Object.entries(updates)) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[58]++;
      if (allowedFields.includes(key)) {
        /* istanbul ignore next */
        cov_1wiqnaul4a().b[15][0]++;
        cov_1wiqnaul4a().s[59]++;
        setClause.push(`${key} = ?`);
        /* istanbul ignore next */
        cov_1wiqnaul4a().s[60]++;
        params.push(value);
      } else
      /* istanbul ignore next */
      {
        cov_1wiqnaul4a().b[15][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[61]++;
    if (setClause.length === 0) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[16][0]++;
      cov_1wiqnaul4a().s[62]++;
      throw new Error('No valid fields to update');
    } else
    /* istanbul ignore next */
    {
      cov_1wiqnaul4a().b[16][1]++;
    }

    // Always update the updated_at timestamp
    cov_1wiqnaul4a().s[63]++;
    if (!updates.updated_at) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[17][0]++;
      cov_1wiqnaul4a().s[64]++;
      setClause.push('updated_at = CURRENT_TIMESTAMP');
    } else
    /* istanbul ignore next */
    {
      cov_1wiqnaul4a().b[17][1]++;
    }
    cov_1wiqnaul4a().s[65]++;
    params.push(deploymentId);
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[66]++, `UPDATE deployments SET ${setClause.join(', ')} WHERE id = ?`);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[67]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[68]++, await this.db.run(sql, params));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[69]++;
      if (result.changes === 0) {
        /* istanbul ignore next */
        cov_1wiqnaul4a().b[18][0]++;
        cov_1wiqnaul4a().s[70]++;
        throw new Error(`Deployment ${deploymentId} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_1wiqnaul4a().b[18][1]++;
      }
      cov_1wiqnaul4a().s[71]++;
      this.logger?.debug('Deployment updated', {
        deploymentId,
        updatedFields: Object.keys(updates)
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[72]++;
      return result.changes;
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[73]++;
      this.logger?.error('Failed to update deployment', {
        deploymentId,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[74]++;
      throw error;
    }
  }
  async getRecentDeployments(limit =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[19][0]++, 10)) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[7]++;
    cov_1wiqnaul4a().s[75]++;
    this.ensureInitialized();
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[76]++, `
      SELECT 
        id, repository, branch, status, type, priority, requested_by,
        requested_at, started_at, completed_at, correlation_id,
        trigger_type, error_message, retry_count, created_at
      FROM deployments 
      ORDER BY requested_at DESC 
      LIMIT ?
    `);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[77]++;
    try {
      const deployments =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[78]++, await this.db.all(sql, [limit]));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[79]++;
      return deployments.map(d => {
        /* istanbul ignore next */
        cov_1wiqnaul4a().f[8]++;
        cov_1wiqnaul4a().s[80]++;
        return this.deserializeDeployment(d);
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[81]++;
      this.logger?.error('Failed to get recent deployments', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[82]++;
      throw error;
    }
  }
  async getDeploymentHistory(options =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[20][0]++, {})) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[9]++;
    cov_1wiqnaul4a().s[83]++;
    this.ensureInitialized();
    const {
      page =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[21][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[22][0]++, 20),
      status =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[23][0]++, null),
      repository =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[24][0]++, null),
      startDate =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[25][0]++, null),
      endDate =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[26][0]++, null)
    } =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[84]++, options);
    const offset =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[85]++, (page - 1) * limit);
    const conditions =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[86]++, []);
    const params =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[87]++, []);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[88]++;
    if (status) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[27][0]++;
      cov_1wiqnaul4a().s[89]++;
      conditions.push('status = ?');
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[90]++;
      params.push(status);
    } else
    /* istanbul ignore next */
    {
      cov_1wiqnaul4a().b[27][1]++;
    }
    cov_1wiqnaul4a().s[91]++;
    if (repository) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[28][0]++;
      cov_1wiqnaul4a().s[92]++;
      conditions.push('repository = ?');
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[93]++;
      params.push(repository);
    } else
    /* istanbul ignore next */
    {
      cov_1wiqnaul4a().b[28][1]++;
    }
    cov_1wiqnaul4a().s[94]++;
    if (startDate) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[29][0]++;
      cov_1wiqnaul4a().s[95]++;
      conditions.push('requested_at >= ?');
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[96]++;
      params.push(startDate);
    } else
    /* istanbul ignore next */
    {
      cov_1wiqnaul4a().b[29][1]++;
    }
    cov_1wiqnaul4a().s[97]++;
    if (endDate) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[30][0]++;
      cov_1wiqnaul4a().s[98]++;
      conditions.push('requested_at <= ?');
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[99]++;
      params.push(endDate);
    } else
    /* istanbul ignore next */
    {
      cov_1wiqnaul4a().b[30][1]++;
    }
    const whereClause =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[100]++, conditions.length > 0 ?
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[31][0]++, `WHERE ${conditions.join(' AND ')}`) :
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[31][1]++, ''));

    // Get total count
    const countSql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[101]++, `SELECT COUNT(*) as total FROM deployments ${whereClause}`);
    const {
      total
    } =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[102]++, await this.db.get(countSql, params));

    // Get page data
    const dataSql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[103]++, `
      SELECT 
        id, repository, branch, status, type, priority, requested_by,
        requested_at, started_at, completed_at, correlation_id,
        trigger_type, error_message, retry_count, created_at
      FROM deployments 
      ${whereClause}
      ORDER BY requested_at DESC 
      LIMIT ? OFFSET ?
    `);
    const deployments =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[104]++, await this.db.all(dataSql, [...params, limit, offset]));
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[105]++;
    return {
      deployments: deployments.map(d => {
        /* istanbul ignore next */
        cov_1wiqnaul4a().f[10]++;
        cov_1wiqnaul4a().s[106]++;
        return this.deserializeDeployment(d);
      }),
      pagination: {
        page,
        limit,
        total,
        pages: Math.ceil(total / limit),
        hasNext: page * limit < total,
        hasPrev: page > 1
      }
    };
  }
  async addDeploymentLog(deploymentId, logType, message, logLevel =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[32][0]++, 'info'), metadata =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[33][0]++, null)) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[11]++;
    cov_1wiqnaul4a().s[107]++;
    this.ensureInitialized();
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[108]++, `
      INSERT INTO deployment_logs (deployment_id, log_level, log_type, message, metadata)
      VALUES (?, ?, ?, ?, ?)
    `);
    const params =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[109]++, [deploymentId, logLevel, logType, message, metadata ?
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[34][0]++, JSON.stringify(metadata)) :
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[34][1]++, null)]);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[110]++;
    try {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[111]++;
      await this.db.run(sql, params);
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[112]++;
      this.logger?.debug('Deployment log added', {
        deploymentId,
        logType,
        logLevel
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[113]++;
      this.logger?.error('Failed to add deployment log', {
        deploymentId,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[114]++;
      throw error;
    }
  }
  async getDeploymentLogs(deploymentId, limit =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[35][0]++, 100)) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[12]++;
    cov_1wiqnaul4a().s[115]++;
    this.ensureInitialized();
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[116]++, `
      SELECT log_level, log_type, message, timestamp, metadata
      FROM deployment_logs 
      WHERE deployment_id = ?
      ORDER BY timestamp DESC
      LIMIT ?
    `);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[117]++;
    try {
      const logs =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[118]++, await this.db.all(sql, [deploymentId, limit]));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[119]++;
      return logs.map(log => {
        /* istanbul ignore next */
        cov_1wiqnaul4a().f[13]++;
        cov_1wiqnaul4a().s[120]++;
        return {
          ...log,
          metadata: log.metadata ?
          /* istanbul ignore next */
          (cov_1wiqnaul4a().b[36][0]++, JSON.parse(log.metadata)) :
          /* istanbul ignore next */
          (cov_1wiqnaul4a().b[36][1]++, null)
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[121]++;
      this.logger?.error('Failed to get deployment logs', {
        deploymentId,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[122]++;
      throw error;
    }
  }
  async addDeploymentFile(deploymentId, fileData) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[14]++;
    cov_1wiqnaul4a().s[123]++;
    this.ensureInitialized();
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[124]++, `
      INSERT INTO deployment_files (
        deployment_id, file_path, file_operation, file_size, 
        file_hash, backup_path, status
      ) VALUES (?, ?, ?, ?, ?, ?, ?)
    `);
    const params =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[125]++, [deploymentId, fileData.path, fileData.operation,
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[37][0]++, fileData.size) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[37][1]++, null),
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[38][0]++, fileData.hash) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[38][1]++, null),
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[39][0]++, fileData.backupPath) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[39][1]++, null),
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[40][0]++, fileData.status) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[40][1]++, 'pending')]);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[126]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[127]++, await this.db.run(sql, params));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[128]++;
      return result.lastID;
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[129]++;
      this.logger?.error('Failed to add deployment file', {
        deploymentId,
        filePath: fileData.path,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[130]++;
      throw error;
    }
  }
  async updateDeploymentFile(fileId, updates) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[15]++;
    cov_1wiqnaul4a().s[131]++;
    this.ensureInitialized();
    const allowedFields =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[132]++, ['status', 'error_message', 'processed_at']);
    const setClause =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[133]++, []);
    const params =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[134]++, []);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[135]++;
    for (const [key, value] of Object.entries(updates)) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[136]++;
      if (allowedFields.includes(key)) {
        /* istanbul ignore next */
        cov_1wiqnaul4a().b[41][0]++;
        cov_1wiqnaul4a().s[137]++;
        setClause.push(`${key} = ?`);
        /* istanbul ignore next */
        cov_1wiqnaul4a().s[138]++;
        params.push(value);
      } else
      /* istanbul ignore next */
      {
        cov_1wiqnaul4a().b[41][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[139]++;
    if (setClause.length === 0) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[42][0]++;
      cov_1wiqnaul4a().s[140]++;
      throw new Error('No valid fields to update');
    } else
    /* istanbul ignore next */
    {
      cov_1wiqnaul4a().b[42][1]++;
    }
    cov_1wiqnaul4a().s[141]++;
    params.push(fileId);
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[142]++, `UPDATE deployment_files SET ${setClause.join(', ')} WHERE id = ?`);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[143]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[144]++, await this.db.run(sql, params));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[145]++;
      return result.changes;
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[146]++;
      this.logger?.error('Failed to update deployment file', {
        fileId,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[147]++;
      throw error;
    }
  }
  async getDeploymentFiles(deploymentId) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[16]++;
    cov_1wiqnaul4a().s[148]++;
    this.ensureInitialized();
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[149]++, `
      SELECT id, file_path, file_operation, file_size, file_hash,
             backup_path, status, error_message, processed_at, created_at
      FROM deployment_files 
      WHERE deployment_id = ?
      ORDER BY created_at ASC
    `);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[150]++;
    try {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[151]++;
      return await this.db.all(sql, [deploymentId]);
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[152]++;
      this.logger?.error('Failed to get deployment files', {
        deploymentId,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[153]++;
      throw error;
    }
  }
  async recordMetric(deploymentId, metricName, metricValue, metricUnit =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[43][0]++, null), metadata =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[44][0]++, null)) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[17]++;
    cov_1wiqnaul4a().s[154]++;
    this.ensureInitialized();
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[155]++, `
      INSERT INTO deployment_metrics (deployment_id, metric_name, metric_value, metric_unit, metadata)
      VALUES (?, ?, ?, ?, ?)
    `);
    const params =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[156]++, [deploymentId, metricName, metricValue, metricUnit, metadata ?
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[45][0]++, JSON.stringify(metadata)) :
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[45][1]++, null)]);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[157]++;
    try {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[158]++;
      await this.db.run(sql, params);
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[159]++;
      this.logger?.error('Failed to record metric', {
        deploymentId,
        metricName,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[160]++;
      throw error;
    }
  }
  async getDeploymentMetrics(deploymentId) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[18]++;
    cov_1wiqnaul4a().s[161]++;
    this.ensureInitialized();
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[162]++, `
      SELECT metric_name, metric_value, metric_unit, timestamp, metadata
      FROM deployment_metrics 
      WHERE deployment_id = ?
      ORDER BY timestamp ASC
    `);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[163]++;
    try {
      const metrics =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[164]++, await this.db.all(sql, [deploymentId]));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[165]++;
      return metrics.map(metric => {
        /* istanbul ignore next */
        cov_1wiqnaul4a().f[19]++;
        cov_1wiqnaul4a().s[166]++;
        return {
          ...metric,
          metadata: metric.metadata ?
          /* istanbul ignore next */
          (cov_1wiqnaul4a().b[46][0]++, JSON.parse(metric.metadata)) :
          /* istanbul ignore next */
          (cov_1wiqnaul4a().b[46][1]++, null)
        };
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[167]++;
      this.logger?.error('Failed to get deployment metrics', {
        deploymentId,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[168]++;
      throw error;
    }
  }
  async getDeploymentStats(timeRange =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[47][0]++, '24h')) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[20]++;
    cov_1wiqnaul4a().s[169]++;
    this.ensureInitialized();
    const timeRanges =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[170]++, {
      '1h': 'datetime("now", "-1 hour")',
      '24h': 'datetime("now", "-1 day")',
      '7d': 'datetime("now", "-7 days")',
      '30d': 'datetime("now", "-30 days")'
    });
    const since =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[171]++,
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[48][0]++, timeRanges[timeRange]) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[48][1]++, timeRanges['24h']));
    const sql =
    /* istanbul ignore next */
    (cov_1wiqnaul4a().s[172]++, `
      SELECT 
        status,
        COUNT(*) as count,
        AVG(
          CASE 
            WHEN started_at IS NOT NULL AND completed_at IS NOT NULL 
            THEN (julianday(completed_at) - julianday(started_at)) * 24 * 60 * 60
            ELSE NULL 
          END
        ) as avg_duration_seconds
      FROM deployments 
      WHERE requested_at >= ${since}
      GROUP BY status
    `);
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[173]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[174]++, await this.db.all(sql));
      const totalSql =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[175]++, `
        SELECT COUNT(*) as total_deployments
        FROM deployments 
        WHERE requested_at >= ${since}
      `);
      const {
        total_deployments
      } =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[176]++, await this.db.get(totalSql));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[177]++;
      return {
        timeRange,
        totalDeployments: total_deployments,
        byStatus: stats.reduce((acc, stat) => {
          /* istanbul ignore next */
          cov_1wiqnaul4a().f[21]++;
          cov_1wiqnaul4a().s[178]++;
          acc[stat.status] = {
            count: stat.count,
            avgDurationSeconds: stat.avg_duration_seconds
          };
          /* istanbul ignore next */
          cov_1wiqnaul4a().s[179]++;
          return acc;
        }, {})
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[180]++;
      this.logger?.error('Failed to get deployment stats', {
        timeRange,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[181]++;
      throw error;
    }
  }
  async cleanup(olderThanDays =
  /* istanbul ignore next */
  (cov_1wiqnaul4a().b[49][0]++, 30)) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[22]++;
    cov_1wiqnaul4a().s[182]++;
    this.ensureInitialized();
    /* istanbul ignore next */
    cov_1wiqnaul4a().s[183]++;
    try {
      const cutoffDate =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[184]++, new Date());
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[185]++;
      cutoffDate.setDate(cutoffDate.getDate() - olderThanDays);

      // Delete old logs first (foreign key constraint)
      const logsResult =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[186]++, await this.db.run(`
        DELETE FROM deployment_logs 
        WHERE deployment_id IN (
          SELECT id FROM deployments 
          WHERE completed_at < ? 
          AND status IN ('completed', 'failed', 'rolled-back')
        )
      `, [cutoffDate.toISOString()]));

      // Delete old metrics
      const metricsResult =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[187]++, await this.db.run(`
        DELETE FROM deployment_metrics 
        WHERE deployment_id IN (
          SELECT id FROM deployments 
          WHERE completed_at < ? 
          AND status IN ('completed', 'failed', 'rolled-back')
        )
      `, [cutoffDate.toISOString()]));

      // Delete old files
      const filesResult =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[188]++, await this.db.run(`
        DELETE FROM deployment_files 
        WHERE deployment_id IN (
          SELECT id FROM deployments 
          WHERE completed_at < ? 
          AND status IN ('completed', 'failed', 'rolled-back')
        )
      `, [cutoffDate.toISOString()]));

      // Delete old deployments
      const deploymentsResult =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[189]++, await this.db.run(`
        DELETE FROM deployments 
        WHERE completed_at < ? 
        AND status IN ('completed', 'failed', 'rolled-back')
      `, [cutoffDate.toISOString()]));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[190]++;
      this.logger?.info('Database cleanup completed', {
        olderThanDays,
        deletedLogs: logsResult.changes,
        deletedMetrics: metricsResult.changes,
        deletedFiles: filesResult.changes,
        deletedDeployments: deploymentsResult.changes
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[191]++;
      return {
        deletedLogs: logsResult.changes,
        deletedMetrics: metricsResult.changes,
        deletedFiles: filesResult.changes,
        deletedDeployments: deploymentsResult.changes
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[192]++;
      this.logger?.error('Database cleanup failed', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[193]++;
      throw error;
    }
  }
  async checkHealth() {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[23]++;
    cov_1wiqnaul4a().s[194]++;
    try {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[195]++;
      if (!this.db) {
        /* istanbul ignore next */
        cov_1wiqnaul4a().b[50][0]++;
        cov_1wiqnaul4a().s[196]++;
        return {
          status: 'unhealthy',
          error: 'Database not initialized'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1wiqnaul4a().b[50][1]++;
      }

      // Test database connection
      cov_1wiqnaul4a().s[197]++;
      await this.db.get('SELECT 1');

      // Get basic stats
      const stats =
      /* istanbul ignore next */
      (cov_1wiqnaul4a().s[198]++, await this.db.get(`
        SELECT 
          (SELECT COUNT(*) FROM deployments) as total_deployments,
          (SELECT COUNT(*) FROM deployments WHERE status = 'queued') as queued,
          (SELECT COUNT(*) FROM deployments WHERE status = 'in-progress') as in_progress
      `));
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[199]++;
      return {
        status: 'healthy',
        stats,
        path: this.config.path
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[200]++;
      return {
        status: 'unhealthy',
        error: error.message
      };
    }
  }
  deserializeDeployment(deployment) {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[24]++;
    cov_1wiqnaul4a().s[201]++;
    return {
      ...deployment,
      webhookData: deployment.webhook_data ?
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[51][0]++, JSON.parse(deployment.webhook_data)) :
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[51][1]++, null),
      parameters: deployment.parameters ?
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[52][0]++, JSON.parse(deployment.parameters)) :
      /* istanbul ignore next */
      (cov_1wiqnaul4a().b[52][1]++, null),
      requestedBy: deployment.requested_by,
      requestedAt: deployment.requested_at,
      startedAt: deployment.started_at,
      completedAt: deployment.completed_at,
      correlationId: deployment.correlation_id,
      triggerType: deployment.trigger_type,
      backupPath: deployment.backup_path,
      errorMessage: deployment.error_message,
      retryCount: deployment.retry_count,
      maxRetries: deployment.max_retries,
      originalDeploymentId: deployment.original_deployment_id,
      rollbackId: deployment.rollback_id,
      createdAt: deployment.created_at,
      updatedAt: deployment.updated_at
    };
  }
  ensureInitialized() {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[25]++;
    cov_1wiqnaul4a().s[202]++;
    if (
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[54][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_1wiqnaul4a().b[54][1]++, !this.db)) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[53][0]++;
      cov_1wiqnaul4a().s[203]++;
      throw new Error('Database not initialized. Call initialize() first.');
    } else
    /* istanbul ignore next */
    {
      cov_1wiqnaul4a().b[53][1]++;
    }
  }
  async close() {
    /* istanbul ignore next */
    cov_1wiqnaul4a().f[26]++;
    cov_1wiqnaul4a().s[204]++;
    if (this.db) {
      /* istanbul ignore next */
      cov_1wiqnaul4a().b[55][0]++;
      cov_1wiqnaul4a().s[205]++;
      await this.db.close();
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[206]++;
      this.db = null;
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[207]++;
      this.isInitialized = false;
      /* istanbul ignore next */
      cov_1wiqnaul4a().s[208]++;
      this.logger?.info('Database connection closed');
    } else
    /* istanbul ignore next */
    {
      cov_1wiqnaul4a().b[55][1]++;
    }
  }
}
/* istanbul ignore next */
cov_1wiqnaul4a().s[209]++;
module.exports = DeploymentRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,