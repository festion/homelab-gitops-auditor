{"version":3,"names":["fs","require","promises","path","createWriteStream","Transform","Logger","constructor","options","level","format","destinations","logFile","maxSize","retention","levels","error","warn","info","debug","trace","colors","reset","fileStream","currentLogSize","initializeFileLogging","includes","logDir","dirname","mkdir","recursive","stats","stat","size","flags","on","console","shouldLog","formatMessage","message","metadata","timestamp","Date","toISOString","logEntry","toUpperCase","JSON","stringify","metaStr","Object","keys","length","formatConsoleMessage","color","log","consoleMessage","fileMessage","logLine","needsRotation","rotateLog","write","Buffer","byteLength","messageSize","maxBytes","parseSize","sizeStr","units","match","value","parseInt","unit","end","replace","rotatedFile","rename","cleanupOldLogs","baseName","basename","files","readdir","logFiles","filter","file","startsWith","map","join","cutoffDate","setDate","getDate","mtime","unlink","child","ChildLogger","createRequestLogger","req","res","next","startTime","now","requestId","correlationId","requestLogger","method","url","userAgent","get","ip","originalSend","send","body","duration","statusCode","responseSize","call","logger","getLogStats","fileLogging","fileStats","modified","setLevel","hasOwnProperty","newLevel","Error","close","Promise","resolve","parent","additionalMetadata","combinedMetadata","module","exports"],"sources":["logger.js"],"sourcesContent":["const fs = require('fs').promises;\nconst path = require('path');\nconst { createWriteStream } = require('fs');\nconst { Transform } = require('stream');\n\nclass Logger {\n  constructor(options = {}) {\n    this.level = options.level || 'info';\n    this.format = options.format || 'json';\n    this.destinations = options.destinations || ['console'];\n    this.logFile = options.logFile || null;\n    this.maxSize = options.maxSize || '100MB';\n    this.retention = options.retention || 30;\n    \n    this.levels = {\n      error: 0,\n      warn: 1,\n      info: 2,\n      debug: 3,\n      trace: 4\n    };\n    \n    this.colors = {\n      error: '\\x1b[31m',\n      warn: '\\x1b[33m', \n      info: '\\x1b[36m',\n      debug: '\\x1b[35m',\n      trace: '\\x1b[37m',\n      reset: '\\x1b[0m'\n    };\n    \n    this.fileStream = null;\n    this.currentLogSize = 0;\n    \n    this.initializeFileLogging();\n  }\n\n  async initializeFileLogging() {\n    if (this.destinations.includes('file') && this.logFile) {\n      try {\n        // Ensure log directory exists\n        const logDir = path.dirname(this.logFile);\n        await fs.mkdir(logDir, { recursive: true });\n        \n        // Check current log file size\n        try {\n          const stats = await fs.stat(this.logFile);\n          this.currentLogSize = stats.size;\n        } catch (error) {\n          // File doesn't exist, will be created\n          this.currentLogSize = 0;\n        }\n        \n        // Create write stream\n        this.fileStream = createWriteStream(this.logFile, { flags: 'a' });\n        \n        this.fileStream.on('error', (error) => {\n          console.error('Logger file stream error:', error);\n        });\n        \n      } catch (error) {\n        console.error('Failed to initialize file logging:', error);\n      }\n    }\n  }\n\n  shouldLog(level) {\n    return this.levels[level] <= this.levels[this.level];\n  }\n\n  formatMessage(level, message, metadata = {}) {\n    const timestamp = new Date().toISOString();\n    \n    const logEntry = {\n      timestamp,\n      level: level.toUpperCase(),\n      message,\n      ...metadata\n    };\n    \n    if (this.format === 'json') {\n      return JSON.stringify(logEntry);\n    } else {\n      const metaStr = Object.keys(metadata).length > 0 \n        ? ` ${JSON.stringify(metadata)}` \n        : '';\n      return `${timestamp} [${level.toUpperCase()}] ${message}${metaStr}`;\n    }\n  }\n\n  formatConsoleMessage(level, message, metadata = {}) {\n    const timestamp = new Date().toISOString();\n    const color = this.colors[level] || '';\n    const reset = this.colors.reset;\n    \n    const metaStr = Object.keys(metadata).length > 0 \n      ? ` ${JSON.stringify(metadata, null, 2)}` \n      : '';\n    \n    return `${color}${timestamp} [${level.toUpperCase()}]${reset} ${message}${metaStr}`;\n  }\n\n  async log(level, message, metadata = {}) {\n    if (!this.shouldLog(level)) {\n      return;\n    }\n    \n    try {\n      // Console output\n      if (this.destinations.includes('console')) {\n        const consoleMessage = this.formatConsoleMessage(level, message, metadata);\n        if (level === 'error') {\n          console.error(consoleMessage);\n        } else if (level === 'warn') {\n          console.warn(consoleMessage);\n        } else {\n          console.log(consoleMessage);\n        }\n      }\n      \n      // File output\n      if (this.destinations.includes('file') && this.fileStream) {\n        const fileMessage = this.formatMessage(level, message, metadata);\n        const logLine = fileMessage + '\\n';\n        \n        // Check if log rotation is needed\n        if (this.needsRotation(logLine.length)) {\n          await this.rotateLog();\n        }\n        \n        this.fileStream.write(logLine);\n        this.currentLogSize += Buffer.byteLength(logLine);\n      }\n      \n    } catch (error) {\n      console.error('Logging error:', error);\n    }\n  }\n\n  needsRotation(messageSize) {\n    if (!this.maxSize) return false;\n    \n    const maxBytes = this.parseSize(this.maxSize);\n    return (this.currentLogSize + messageSize) > maxBytes;\n  }\n\n  parseSize(sizeStr) {\n    const units = {\n      'B': 1,\n      'KB': 1024,\n      'MB': 1024 * 1024,\n      'GB': 1024 * 1024 * 1024\n    };\n    \n    const match = sizeStr.match(/^(\\d+)(B|KB|MB|GB)?$/i);\n    if (!match) return 100 * 1024 * 1024; // Default 100MB\n    \n    const value = parseInt(match[1]);\n    const unit = match[2] ? match[2].toUpperCase() : 'B';\n    \n    return value * (units[unit] || 1);\n  }\n\n  async rotateLog() {\n    if (!this.fileStream || !this.logFile) return;\n    \n    try {\n      // Close current stream\n      this.fileStream.end();\n      \n      // Rotate file\n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const rotatedFile = `${this.logFile}.${timestamp}`;\n      \n      await fs.rename(this.logFile, rotatedFile);\n      \n      // Create new stream\n      this.fileStream = createWriteStream(this.logFile, { flags: 'a' });\n      this.currentLogSize = 0;\n      \n      // Clean up old logs\n      await this.cleanupOldLogs();\n      \n    } catch (error) {\n      console.error('Log rotation failed:', error);\n    }\n  }\n\n  async cleanupOldLogs() {\n    if (!this.logFile || !this.retention) return;\n    \n    try {\n      const logDir = path.dirname(this.logFile);\n      const baseName = path.basename(this.logFile);\n      \n      const files = await fs.readdir(logDir);\n      const logFiles = files\n        .filter(file => file.startsWith(baseName) && file !== baseName)\n        .map(file => path.join(logDir, file));\n      \n      const cutoffDate = new Date();\n      cutoffDate.setDate(cutoffDate.getDate() - this.retention);\n      \n      for (const file of logFiles) {\n        try {\n          const stats = await fs.stat(file);\n          if (stats.mtime < cutoffDate) {\n            await fs.unlink(file);\n          }\n        } catch (error) {\n          // Ignore errors for individual files\n        }\n      }\n      \n    } catch (error) {\n      console.error('Log cleanup failed:', error);\n    }\n  }\n\n  error(message, metadata = {}) {\n    return this.log('error', message, metadata);\n  }\n\n  warn(message, metadata = {}) {\n    return this.log('warn', message, metadata);\n  }\n\n  info(message, metadata = {}) {\n    return this.log('info', message, metadata);\n  }\n\n  debug(message, metadata = {}) {\n    return this.log('debug', message, metadata);\n  }\n\n  trace(message, metadata = {}) {\n    return this.log('trace', message, metadata);\n  }\n\n  child(metadata = {}) {\n    return new ChildLogger(this, metadata);\n  }\n\n  createRequestLogger(req, res, next) {\n    const startTime = Date.now();\n    const requestId = req.correlationId || 'unknown';\n    \n    const requestLogger = this.child({\n      requestId,\n      method: req.method,\n      url: req.url,\n      userAgent: req.get('User-Agent'),\n      ip: req.ip\n    });\n    \n    requestLogger.info('Request started');\n    \n    const originalSend = res.send;\n    res.send = function(body) {\n      const duration = Date.now() - startTime;\n      \n      requestLogger.info('Request completed', {\n        statusCode: res.statusCode,\n        duration,\n        responseSize: Buffer.byteLength(body || '')\n      });\n      \n      return originalSend.call(this, body);\n    };\n    \n    req.logger = requestLogger;\n    next();\n  }\n\n  async getLogStats() {\n    const stats = {\n      level: this.level,\n      format: this.format,\n      destinations: this.destinations,\n      fileLogging: !!this.logFile\n    };\n    \n    if (this.logFile) {\n      try {\n        const fileStats = await fs.stat(this.logFile);\n        stats.logFile = {\n          path: this.logFile,\n          size: fileStats.size,\n          modified: fileStats.mtime\n        };\n      } catch (error) {\n        stats.logFile = {\n          path: this.logFile,\n          error: error.message\n        };\n      }\n    }\n    \n    return stats;\n  }\n\n  setLevel(level) {\n    if (this.levels.hasOwnProperty(level)) {\n      this.level = level;\n      this.info('Log level changed', { newLevel: level });\n    } else {\n      throw new Error(`Invalid log level: ${level}. Valid levels: ${Object.keys(this.levels).join(', ')}`);\n    }\n  }\n\n  async close() {\n    if (this.fileStream) {\n      return new Promise((resolve) => {\n        this.fileStream.end(() => {\n          this.fileStream = null;\n          resolve();\n        });\n      });\n    }\n  }\n}\n\nclass ChildLogger {\n  constructor(parent, metadata = {}) {\n    this.parent = parent;\n    this.metadata = metadata;\n  }\n\n  log(level, message, additionalMetadata = {}) {\n    const combinedMetadata = { ...this.metadata, ...additionalMetadata };\n    return this.parent.log(level, message, combinedMetadata);\n  }\n\n  error(message, metadata = {}) {\n    return this.log('error', message, metadata);\n  }\n\n  warn(message, metadata = {}) {\n    return this.log('warn', message, metadata);\n  }\n\n  info(message, metadata = {}) {\n    return this.log('info', message, metadata);\n  }\n\n  debug(message, metadata = {}) {\n    return this.log('debug', message, metadata);\n  }\n\n  trace(message, metadata = {}) {\n    return this.log('trace', message, metadata);\n  }\n\n  child(additionalMetadata = {}) {\n    const combinedMetadata = { ...this.metadata, ...additionalMetadata };\n    return new ChildLogger(this.parent, combinedMetadata);\n  }\n}\n\nmodule.exports = Logger;"],"mappings":"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","ignoreList":[]}