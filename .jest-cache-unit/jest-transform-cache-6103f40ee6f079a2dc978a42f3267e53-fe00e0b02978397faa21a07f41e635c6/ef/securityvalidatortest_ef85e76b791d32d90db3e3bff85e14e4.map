{"version":3,"names":["fs","require","promises","crypto","SecurityValidator","constructor","config","maxTokenAge","minPasswordLength","requireMFA","allowedOrigins","secretsPatterns","validateSecrets","content","violations","lines","split","forEach","line","index","pattern","test","push","trim","toString","severity","type","includes","message","valid","length","score","calculateSecurityScore","severityWeights","high","medium","low","penalty","reduce","sum","v","Math","max","validateToken","token","error","warning","isTestToken","entropy","calculateEntropy","str","chars","char","len","Object","values","count","p","log2","validateCORS","origin","isAllowed","some","allowed","startsWith","domain","slice","endsWith","validateWebhookSignature","payload","signature","secret","expectedSignature","createHmac","update","JSON","stringify","digest","isValid","timingSafeEqual","Buffer","from","algorithm","validatePassword","password","issues","strength","calculatePasswordStrength","min","validateRateLimit","requests","windowMs","maxRequests","now","Date","windowStart","recentRequests","filter","timestamp","currentRequests","resetTime","validateFileAccess","filePath","allowedPaths","sanitizeInput","input","replace","validateInputSanitization","original","sanitized","modified","safe","describe","validator","beforeEach","it","result","expect","toBe","toHaveLength","toBeLessThan","strongToken","toBeGreaterThan","toContain","lowEntropyToken","invalidSignature","strongPassword","weakPassword","shortPassword","issue","Array","fill","map","_","i","maliciousInput","not","cleanInput","manyViolations","diverseString","repetitiveString"],"sources":["security-validator.test.js"],"sourcesContent":["/**\n * Unit tests for Security Validator\n * Tests security validation, authentication, and authorization functionality\n */\n\nconst fs = require('fs').promises;\nconst crypto = require('crypto');\n\n// Mock security validator implementation\nclass SecurityValidator {\n  constructor(config = {}) {\n    this.config = {\n      maxTokenAge: config.maxTokenAge || 3600000, // 1 hour\n      minPasswordLength: config.minPasswordLength || 12,\n      requireMFA: config.requireMFA || false,\n      allowedOrigins: config.allowedOrigins || ['localhost'],\n      secretsPatterns: config.secretsPatterns || [\n        /password:\\s*[^!]/i,\n        /token:\\s*[^!]/i,\n        /api[_-]?key:\\s*[^!]/i,\n        /secret:\\s*[^!]/i\n      ],\n      ...config\n    };\n  }\n\n  validateSecrets(content) {\n    const violations = [];\n    const lines = content.split('\\n');\n\n    lines.forEach((line, index) => {\n      this.config.secretsPatterns.forEach(pattern => {\n        if (pattern.test(line)) {\n          violations.push({\n            line: index + 1,\n            content: line.trim(),\n            pattern: pattern.toString(),\n            severity: 'high',\n            type: 'hardcoded_secret'\n          });\n        }\n      });\n\n      // Check for insecure protocols\n      if (line.includes('http://') && !line.includes('localhost') && !line.includes('127.0.0.1')) {\n        violations.push({\n          line: index + 1,\n          content: line.trim(),\n          severity: 'medium',\n          type: 'insecure_protocol',\n          message: 'HTTP protocol detected, should use HTTPS'\n        });\n      }\n\n      // Check for weak encryption\n      if (line.includes('md5') || line.includes('sha1')) {\n        violations.push({\n          line: index + 1,\n          content: line.trim(),\n          severity: 'medium',\n          type: 'weak_encryption',\n          message: 'Weak encryption algorithm detected'\n        });\n      }\n    });\n\n    return {\n      valid: violations.length === 0,\n      violations,\n      score: this.calculateSecurityScore(violations)\n    };\n  }\n\n  calculateSecurityScore(violations) {\n    const severityWeights = { high: 10, medium: 5, low: 1 };\n    const penalty = violations.reduce((sum, v) => sum + (severityWeights[v.severity] || 1), 0);\n    return Math.max(0, 100 - penalty);\n  }\n\n  validateToken(token) {\n    if (!token) {\n      return { valid: false, error: 'Token is required' };\n    }\n\n    // Check token format\n    if (typeof token !== 'string' || token.length < 32) {\n      return { valid: false, error: 'Invalid token format' };\n    }\n\n    // Check if token appears to be a test token\n    if (token.includes('test') || token.includes('demo') || token.includes('example')) {\n      return {\n        valid: true,\n        warning: 'Test token detected - not suitable for production',\n        isTestToken: true\n      };\n    }\n\n    // Check token entropy\n    const entropy = this.calculateEntropy(token);\n    if (entropy < 4.0) {\n      return { valid: false, error: 'Token has insufficient entropy' };\n    }\n\n    return { valid: true, entropy };\n  }\n\n  calculateEntropy(str) {\n    const chars = {};\n    for (let char of str) {\n      chars[char] = (chars[char] || 0) + 1;\n    }\n\n    const len = str.length;\n    return Object.values(chars).reduce((entropy, count) => {\n      const p = count / len;\n      return entropy - p * Math.log2(p);\n    }, 0);\n  }\n\n  validateCORS(origin, allowedOrigins = this.config.allowedOrigins) {\n    if (!origin) {\n      return { valid: false, error: 'Origin header is required' };\n    }\n\n    const isAllowed = allowedOrigins.some(allowed => {\n      if (allowed === '*') return true;\n      if (allowed.startsWith('*.')) {\n        const domain = allowed.slice(2);\n        return origin.endsWith(domain);\n      }\n      return origin === allowed || origin.endsWith('://' + allowed);\n    });\n\n    return {\n      valid: isAllowed,\n      origin,\n      allowedOrigins,\n      error: isAllowed ? null : 'Origin not allowed'\n    };\n  }\n\n  validateWebhookSignature(payload, signature, secret) {\n    if (!signature) {\n      return { valid: false, error: 'Signature is required' };\n    }\n\n    if (!signature.startsWith('sha256=')) {\n      return { valid: false, error: 'Invalid signature format' };\n    }\n\n    const expectedSignature = 'sha256=' + crypto\n      .createHmac('sha256', secret)\n      .update(JSON.stringify(payload))\n      .digest('hex');\n\n    const isValid = crypto.timingSafeEqual(\n      Buffer.from(signature),\n      Buffer.from(expectedSignature)\n    );\n\n    return {\n      valid: isValid,\n      algorithm: 'sha256',\n      error: isValid ? null : 'Invalid signature'\n    };\n  }\n\n  validatePassword(password) {\n    const issues = [];\n\n    if (!password) {\n      return { valid: false, error: 'Password is required' };\n    }\n\n    if (password.length < this.config.minPasswordLength) {\n      issues.push(`Password must be at least ${this.config.minPasswordLength} characters`);\n    }\n\n    if (!/[A-Z]/.test(password)) {\n      issues.push('Password must contain uppercase letters');\n    }\n\n    if (!/[a-z]/.test(password)) {\n      issues.push('Password must contain lowercase letters');\n    }\n\n    if (!/\\d/.test(password)) {\n      issues.push('Password must contain numbers');\n    }\n\n    if (!/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(password)) {\n      issues.push('Password must contain special characters');\n    }\n\n    // Check for common patterns\n    if (/(.)\\1{2,}/.test(password)) {\n      issues.push('Password must not contain repeated characters');\n    }\n\n    if (/123|abc|qwe|asd|zxc/i.test(password)) {\n      issues.push('Password must not contain common sequences');\n    }\n\n    return {\n      valid: issues.length === 0,\n      issues,\n      strength: this.calculatePasswordStrength(password)\n    };\n  }\n\n  calculatePasswordStrength(password) {\n    let score = 0;\n\n    // Length bonus\n    score += Math.min(password.length * 2, 25);\n\n    // Character variety bonus\n    if (/[a-z]/.test(password)) score += 5;\n    if (/[A-Z]/.test(password)) score += 5;\n    if (/\\d/.test(password)) score += 5;\n    if (/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(password)) score += 10;\n\n    // Entropy bonus\n    const entropy = this.calculateEntropy(password);\n    score += Math.min(entropy * 2, 20);\n\n    return Math.min(score, 100);\n  }\n\n  validateRateLimit(requests, windowMs, maxRequests) {\n    const now = Date.now();\n    const windowStart = now - windowMs;\n    \n    // Filter requests within the time window\n    const recentRequests = requests.filter(timestamp => timestamp > windowStart);\n    \n    return {\n      valid: recentRequests.length < maxRequests,\n      currentRequests: recentRequests.length,\n      maxRequests,\n      windowMs,\n      resetTime: windowStart + windowMs\n    };\n  }\n\n  validateFileAccess(filePath, allowedPaths = []) {\n    // Prevent path traversal attacks\n    if (filePath.includes('..') || filePath.includes('~')) {\n      return { valid: false, error: 'Path traversal detected' };\n    }\n\n    // Check against allowed paths\n    const isAllowed = allowedPaths.some(allowed => {\n      return filePath.startsWith(allowed);\n    });\n\n    return {\n      valid: isAllowed,\n      filePath,\n      allowedPaths,\n      error: isAllowed ? null : 'File access not allowed'\n    };\n  }\n\n  sanitizeInput(input) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    // Remove or escape potentially dangerous characters\n    return input\n      .replace(/[<>]/g, '') // Remove angle brackets\n      .replace(/javascript:/gi, '') // Remove javascript: protocol\n      .replace(/on\\w+\\s*=/gi, '') // Remove event handlers\n      .trim();\n  }\n\n  validateInputSanitization(input) {\n    const original = input;\n    const sanitized = this.sanitizeInput(input);\n    \n    return {\n      original,\n      sanitized,\n      modified: original !== sanitized,\n      safe: !/<script|javascript:|on\\w+\\s*=/i.test(sanitized)\n    };\n  }\n}\n\ndescribe('SecurityValidator', () => {\n  let validator;\n\n  beforeEach(() => {\n    validator = new SecurityValidator();\n  });\n\n  describe('secrets validation', () => {\n    it('should detect hardcoded secrets', () => {\n      const content = `\nhomeassistant:\n  name: Home\nmqtt:\n  username: user\n  password: hardcoded123\n  token: abc123def456\napi_key: secret_key_here\n`;\n\n      const result = validator.validateSecrets(content);\n\n      expect(result.valid).toBe(false);\n      expect(result.violations).toHaveLength(3);\n      expect(result.violations.some(v => v.type === 'hardcoded_secret')).toBe(true);\n      expect(result.score).toBeLessThan(100);\n    });\n\n    it('should pass validation for properly configured secrets', () => {\n      const content = `\nhomeassistant:\n  name: Home\nmqtt:\n  username: user\n  password: !secret mqtt_password\n  token: !secret mqtt_token\napi_key: !secret api_key\n`;\n\n      const result = validator.validateSecrets(content);\n\n      expect(result.valid).toBe(true);\n      expect(result.violations).toHaveLength(0);\n      expect(result.score).toBe(100);\n    });\n\n    it('should detect insecure protocols', () => {\n      const content = `\nhttp:\n  base_url: http://example.com\n  internal_url: http://localhost:8123\n`;\n\n      const result = validator.validateSecrets(content);\n\n      expect(result.valid).toBe(false);\n      expect(result.violations.some(v => v.type === 'insecure_protocol')).toBe(true);\n      expect(result.violations.some(v => v.content.includes('localhost'))).toBe(false);\n    });\n\n    it('should detect weak encryption algorithms', () => {\n      const content = `\nencryption:\n  algorithm: md5\n  hash: sha1\n`;\n\n      const result = validator.validateSecrets(content);\n\n      expect(result.valid).toBe(false);\n      expect(result.violations.some(v => v.type === 'weak_encryption')).toBe(true);\n    });\n  });\n\n  describe('token validation', () => {\n    it('should validate strong tokens', () => {\n      const strongToken = 'abcd1234efgh5678ijkl9012mnop3456qrst7890uvwx1234yz';\n      \n      const result = validator.validateToken(strongToken);\n\n      expect(result.valid).toBe(true);\n      expect(result.entropy).toBeGreaterThan(3.0);\n    });\n\n    it('should reject missing tokens', () => {\n      const result = validator.validateToken(null);\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('Token is required');\n    });\n\n    it('should reject short tokens', () => {\n      const result = validator.validateToken('short');\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('Invalid token format');\n    });\n\n    it('should detect test tokens', () => {\n      const result = validator.validateToken('test-token-for-development-purposes-only');\n\n      expect(result.valid).toBe(true);\n      expect(result.warning).toContain('Test token detected');\n      expect(result.isTestToken).toBe(true);\n    });\n\n    it('should reject tokens with low entropy', () => {\n      const lowEntropyToken = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa';\n      \n      const result = validator.validateToken(lowEntropyToken);\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('insufficient entropy');\n    });\n  });\n\n  describe('CORS validation', () => {\n    it('should validate allowed origins', () => {\n      const result = validator.validateCORS('http://localhost:3000', ['localhost', 'example.com']);\n\n      expect(result.valid).toBe(true);\n      expect(result.origin).toBe('http://localhost:3000');\n    });\n\n    it('should reject disallowed origins', () => {\n      const result = validator.validateCORS('http://malicious.com', ['localhost', 'example.com']);\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('Origin not allowed');\n    });\n\n    it('should handle wildcard origins', () => {\n      const result = validator.validateCORS('http://malicious.com', ['*']);\n\n      expect(result.valid).toBe(true);\n    });\n\n    it('should handle subdomain wildcards', () => {\n      const result = validator.validateCORS('http://api.example.com', ['*.example.com']);\n\n      expect(result.valid).toBe(true);\n    });\n\n    it('should require origin header', () => {\n      const result = validator.validateCORS(null);\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('Origin header is required');\n    });\n  });\n\n  describe('webhook signature validation', () => {\n    it('should validate correct webhook signatures', () => {\n      const payload = { test: 'data' };\n      const secret = 'webhook-secret';\n      const signature = 'sha256=' + crypto\n        .createHmac('sha256', secret)\n        .update(JSON.stringify(payload))\n        .digest('hex');\n\n      const result = validator.validateWebhookSignature(payload, signature, secret);\n\n      expect(result.valid).toBe(true);\n      expect(result.algorithm).toBe('sha256');\n    });\n\n    it('should reject invalid signatures', () => {\n      const payload = { test: 'data' };\n      const secret = 'webhook-secret';\n      const invalidSignature = 'sha256=invalid';\n\n      const result = validator.validateWebhookSignature(payload, invalidSignature, secret);\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('Invalid signature');\n    });\n\n    it('should require signature', () => {\n      const result = validator.validateWebhookSignature({}, null, 'secret');\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('Signature is required');\n    });\n\n    it('should require proper signature format', () => {\n      const result = validator.validateWebhookSignature({}, 'invalid-format', 'secret');\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('Invalid signature format');\n    });\n  });\n\n  describe('password validation', () => {\n    it('should validate strong passwords', () => {\n      const strongPassword = 'MyStr0ng!P@ssw0rd123';\n      \n      const result = validator.validatePassword(strongPassword);\n\n      expect(result.valid).toBe(true);\n      expect(result.strength).toBeGreaterThan(80);\n    });\n\n    it('should reject weak passwords', () => {\n      const weakPassword = 'password';\n      \n      const result = validator.validatePassword(weakPassword);\n\n      expect(result.valid).toBe(false);\n      expect(result.issues.length).toBeGreaterThan(0);\n      expect(result.strength).toBeLessThan(50);\n    });\n\n    it('should enforce minimum length', () => {\n      const shortPassword = 'Sh0rt!';\n      \n      const result = validator.validatePassword(shortPassword);\n\n      expect(result.valid).toBe(false);\n      expect(result.issues.some(issue => issue.includes('at least'))).toBe(true);\n    });\n\n    it('should require character variety', () => {\n      const result = validator.validatePassword('alllowercase123');\n\n      expect(result.valid).toBe(false);\n      expect(result.issues.some(issue => issue.includes('uppercase'))).toBe(true);\n      expect(result.issues.some(issue => issue.includes('special'))).toBe(true);\n    });\n\n    it('should detect common patterns', () => {\n      const result = validator.validatePassword('Password123abc');\n\n      expect(result.valid).toBe(false);\n      expect(result.issues.some(issue => issue.includes('common sequences'))).toBe(true);\n    });\n\n    it('should detect repeated characters', () => {\n      const result = validator.validatePassword('Passsssword123!');\n\n      expect(result.valid).toBe(false);\n      expect(result.issues.some(issue => issue.includes('repeated characters'))).toBe(true);\n    });\n  });\n\n  describe('rate limiting validation', () => {\n    it('should pass rate limit when under threshold', () => {\n      const now = Date.now();\n      const requests = [now - 1000, now - 2000, now - 3000]; // 3 requests in last minute\n      \n      const result = validator.validateRateLimit(requests, 60000, 10);\n\n      expect(result.valid).toBe(true);\n      expect(result.currentRequests).toBe(3);\n      expect(result.maxRequests).toBe(10);\n    });\n\n    it('should fail rate limit when over threshold', () => {\n      const now = Date.now();\n      const requests = Array(15).fill(null).map((_, i) => now - (i * 1000)); // 15 requests in last minute\n      \n      const result = validator.validateRateLimit(requests, 60000, 10);\n\n      expect(result.valid).toBe(false);\n      expect(result.currentRequests).toBe(15);\n      expect(result.maxRequests).toBe(10);\n    });\n\n    it('should ignore old requests outside window', () => {\n      const now = Date.now();\n      const requests = [\n        now - 1000,     // Recent\n        now - 30000,    // Recent\n        now - 120000,   // Too old (outside 60s window)\n        now - 180000    // Too old\n      ];\n      \n      const result = validator.validateRateLimit(requests, 60000, 10);\n\n      expect(result.valid).toBe(true);\n      expect(result.currentRequests).toBe(2); // Only recent requests counted\n    });\n  });\n\n  describe('file access validation', () => {\n    it('should allow access to permitted paths', () => {\n      const result = validator.validateFileAccess('/config/automation.yaml', ['/config', '/templates']);\n\n      expect(result.valid).toBe(true);\n    });\n\n    it('should deny access to unpermitted paths', () => {\n      const result = validator.validateFileAccess('/etc/passwd', ['/config', '/templates']);\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('File access not allowed');\n    });\n\n    it('should detect path traversal attempts', () => {\n      const result = validator.validateFileAccess('/config/../etc/passwd', ['/config']);\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('Path traversal detected');\n    });\n\n    it('should detect home directory access attempts', () => {\n      const result = validator.validateFileAccess('/config/~/secrets', ['/config']);\n\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('Path traversal detected');\n    });\n  });\n\n  describe('input sanitization', () => {\n    it('should sanitize potentially dangerous input', () => {\n      const maliciousInput = '<script>alert(\"xss\")</script>';\n      \n      const result = validator.validateInputSanitization(maliciousInput);\n\n      expect(result.modified).toBe(true);\n      expect(result.safe).toBe(true);\n      expect(result.sanitized).not.toContain('<script>');\n    });\n\n    it('should remove javascript protocols', () => {\n      const input = 'javascript:alert(\"xss\")';\n      \n      const result = validator.validateInputSanitization(input);\n\n      expect(result.modified).toBe(true);\n      expect(result.sanitized).not.toContain('javascript:');\n    });\n\n    it('should remove event handlers', () => {\n      const input = 'onclick=\"malicious()\"';\n      \n      const result = validator.validateInputSanitization(input);\n\n      expect(result.modified).toBe(true);\n      expect(result.sanitized).not.toContain('onclick=');\n    });\n\n    it('should pass clean input unchanged', () => {\n      const cleanInput = 'This is safe input';\n      \n      const result = validator.validateInputSanitization(cleanInput);\n\n      expect(result.modified).toBe(false);\n      expect(result.safe).toBe(true);\n      expect(result.sanitized).toBe(cleanInput);\n    });\n  });\n\n  describe('security scoring', () => {\n    it('should calculate security scores correctly', () => {\n      const violations = [\n        { severity: 'high' },\n        { severity: 'medium' },\n        { severity: 'low' }\n      ];\n\n      const score = validator.calculateSecurityScore(violations);\n\n      expect(score).toBe(84); // 100 - (10 + 5 + 1)\n    });\n\n    it('should not go below zero', () => {\n      const manyViolations = Array(20).fill({ severity: 'high' });\n\n      const score = validator.calculateSecurityScore(manyViolations);\n\n      expect(score).toBe(0);\n    });\n  });\n\n  describe('entropy calculation', () => {\n    it('should calculate entropy for diverse strings', () => {\n      const diverseString = 'AbCdEf123!@#';\n      \n      const entropy = validator.calculateEntropy(diverseString);\n\n      expect(entropy).toBeGreaterThan(3.0);\n    });\n\n    it('should calculate low entropy for repetitive strings', () => {\n      const repetitiveString = 'aaaaaaaaaa';\n      \n      const entropy = validator.calculateEntropy(repetitiveString);\n\n      expect(entropy).toBeLessThan(1.0);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}