{"version":3,"names":["cov_24rfb5p29n","actualCoverage","AuthService","s","require","Permission","AuthMiddleware","constructor","f","authService","authenticateJWT","req","res","next","authHeader","headers","authorization","b","status","json","error","message","token","startsWith","slice","user","decoded","verifyToken","auth","type","userId","id","username","role","permissions","tokenPayload","logAuthEvent","endpoint","path","method","console","authenticateApiKey","apiKey","keyData","verifyApiKey","keyId","keyName","name","authenticate","authenticateOptional","authorize","resource","action","hasPermission","checkPermission","userPermissions","requireRole","requiredRole","requireAdmin","rateLimitAuth","attempts","Map","WINDOW_MS","MAX_ATTEMPTS","key","ip","connection","remoteAddress","now","Date","cutoff","data","entries","firstAttempt","delete","current","get","count","retryAfter","Math","ceil","set","authMiddleware","module","exports"],"sources":["auth.js"],"sourcesContent":["const AuthService = require('../services/auth/authService');\nconst { Permission } = require('../models/user');\n\n/**\n * Authentication middleware for Express.js\n */\nclass AuthMiddleware {\n  constructor() {\n    this.authService = new AuthService();\n  }\n\n  /**\n   * JWT authentication middleware\n   */\n  authenticateJWT = async (req, res, next) => {\n    try {\n      const authHeader = req.headers.authorization;\n      \n      if (!authHeader) {\n        return res.status(401).json({ \n          error: 'Access denied', \n          message: 'No authorization header provided' \n        });\n      }\n\n      const token = authHeader.startsWith('Bearer ') \n        ? authHeader.slice(7) \n        : authHeader;\n\n      if (!token) {\n        return res.status(401).json({ \n          error: 'Access denied', \n          message: 'No token provided' \n        });\n      }\n\n      const { user, decoded } = await this.authService.verifyToken(token);\n      \n      // Attach user and token info to request\n      req.user = user;\n      req.auth = {\n        type: 'jwt',\n        userId: user.id,\n        username: user.username,\n        role: user.role,\n        permissions: user.permissions,\n        tokenPayload: decoded\n      };\n\n      // Log successful authentication\n      await this.authService.logAuthEvent(\n        user.id, \n        user.username, \n        'jwt_auth', \n        true, \n        { endpoint: req.path, method: req.method },\n        req\n      );\n\n      next();\n    } catch (error) {\n      console.error('JWT authentication error:', error.message);\n      \n      // Log failed authentication\n      await this.authService.logAuthEvent(\n        null, \n        null, \n        'jwt_auth', \n        false, \n        { error: error.message, endpoint: req.path, method: req.method },\n        req\n      );\n\n      return res.status(401).json({ \n        error: 'Access denied', \n        message: 'Invalid or expired token' \n      });\n    }\n  };\n\n  /**\n   * API key authentication middleware\n   */\n  authenticateApiKey = async (req, res, next) => {\n    try {\n      const apiKey = req.headers['x-api-key'];\n\n      if (!apiKey) {\n        return res.status(401).json({ \n          error: 'Access denied', \n          message: 'No API key provided' \n        });\n      }\n\n      const keyData = await this.authService.verifyApiKey(apiKey);\n      \n      // Attach API key info to request\n      req.auth = {\n        type: 'api_key',\n        keyId: keyData.id,\n        keyName: keyData.name,\n        permissions: keyData.permissions,\n        keyData: keyData\n      };\n\n      // Log successful authentication\n      await this.authService.logAuthEvent(\n        null, \n        keyData.name, \n        'api_key_auth', \n        true, \n        { endpoint: req.path, method: req.method, keyId: keyData.id },\n        req\n      );\n\n      next();\n    } catch (error) {\n      console.error('API key authentication error:', error.message);\n      \n      // Log failed authentication\n      await this.authService.logAuthEvent(\n        null, \n        null, \n        'api_key_auth', \n        false, \n        { error: error.message, endpoint: req.path, method: req.method },\n        req\n      );\n\n      return res.status(401).json({ \n        error: 'Access denied', \n        message: 'Invalid or expired API key' \n      });\n    }\n  };\n\n  /**\n   * Combined authentication middleware (tries JWT first, then API key)\n   */\n  authenticate = async (req, res, next) => {\n    // Try JWT authentication first\n    if (req.headers.authorization) {\n      return this.authenticateJWT(req, res, next);\n    }\n    \n    // Try API key authentication\n    if (req.headers['x-api-key']) {\n      return this.authenticateApiKey(req, res, next);\n    }\n\n    // No authentication provided\n    return res.status(401).json({ \n      error: 'Access denied', \n      message: 'No authentication provided. Use Authorization header (Bearer token) or X-API-Key header' \n    });\n  };\n\n  /**\n   * Optional authentication middleware (doesn't fail if no auth provided)\n   */\n  authenticateOptional = async (req, res, next) => {\n    try {\n      // Try JWT authentication first\n      if (req.headers.authorization) {\n        return this.authenticateJWT(req, res, next);\n      }\n      \n      // Try API key authentication\n      if (req.headers['x-api-key']) {\n        return this.authenticateApiKey(req, res, next);\n      }\n\n      // No authentication provided - continue without auth\n      req.auth = null;\n      next();\n    } catch (error) {\n      // Authentication failed but it's optional - continue without auth\n      req.auth = null;\n      next();\n    }\n  };\n\n  /**\n   * Authorization middleware factory\n   * Creates middleware to check specific permissions\n   */\n  authorize = (resource, action) => {\n    return async (req, res, next) => {\n      try {\n        if (!req.auth) {\n          return res.status(401).json({ \n            error: 'Access denied', \n            message: 'Authentication required' \n          });\n        }\n\n        const hasPermission = this.authService.checkPermission(req.auth, resource, action);\n        \n        if (!hasPermission) {\n          // Log authorization failure\n          await this.authService.logAuthEvent(\n            req.auth.userId || null,\n            req.auth.username || req.auth.keyName || null,\n            'authorization_denied',\n            false,\n            { \n              resource, \n              action, \n              endpoint: req.path, \n              method: req.method,\n              userPermissions: req.auth.permissions \n            },\n            req\n          );\n\n          return res.status(403).json({ \n            error: 'Forbidden', \n            message: `Insufficient permissions. Required: ${resource}:${action}` \n          });\n        }\n\n        // Log successful authorization\n        await this.authService.logAuthEvent(\n          req.auth.userId || null,\n          req.auth.username || req.auth.keyName || null,\n          'authorization_granted',\n          true,\n          { resource, action, endpoint: req.path, method: req.method },\n          req\n        );\n\n        next();\n      } catch (error) {\n        console.error('Authorization error:', error.message);\n        return res.status(500).json({ \n          error: 'Internal server error', \n          message: 'Authorization check failed' \n        });\n      }\n    };\n  };\n\n  /**\n   * Role-based authorization middleware\n   */\n  requireRole = (requiredRole) => {\n    return async (req, res, next) => {\n      try {\n        if (!req.auth) {\n          return res.status(401).json({ \n            error: 'Access denied', \n            message: 'Authentication required' \n          });\n        }\n\n        // API keys don't have roles, only users do\n        if (req.auth.type !== 'jwt') {\n          return res.status(403).json({ \n            error: 'Forbidden', \n            message: 'User authentication required for this operation' \n          });\n        }\n\n        if (req.auth.role !== requiredRole && req.auth.role !== 'admin') {\n          return res.status(403).json({ \n            error: 'Forbidden', \n            message: `Required role: ${requiredRole}` \n          });\n        }\n\n        next();\n      } catch (error) {\n        console.error('Role authorization error:', error.message);\n        return res.status(500).json({ \n          error: 'Internal server error', \n          message: 'Role check failed' \n        });\n      }\n    };\n  };\n\n  /**\n   * Admin-only middleware\n   */\n  requireAdmin = () => {\n    return this.requireRole('admin');\n  };\n\n  /**\n   * Rate limiting middleware for authentication endpoints\n   */\n  rateLimitAuth = () => {\n    const attempts = new Map();\n    const WINDOW_MS = 15 * 60 * 1000; // 15 minutes\n    const MAX_ATTEMPTS = 5;\n\n    return (req, res, next) => {\n      const key = req.ip || req.connection.remoteAddress;\n      const now = Date.now();\n      \n      // Clean old entries\n      const cutoff = now - WINDOW_MS;\n      for (const [ip, data] of attempts.entries()) {\n        if (data.firstAttempt < cutoff) {\n          attempts.delete(ip);\n        }\n      }\n\n      // Check current attempts\n      const current = attempts.get(key);\n      if (current && current.count >= MAX_ATTEMPTS) {\n        return res.status(429).json({\n          error: 'Too many attempts',\n          message: 'Too many authentication attempts. Please try again later.',\n          retryAfter: Math.ceil((current.firstAttempt + WINDOW_MS - now) / 1000)\n        });\n      }\n\n      // Track this attempt\n      if (current) {\n        current.count++;\n      } else {\n        attempts.set(key, { count: 1, firstAttempt: now });\n      }\n\n      next();\n    };\n  };\n}\n\n// Create singleton instance\nconst authMiddleware = new AuthMiddleware();\n\n// Export individual middleware functions\nmodule.exports = {\n  authenticate: authMiddleware.authenticate,\n  authenticateJWT: authMiddleware.authenticateJWT,\n  authenticateApiKey: authMiddleware.authenticateApiKey,\n  authenticateOptional: authMiddleware.authenticateOptional,\n  authorize: authMiddleware.authorize,\n  requireRole: authMiddleware.requireRole,\n  requireAdmin: authMiddleware.requireAdmin,\n  rateLimitAuth: authMiddleware.rateLimitAuth,\n  AuthMiddleware\n};"],"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","ignoreList":[]}