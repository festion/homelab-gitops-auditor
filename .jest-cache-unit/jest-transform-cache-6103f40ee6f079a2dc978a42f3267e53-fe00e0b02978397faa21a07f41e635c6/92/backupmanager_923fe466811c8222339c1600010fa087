477d9e959369e4293d767d7abec7df4e
/* istanbul ignore next */
function cov_2qrrk9ngmy() {
  var path = "/home/dev/workspace/homelab-gitops-auditor/scripts/backup/backup-manager.js";
  var hash = "44d997c2e1609af94625f286f27b696247745d4d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/dev/workspace/homelab-gitops-auditor/scripts/backup/backup-manager.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 11
        },
        end: {
          line: 2,
          column: 33
        }
      },
      "1": {
        start: {
          line: 3,
          column: 13
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 41
        }
      },
      "3": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 37
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "5": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 33
        }
      },
      "6": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "7": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 65
        }
      },
      "8": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "9": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "10": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "11": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "12": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 75
        }
      },
      "13": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "14": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "15": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 25,
          column: 13
        }
      },
      "16": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "17": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "18": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 45
        }
      },
      "19": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "20": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "21": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "22": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "23": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 89
        }
      },
      "24": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 18
        }
      },
      "25": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 35
        }
      },
      "26": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 87
        }
      },
      "27": {
        start: {
          line: 52,
          column: 21
        },
        end: {
          line: 52,
          column: 63
        }
      },
      "28": {
        start: {
          line: 53,
          column: 22
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "29": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "30": {
        start: {
          line: 57,
          column: 27
        },
        end: {
          line: 62,
          column: 8
        }
      },
      "31": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 58
        }
      },
      "32": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "33": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "34": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 91,
          column: 8
        }
      },
      "35": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "36": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 18
        }
      },
      "37": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 35
        }
      },
      "38": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 50
        }
      },
      "39": {
        start: {
          line: 107,
          column: 21
        },
        end: {
          line: 107,
          column: 46
        }
      },
      "40": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 108,
          column: 46
        }
      },
      "41": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "42": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 115,
          column: 8
        }
      },
      "43": {
        start: {
          line: 117,
          column: 6
        },
        end: {
          line: 117,
          column: 58
        }
      },
      "44": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "45": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "46": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 135,
          column: 22
        }
      },
      "47": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 138,
          column: 87
        }
      },
      "48": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 139,
          column: 18
        }
      },
      "49": {
        start: {
          line: 144,
          column: 23
        },
        end: {
          line: 144,
          column: 70
        }
      },
      "50": {
        start: {
          line: 145,
          column: 23
        },
        end: {
          line: 145,
          column: 32
        }
      },
      "51": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 69
        }
      },
      "52": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "53": {
        start: {
          line: 151,
          column: 26
        },
        end: {
          line: 151,
          column: 75
        }
      },
      "54": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 155,
          column: 7
        }
      },
      "55": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 68
        }
      },
      "56": {
        start: {
          line: 158,
          column: 25
        },
        end: {
          line: 158,
          column: 72
        }
      },
      "57": {
        start: {
          line: 160,
          column: 33
        },
        end: {
          line: 163,
          column: 8
        }
      },
      "58": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "59": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 64
        }
      },
      "60": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 170,
          column: 51
        }
      },
      "61": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 45
        }
      },
      "62": {
        start: {
          line: 174,
          column: 23
        },
        end: {
          line: 174,
          column: 63
        }
      },
      "63": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "64": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 187,
          column: 8
        }
      },
      "65": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 90
        }
      },
      "66": {
        start: {
          line: 193,
          column: 6
        },
        end: {
          line: 201,
          column: 7
        }
      },
      "67": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 36
        }
      },
      "68": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 73
        }
      },
      "69": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "70": {
        start: {
          line: 203,
          column: 6
        },
        end: {
          line: 203,
          column: 18
        }
      },
      "71": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 208,
          column: 35
        }
      },
      "72": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 210,
          column: 79
        }
      },
      "73": {
        start: {
          line: 212,
          column: 21
        },
        end: {
          line: 212,
          column: 59
        }
      },
      "74": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "75": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 214,
          column: 55
        }
      },
      "76": {
        start: {
          line: 217,
          column: 23
        },
        end: {
          line: 217,
          column: 36
        }
      },
      "77": {
        start: {
          line: 218,
          column: 23
        },
        end: {
          line: 218,
          column: 32
        }
      },
      "78": {
        start: {
          line: 219,
          column: 28
        },
        end: {
          line: 219,
          column: 56
        }
      },
      "79": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 283,
          column: 5
        }
      },
      "80": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 223,
          column: 51
        }
      },
      "81": {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 226,
          column: 55
        }
      },
      "82": {
        start: {
          line: 227,
          column: 6
        },
        end: {
          line: 227,
          column: 74
        }
      },
      "83": {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 232,
          column: 7
        }
      },
      "84": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 58
        }
      },
      "85": {
        start: {
          line: 235,
          column: 6
        },
        end: {
          line: 241,
          column: 7
        }
      },
      "86": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 240,
          column: 11
        }
      },
      "87": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "88": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 252,
          column: 53
        }
      },
      "89": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "90": {
        start: {
          line: 259,
          column: 6
        },
        end: {
          line: 264,
          column: 8
        }
      },
      "91": {
        start: {
          line: 267,
          column: 6
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "92": {
        start: {
          line: 273,
          column: 6
        },
        end: {
          line: 280,
          column: 7
        }
      },
      "93": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 55
        }
      },
      "94": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 279,
          column: 11
        }
      },
      "95": {
        start: {
          line: 282,
          column: 6
        },
        end: {
          line: 282,
          column: 18
        }
      },
      "96": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 287,
          column: 35
        }
      },
      "97": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 289,
          column: 65
        }
      },
      "98": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "99": {
        start: {
          line: 293,
          column: 29
        },
        end: {
          line: 293,
          column: 77
        }
      },
      "100": {
        start: {
          line: 294,
          column: 6
        },
        end: {
          line: 296,
          column: 7
        }
      },
      "101": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 90
        }
      },
      "102": {
        start: {
          line: 299,
          column: 21
        },
        end: {
          line: 301,
          column: 8
        }
      },
      "103": {
        start: {
          line: 304,
          column: 6
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "104": {
        start: {
          line: 311,
          column: 6
        },
        end: {
          line: 314,
          column: 9
        }
      },
      "105": {
        start: {
          line: 316,
          column: 6
        },
        end: {
          line: 316,
          column: 20
        }
      },
      "106": {
        start: {
          line: 319,
          column: 6
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "107": {
        start: {
          line: 323,
          column: 6
        },
        end: {
          line: 323,
          column: 18
        }
      },
      "108": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 328,
          column: 67
        }
      },
      "109": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 356,
          column: 5
        }
      },
      "110": {
        start: {
          line: 332,
          column: 6
        },
        end: {
          line: 332,
          column: 62
        }
      },
      "111": {
        start: {
          line: 335,
          column: 20
        },
        end: {
          line: 335,
          column: 45
        }
      },
      "112": {
        start: {
          line: 336,
          column: 6
        },
        end: {
          line: 338,
          column: 7
        }
      },
      "113": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 48
        }
      },
      "114": {
        start: {
          line: 341,
          column: 6
        },
        end: {
          line: 341,
          column: 53
        }
      },
      "115": {
        start: {
          line: 343,
          column: 6
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "116": {
        start: {
          line: 348,
          column: 6
        },
        end: {
          line: 348,
          column: 18
        }
      },
      "117": {
        start: {
          line: 351,
          column: 6
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "118": {
        start: {
          line: 355,
          column: 6
        },
        end: {
          line: 355,
          column: 80
        }
      },
      "119": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 360,
          column: 65
        }
      },
      "120": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 401,
          column: 5
        }
      },
      "121": {
        start: {
          line: 364,
          column: 29
        },
        end: {
          line: 368,
          column: 7
        }
      },
      "122": {
        start: {
          line: 370,
          column: 6
        },
        end: {
          line: 377,
          column: 7
        }
      },
      "123": {
        start: {
          line: 371,
          column: 25
        },
        end: {
          line: 371,
          column: 52
        }
      },
      "124": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 376,
          column: 9
        }
      },
      "125": {
        start: {
          line: 373,
          column: 10
        },
        end: {
          line: 373,
          column: 55
        }
      },
      "126": {
        start: {
          line: 375,
          column: 10
        },
        end: {
          line: 375,
          column: 62
        }
      },
      "127": {
        start: {
          line: 380,
          column: 25
        },
        end: {
          line: 380,
          column: 68
        }
      },
      "128": {
        start: {
          line: 381,
          column: 6
        },
        end: {
          line: 393,
          column: 7
        }
      },
      "129": {
        start: {
          line: 382,
          column: 30
        },
        end: {
          line: 382,
          column: 67
        }
      },
      "130": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "131": {
        start: {
          line: 384,
          column: 10
        },
        end: {
          line: 384,
          column: 57
        }
      },
      "132": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "133": {
        start: {
          line: 389,
          column: 10
        },
        end: {
          line: 389,
          column: 81
        }
      },
      "134": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 79
        }
      },
      "135": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 395,
          column: 62
        }
      },
      "136": {
        start: {
          line: 396,
          column: 6
        },
        end: {
          line: 396,
          column: 18
        }
      },
      "137": {
        start: {
          line: 399,
          column: 6
        },
        end: {
          line: 399,
          column: 77
        }
      },
      "138": {
        start: {
          line: 400,
          column: 6
        },
        end: {
          line: 400,
          column: 18
        }
      },
      "139": {
        start: {
          line: 405,
          column: 4
        },
        end: {
          line: 405,
          column: 35
        }
      },
      "140": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 407,
          column: 60
        }
      },
      "141": {
        start: {
          line: 409,
          column: 26
        },
        end: {
          line: 409,
          column: 92
        }
      },
      "142": {
        start: {
          line: 410,
          column: 23
        },
        end: {
          line: 410,
          column: 33
        }
      },
      "143": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 411,
          column: 61
        }
      },
      "144": {
        start: {
          line: 413,
          column: 4
        },
        end: {
          line: 460,
          column: 5
        }
      },
      "145": {
        start: {
          line: 414,
          column: 23
        },
        end: {
          line: 414,
          column: 54
        }
      },
      "146": {
        start: {
          line: 415,
          column: 29
        },
        end: {
          line: 418,
          column: 8
        }
      },
      "147": {
        start: {
          line: 416,
          column: 27
        },
        end: {
          line: 416,
          column: 53
        }
      },
      "148": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 67
        }
      },
      "149": {
        start: {
          line: 420,
          column: 25
        },
        end: {
          line: 420,
          column: 26
        }
      },
      "150": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 437,
          column: 7
        }
      },
      "151": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "152": {
        start: {
          line: 424,
          column: 10
        },
        end: {
          line: 424,
          column: 39
        }
      },
      "153": {
        start: {
          line: 425,
          column: 10
        },
        end: {
          line: 425,
          column: 25
        }
      },
      "154": {
        start: {
          line: 426,
          column: 10
        },
        end: {
          line: 430,
          column: 13
        }
      },
      "155": {
        start: {
          line: 432,
          column: 10
        },
        end: {
          line: 435,
          column: 13
        }
      },
      "156": {
        start: {
          line: 440,
          column: 6
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "157": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 85
        }
      },
      "158": {
        start: {
          line: 441,
          column: 47
        },
        end: {
          line: 441,
          column: 83
        }
      },
      "159": {
        start: {
          line: 444,
          column: 6
        },
        end: {
          line: 444,
          column: 46
        }
      },
      "160": {
        start: {
          line: 446,
          column: 6
        },
        end: {
          line: 450,
          column: 9
        }
      },
      "161": {
        start: {
          line: 452,
          column: 6
        },
        end: {
          line: 455,
          column: 8
        }
      },
      "162": {
        start: {
          line: 458,
          column: 6
        },
        end: {
          line: 458,
          column: 67
        }
      },
      "163": {
        start: {
          line: 459,
          column: 6
        },
        end: {
          line: 459,
          column: 18
        }
      },
      "164": {
        start: {
          line: 464,
          column: 4
        },
        end: {
          line: 464,
          column: 35
        }
      },
      "165": {
        start: {
          line: 466,
          column: 21
        },
        end: {
          line: 466,
          column: 52
        }
      },
      "166": {
        start: {
          line: 467,
          column: 18
        },
        end: {
          line: 467,
          column: 39
        }
      },
      "167": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 472,
          column: 5
        }
      },
      "168": {
        start: {
          line: 471,
          column: 6
        },
        end: {
          line: 471,
          column: 71
        }
      },
      "169": {
        start: {
          line: 471,
          column: 41
        },
        end: {
          line: 471,
          column: 69
        }
      },
      "170": {
        start: {
          line: 474,
          column: 4
        },
        end: {
          line: 476,
          column: 5
        }
      },
      "171": {
        start: {
          line: 475,
          column: 6
        },
        end: {
          line: 475,
          column: 87
        }
      },
      "172": {
        start: {
          line: 475,
          column: 41
        },
        end: {
          line: 475,
          column: 85
        }
      },
      "173": {
        start: {
          line: 478,
          column: 4
        },
        end: {
          line: 480,
          column: 5
        }
      },
      "174": {
        start: {
          line: 479,
          column: 6
        },
        end: {
          line: 479,
          column: 48
        }
      },
      "175": {
        start: {
          line: 483,
          column: 4
        },
        end: {
          line: 483,
          column: 74
        }
      },
      "176": {
        start: {
          line: 483,
          column: 27
        },
        end: {
          line: 483,
          column: 72
        }
      },
      "177": {
        start: {
          line: 486,
          column: 4
        },
        end: {
          line: 496,
          column: 5
        }
      },
      "178": {
        start: {
          line: 487,
          column: 6
        },
        end: {
          line: 495,
          column: 7
        }
      },
      "179": {
        start: {
          line: 488,
          column: 22
        },
        end: {
          line: 488,
          column: 48
        }
      },
      "180": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 29
        }
      },
      "181": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 490,
          column: 39
        }
      },
      "182": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 491,
          column: 42
        }
      },
      "183": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 493,
          column: 30
        }
      },
      "184": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 37
        }
      },
      "185": {
        start: {
          line: 498,
          column: 4
        },
        end: {
          line: 498,
          column: 19
        }
      },
      "186": {
        start: {
          line: 502,
          column: 4
        },
        end: {
          line: 502,
          column: 35
        }
      },
      "187": {
        start: {
          line: 504,
          column: 21
        },
        end: {
          line: 504,
          column: 59
        }
      },
      "188": {
        start: {
          line: 505,
          column: 4
        },
        end: {
          line: 507,
          column: 5
        }
      },
      "189": {
        start: {
          line: 506,
          column: 6
        },
        end: {
          line: 506,
          column: 55
        }
      },
      "190": {
        start: {
          line: 510,
          column: 4
        },
        end: {
          line: 527,
          column: 5
        }
      },
      "191": {
        start: {
          line: 511,
          column: 20
        },
        end: {
          line: 511,
          column: 48
        }
      },
      "192": {
        start: {
          line: 513,
          column: 6
        },
        end: {
          line: 519,
          column: 8
        }
      },
      "193": {
        start: {
          line: 521,
          column: 6
        },
        end: {
          line: 526,
          column: 8
        }
      },
      "194": {
        start: {
          line: 532,
          column: 4
        },
        end: {
          line: 534,
          column: 5
        }
      },
      "195": {
        start: {
          line: 533,
          column: 6
        },
        end: {
          line: 533,
          column: 30
        }
      },
      "196": {
        start: {
          line: 538,
          column: 4
        },
        end: {
          line: 545,
          column: 5
        }
      },
      "197": {
        start: {
          line: 539,
          column: 6
        },
        end: {
          line: 539,
          column: 58
        }
      },
      "198": {
        start: {
          line: 540,
          column: 6
        },
        end: {
          line: 540,
          column: 55
        }
      },
      "199": {
        start: {
          line: 541,
          column: 6
        },
        end: {
          line: 541,
          column: 71
        }
      },
      "200": {
        start: {
          line: 543,
          column: 6
        },
        end: {
          line: 543,
          column: 79
        }
      },
      "201": {
        start: {
          line: 544,
          column: 6
        },
        end: {
          line: 544,
          column: 18
        }
      },
      "202": {
        start: {
          line: 549,
          column: 4
        },
        end: {
          line: 564,
          column: 5
        }
      },
      "203": {
        start: {
          line: 550,
          column: 19
        },
        end: {
          line: 550,
          column: 63
        }
      },
      "204": {
        start: {
          line: 551,
          column: 23
        },
        end: {
          line: 551,
          column: 39
        }
      },
      "205": {
        start: {
          line: 552,
          column: 6
        },
        end: {
          line: 552,
          column: 86
        }
      },
      "206": {
        start: {
          line: 553,
          column: 6
        },
        end: {
          line: 553,
          column: 22
        }
      },
      "207": {
        start: {
          line: 556,
          column: 23
        },
        end: {
          line: 560,
          column: 7
        }
      },
      "208": {
        start: {
          line: 561,
          column: 6
        },
        end: {
          line: 561,
          column: 46
        }
      },
      "209": {
        start: {
          line: 562,
          column: 6
        },
        end: {
          line: 562,
          column: 59
        }
      },
      "210": {
        start: {
          line: 563,
          column: 6
        },
        end: {
          line: 563,
          column: 22
        }
      },
      "211": {
        start: {
          line: 568,
          column: 4
        },
        end: {
          line: 568,
          column: 52
        }
      },
      "212": {
        start: {
          line: 569,
          column: 4
        },
        end: {
          line: 569,
          column: 77
        }
      },
      "213": {
        start: {
          line: 570,
          column: 4
        },
        end: {
          line: 570,
          column: 56
        }
      },
      "214": {
        start: {
          line: 571,
          column: 4
        },
        end: {
          line: 571,
          column: 47
        }
      },
      "215": {
        start: {
          line: 575,
          column: 21
        },
        end: {
          line: 575,
          column: 52
        }
      },
      "216": {
        start: {
          line: 578,
          column: 4
        },
        end: {
          line: 578,
          column: 98
        }
      },
      "217": {
        start: {
          line: 578,
          column: 57
        },
        end: {
          line: 578,
          column: 96
        }
      },
      "218": {
        start: {
          line: 581,
          column: 4
        },
        end: {
          line: 581,
          column: 38
        }
      },
      "219": {
        start: {
          line: 583,
          column: 4
        },
        end: {
          line: 583,
          column: 44
        }
      },
      "220": {
        start: {
          line: 587,
          column: 21
        },
        end: {
          line: 587,
          column: 52
        }
      },
      "221": {
        start: {
          line: 588,
          column: 4
        },
        end: {
          line: 588,
          column: 73
        }
      },
      "222": {
        start: {
          line: 588,
          column: 43
        },
        end: {
          line: 588,
          column: 71
        }
      },
      "223": {
        start: {
          line: 592,
          column: 21
        },
        end: {
          line: 592,
          column: 52
        }
      },
      "224": {
        start: {
          line: 593,
          column: 4
        },
        end: {
          line: 595,
          column: 6
        }
      },
      "225": {
        start: {
          line: 594,
          column: 6
        },
        end: {
          line: 594,
          column: 78
        }
      },
      "226": {
        start: {
          line: 599,
          column: 4
        },
        end: {
          line: 606,
          column: 7
        }
      },
      "227": {
        start: {
          line: 600,
          column: 19
        },
        end: {
          line: 600,
          column: 46
        }
      },
      "228": {
        start: {
          line: 601,
          column: 21
        },
        end: {
          line: 601,
          column: 61
        }
      },
      "229": {
        start: {
          line: 603,
          column: 6
        },
        end: {
          line: 603,
          column: 51
        }
      },
      "230": {
        start: {
          line: 603,
          column: 32
        },
        end: {
          line: 603,
          column: 49
        }
      },
      "231": {
        start: {
          line: 604,
          column: 6
        },
        end: {
          line: 604,
          column: 58
        }
      },
      "232": {
        start: {
          line: 604,
          column: 29
        },
        end: {
          line: 604,
          column: 56
        }
      },
      "233": {
        start: {
          line: 605,
          column: 6
        },
        end: {
          line: 605,
          column: 33
        }
      },
      "234": {
        start: {
          line: 610,
          column: 4
        },
        end: {
          line: 615,
          column: 5
        }
      },
      "235": {
        start: {
          line: 611,
          column: 6
        },
        end: {
          line: 611,
          column: 53
        }
      },
      "236": {
        start: {
          line: 612,
          column: 6
        },
        end: {
          line: 612,
          column: 18
        }
      },
      "237": {
        start: {
          line: 614,
          column: 6
        },
        end: {
          line: 614,
          column: 19
        }
      },
      "238": {
        start: {
          line: 619,
          column: 0
        },
        end: {
          line: 619,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 3
          }
        },
        loc: {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 21,
            column: 3
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 2
          },
          end: {
            line: 23,
            column: 3
          }
        },
        loc: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 3
          }
        },
        loc: {
          start: {
            line: 47,
            column: 48
          },
          end: {
            line: 100,
            column: 3
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 102,
            column: 2
          },
          end: {
            line: 102,
            column: 3
          }
        },
        loc: {
          start: {
            line: 102,
            column: 32
          },
          end: {
            line: 141,
            column: 3
          }
        },
        line: 102
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 143,
            column: 2
          },
          end: {
            line: 143,
            column: 3
          }
        },
        loc: {
          start: {
            line: 143,
            column: 41
          },
          end: {
            line: 205,
            column: 3
          }
        },
        line: 143
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 207,
            column: 2
          },
          end: {
            line: 207,
            column: 3
          }
        },
        loc: {
          start: {
            line: 207,
            column: 50
          },
          end: {
            line: 284,
            column: 3
          }
        },
        line: 207
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 286,
            column: 2
          },
          end: {
            line: 286,
            column: 3
          }
        },
        loc: {
          start: {
            line: 286,
            column: 41
          },
          end: {
            line: 325,
            column: 3
          }
        },
        line: 286
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 327,
            column: 2
          },
          end: {
            line: 327,
            column: 3
          }
        },
        loc: {
          start: {
            line: 327,
            column: 42
          },
          end: {
            line: 357,
            column: 3
          }
        },
        line: 327
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 359,
            column: 2
          },
          end: {
            line: 359,
            column: 3
          }
        },
        loc: {
          start: {
            line: 359,
            column: 42
          },
          end: {
            line: 402,
            column: 3
          }
        },
        line: 359
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 404,
            column: 2
          },
          end: {
            line: 404,
            column: 3
          }
        },
        loc: {
          start: {
            line: 404,
            column: 32
          },
          end: {
            line: 461,
            column: 3
          }
        },
        line: 404
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 415,
            column: 53
          },
          end: {
            line: 415,
            column: 54
          }
        },
        loc: {
          start: {
            line: 415,
            column: 63
          },
          end: {
            line: 418,
            column: 7
          }
        },
        line: 415
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 440,
            column: 49
          },
          end: {
            line: 440,
            column: 50
          }
        },
        loc: {
          start: {
            line: 440,
            column: 59
          },
          end: {
            line: 442,
            column: 7
          }
        },
        line: 440
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 441,
            column: 36
          },
          end: {
            line: 441,
            column: 37
          }
        },
        loc: {
          start: {
            line: 441,
            column: 47
          },
          end: {
            line: 441,
            column: 83
          }
        },
        line: 441
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 463,
            column: 2
          },
          end: {
            line: 463,
            column: 3
          }
        },
        loc: {
          start: {
            line: 463,
            column: 34
          },
          end: {
            line: 499,
            column: 3
          }
        },
        line: 463
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 471,
            column: 31
          },
          end: {
            line: 471,
            column: 32
          }
        },
        loc: {
          start: {
            line: 471,
            column: 41
          },
          end: {
            line: 471,
            column: 69
          }
        },
        line: 471
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 475,
            column: 31
          },
          end: {
            line: 475,
            column: 32
          }
        },
        loc: {
          start: {
            line: 475,
            column: 41
          },
          end: {
            line: 475,
            column: 85
          }
        },
        line: 475
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 483,
            column: 17
          },
          end: {
            line: 483,
            column: 18
          }
        },
        loc: {
          start: {
            line: 483,
            column: 27
          },
          end: {
            line: 483,
            column: 72
          }
        },
        line: 483
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 501,
            column: 2
          },
          end: {
            line: 501,
            column: 3
          }
        },
        loc: {
          start: {
            line: 501,
            column: 32
          },
          end: {
            line: 528,
            column: 3
          }
        },
        line: 501
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 531,
            column: 2
          },
          end: {
            line: 531,
            column: 3
          }
        },
        loc: {
          start: {
            line: 531,
            column: 28
          },
          end: {
            line: 535,
            column: 3
          }
        },
        line: 531
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 537,
            column: 2
          },
          end: {
            line: 537,
            column: 3
          }
        },
        loc: {
          start: {
            line: 537,
            column: 32
          },
          end: {
            line: 546,
            column: 3
          }
        },
        line: 537
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 548,
            column: 2
          },
          end: {
            line: 548,
            column: 3
          }
        },
        loc: {
          start: {
            line: 548,
            column: 29
          },
          end: {
            line: 565,
            column: 3
          }
        },
        line: 548
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 567,
            column: 2
          },
          end: {
            line: 567,
            column: 3
          }
        },
        loc: {
          start: {
            line: 567,
            column: 37
          },
          end: {
            line: 572,
            column: 3
          }
        },
        line: 567
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 574,
            column: 2
          },
          end: {
            line: 574,
            column: 3
          }
        },
        loc: {
          start: {
            line: 574,
            column: 41
          },
          end: {
            line: 584,
            column: 3
          }
        },
        line: 574
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 578,
            column: 47
          },
          end: {
            line: 578,
            column: 48
          }
        },
        loc: {
          start: {
            line: 578,
            column: 57
          },
          end: {
            line: 578,
            column: 96
          }
        },
        line: 578
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 586,
            column: 2
          },
          end: {
            line: 586,
            column: 3
          }
        },
        loc: {
          start: {
            line: 586,
            column: 36
          },
          end: {
            line: 589,
            column: 3
          }
        },
        line: 586
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 588,
            column: 33
          },
          end: {
            line: 588,
            column: 34
          }
        },
        loc: {
          start: {
            line: 588,
            column: 43
          },
          end: {
            line: 588,
            column: 71
          }
        },
        line: 588
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 591,
            column: 2
          },
          end: {
            line: 591,
            column: 3
          }
        },
        loc: {
          start: {
            line: 591,
            column: 46
          },
          end: {
            line: 596,
            column: 3
          }
        },
        line: 591
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 593,
            column: 33
          },
          end: {
            line: 593,
            column: 34
          }
        },
        loc: {
          start: {
            line: 594,
            column: 6
          },
          end: {
            line: 594,
            column: 78
          }
        },
        line: 594
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 598,
            column: 2
          },
          end: {
            line: 598,
            column: 3
          }
        },
        loc: {
          start: {
            line: 598,
            column: 36
          },
          end: {
            line: 607,
            column: 3
          }
        },
        line: 598
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 599,
            column: 23
          },
          end: {
            line: 599,
            column: 24
          }
        },
        loc: {
          start: {
            line: 599,
            column: 44
          },
          end: {
            line: 606,
            column: 5
          }
        },
        line: 599
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 603,
            column: 24
          },
          end: {
            line: 603,
            column: 25
          }
        },
        loc: {
          start: {
            line: 603,
            column: 32
          },
          end: {
            line: 603,
            column: 49
          }
        },
        line: 603
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 604,
            column: 23
          },
          end: {
            line: 604,
            column: 24
          }
        },
        loc: {
          start: {
            line: 604,
            column: 29
          },
          end: {
            line: 604,
            column: 56
          }
        },
        line: 604
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 609,
            column: 2
          },
          end: {
            line: 609,
            column: 3
          }
        },
        loc: {
          start: {
            line: 609,
            column: 39
          },
          end: {
            line: 616,
            column: 3
          }
        },
        line: 609
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 14
          },
          end: {
            line: 14,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 14,
            column: 26
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }, {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 15,
            column: 40
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 18,
            column: 38
          }
        }, {
          start: {
            line: 18,
            column: 42
          },
          end: {
            line: 18,
            column: 51
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 153,
            column: 6
          },
          end: {
            line: 155,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 6
          },
          end: {
            line: 155,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "5": {
        loc: {
          start: {
            line: 153,
            column: 10
          },
          end: {
            line: 153,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 10
          },
          end: {
            line: 153,
            column: 22
          }
        }, {
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 50
          }
        }],
        line: 153
      },
      "6": {
        loc: {
          start: {
            line: 165,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 6
          },
          end: {
            line: 167,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "7": {
        loc: {
          start: {
            line: 165,
            column: 10
          },
          end: {
            line: 165,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 10
          },
          end: {
            line: 165,
            column: 16
          }
        }, {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 44
          }
        }],
        line: 165
      },
      "8": {
        loc: {
          start: {
            line: 186,
            column: 19
          },
          end: {
            line: 186,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 19
          },
          end: {
            line: 186,
            column: 37
          }
        }, {
          start: {
            line: 186,
            column: 41
          },
          end: {
            line: 186,
            column: 50
          }
        }],
        line: 186
      },
      "9": {
        loc: {
          start: {
            line: 207,
            column: 36
          },
          end: {
            line: 207,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 207,
            column: 46
          },
          end: {
            line: 207,
            column: 48
          }
        }],
        line: 207
      },
      "10": {
        loc: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "11": {
        loc: {
          start: {
            line: 230,
            column: 6
          },
          end: {
            line: 232,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 6
          },
          end: {
            line: 232,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "12": {
        loc: {
          start: {
            line: 235,
            column: 6
          },
          end: {
            line: 241,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 6
          },
          end: {
            line: 241,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "13": {
        loc: {
          start: {
            line: 256,
            column: 23
          },
          end: {
            line: 256,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 23
          },
          end: {
            line: 256,
            column: 41
          }
        }, {
          start: {
            line: 256,
            column: 45
          },
          end: {
            line: 256,
            column: 54
          }
        }],
        line: 256
      },
      "14": {
        loc: {
          start: {
            line: 262,
            column: 23
          },
          end: {
            line: 262,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 23
          },
          end: {
            line: 262,
            column: 41
          }
        }, {
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 262,
            column: 54
          }
        }],
        line: 262
      },
      "15": {
        loc: {
          start: {
            line: 294,
            column: 6
          },
          end: {
            line: 296,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 6
          },
          end: {
            line: 296,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "16": {
        loc: {
          start: {
            line: 336,
            column: 6
          },
          end: {
            line: 338,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 6
          },
          end: {
            line: 338,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "17": {
        loc: {
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      },
      "18": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "19": {
        loc: {
          start: {
            line: 409,
            column: 26
          },
          end: {
            line: 409,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 409,
            column: 26
          },
          end: {
            line: 409,
            column: 87
          }
        }, {
          start: {
            line: 409,
            column: 91
          },
          end: {
            line: 409,
            column: 92
          }
        }],
        line: 409
      },
      "20": {
        loc: {
          start: {
            line: 417,
            column: 15
          },
          end: {
            line: 417,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 15
          },
          end: {
            line: 417,
            column: 38
          }
        }, {
          start: {
            line: 417,
            column: 42
          },
          end: {
            line: 417,
            column: 66
          }
        }],
        line: 417
      },
      "21": {
        loc: {
          start: {
            line: 463,
            column: 20
          },
          end: {
            line: 463,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 463,
            column: 30
          },
          end: {
            line: 463,
            column: 32
          }
        }],
        line: 463
      },
      "22": {
        loc: {
          start: {
            line: 470,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "23": {
        loc: {
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 476,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 4
          },
          end: {
            line: 476,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "24": {
        loc: {
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 478
      },
      "25": {
        loc: {
          start: {
            line: 505,
            column: 4
          },
          end: {
            line: 507,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 4
          },
          end: {
            line: 507,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 505
      },
      "26": {
        loc: {
          start: {
            line: 532,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 532,
            column: 4
          },
          end: {
            line: 534,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 532
      },
      "27": {
        loc: {
          start: {
            line: 594,
            column: 6
          },
          end: {
            line: 594,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 594,
            column: 6
          },
          end: {
            line: 594,
            column: 38
          }
        }, {
          start: {
            line: 594,
            column: 42
          },
          end: {
            line: 594,
            column: 78
          }
        }],
        line: 594
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "44d997c2e1609af94625f286f27b696247745d4d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qrrk9ngmy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qrrk9ngmy();
// scripts/backup/backup-manager.js
const fs =
/* istanbul ignore next */
(cov_2qrrk9ngmy().s[0]++, require('fs').promises);
const path =
/* istanbul ignore next */
(cov_2qrrk9ngmy().s[1]++, require('path'));
const {
  exec
} =
/* istanbul ignore next */
(cov_2qrrk9ngmy().s[2]++, require('child_process'));
const {
  promisify
} =
/* istanbul ignore next */
(cov_2qrrk9ngmy().s[3]++, require('util'));
const crypto =
/* istanbul ignore next */
(cov_2qrrk9ngmy().s[4]++, require('crypto'));
const execAsync =
/* istanbul ignore next */
(cov_2qrrk9ngmy().s[5]++, promisify(exec));

// Import dependencies from existing services
const {
  Logger
} =
/* istanbul ignore next */
(cov_2qrrk9ngmy().s[6]++, require('../services/utils/logger'));
const {
  MCPCoordinator
} =
/* istanbul ignore next */
(cov_2qrrk9ngmy().s[7]++, require('../services/mcp-coordinator'));
class BackupManager {
  constructor(options =
  /* istanbul ignore next */
  (cov_2qrrk9ngmy().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[0]++;
    cov_2qrrk9ngmy().s[8]++;
    this.config =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().b[1][0]++, options.config) ||
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().b[1][1]++, null);
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[9]++;
    this.logger = new Logger('BackupManager');
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[10]++;
    this.mcpCoordinator = null;
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[11]++;
    this.backupDir =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().b[2][0]++, options.backupDir) ||
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().b[2][1]++, '/backup');
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[12]++;
    this.metadataFile = path.join(this.backupDir, '.backup-metadata.json');
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[13]++;
    this.initialized = false;
  }
  async initialize() {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[1]++;
    cov_2qrrk9ngmy().s[14]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().b[3][0]++;
      cov_2qrrk9ngmy().s[15]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2qrrk9ngmy().b[3][1]++;
    }
    cov_2qrrk9ngmy().s[16]++;
    try {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[17]++;
      // Initialize MCP coordinator
      this.mcpCoordinator = new MCPCoordinator();
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[18]++;
      await this.mcpCoordinator.initialize();

      // Ensure backup directory exists
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[19]++;
      await this.ensureBackupDirectory();

      // Load existing metadata
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[20]++;
      await this.loadBackupMetadata();
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[21]++;
      this.initialized = true;
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[22]++;
      this.logger.info('Backup Manager initialized successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[23]++;
      this.logger.error('Failed to initialize Backup Manager', {
        error: error.message
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[24]++;
      throw error;
    }
  }
  async createPreDeploymentBackup(deploymentId) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[2]++;
    cov_2qrrk9ngmy().s[25]++;
    await this.ensureInitialized();
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[26]++;
    this.logger.info(`Creating pre-deployment backup for deployment: ${deploymentId}`);
    const backupId =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[27]++, `pre-deploy-${deploymentId}-${Date.now()}`);
    const timestamp =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[28]++, new Date().toISOString());
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[29]++;
    try {
      // Create backup
      const backupResult =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[30]++, await this.createBackup(backupId, {
        type: 'pre-deployment',
        deploymentId: deploymentId,
        timestamp: timestamp,
        reason: 'Pre-deployment safety backup'
      }));

      // Verify backup integrity
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[31]++;
      await this.verifyBackupIntegrity(backupResult.path);

      // Update metadata
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[32]++;
      await this.updateBackupMetadata({
        backupId: backupId,
        path: backupResult.path,
        type: 'pre-deployment',
        deploymentId: deploymentId,
        timestamp: timestamp,
        size: backupResult.size,
        checksum: backupResult.checksum,
        verified: true,
        fileCount: backupResult.fileCount
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[33]++;
      this.logger.info(`Pre-deployment backup created successfully`, {
        backupId,
        path: backupResult.path,
        size: backupResult.size
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[34]++;
      return {
        backupId: backupId,
        path: backupResult.path,
        size: backupResult.size,
        checksum: backupResult.checksum
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[35]++;
      this.logger.error(`Failed to create pre-deployment backup`, {
        deploymentId,
        error: error.message
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[36]++;
      throw error;
    }
  }
  async createScheduledBackup() {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[3]++;
    cov_2qrrk9ngmy().s[37]++;
    await this.ensureInitialized();
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[38]++;
    this.logger.info('Creating scheduled backup');
    const backupId =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[39]++, `scheduled-${Date.now()}`);
    const timestamp =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[40]++, new Date().toISOString());
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[41]++;
    try {
      const backupResult =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[42]++, await this.createBackup(backupId, {
        type: 'scheduled',
        timestamp: timestamp,
        reason: 'Scheduled backup'
      }));
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[43]++;
      await this.verifyBackupIntegrity(backupResult.path);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[44]++;
      await this.updateBackupMetadata({
        backupId: backupId,
        path: backupResult.path,
        type: 'scheduled',
        timestamp: timestamp,
        size: backupResult.size,
        checksum: backupResult.checksum,
        verified: true,
        fileCount: backupResult.fileCount
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[45]++;
      this.logger.info(`Scheduled backup created successfully`, {
        backupId,
        size: backupResult.size
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[46]++;
      return backupId;
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[47]++;
      this.logger.error(`Failed to create scheduled backup`, {
        error: error.message
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[48]++;
      throw error;
    }
  }
  async createBackup(backupId, metadata) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[4]++;
    const backupPath =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[49]++, path.join(this.backupDir, `${backupId}.tar.gz`));
    const configPath =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[50]++, '/config');
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[51]++;
    this.logger.info(`Creating backup: ${backupId}`, {
      backupPath
    });
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[52]++;
    try {
      // Use MCP coordinator to get configuration files list first
      const configFiles =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[53]++, await this.mcpCoordinator.getConfigurationFiles());
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[54]++;
      if (
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().b[5][0]++, !configFiles) ||
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().b[5][1]++, configFiles.length === 0)) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().b[4][0]++;
        cov_2qrrk9ngmy().s[55]++;
        this.logger.warn('No configuration files found for backup');
      } else
      /* istanbul ignore next */
      {
        cov_2qrrk9ngmy().b[4][1]++;
      }

      // Create compressed backup using tar
      const tarCommand =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[56]++, `tar -czf "${backupPath}" -C "${configPath}" .`);
      const {
        stdout,
        stderr
      } =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[57]++, await execAsync(tarCommand, {
        timeout: 300000,
        // 5 minute timeout
        maxBuffer: 1024 * 1024 * 10 // 10MB buffer
      }));
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[58]++;
      if (
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().b[7][0]++, stderr) &&
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().b[7][1]++, !stderr.includes('tar:'))) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().b[6][0]++;
        cov_2qrrk9ngmy().s[59]++;
        this.logger.warn(`Backup creation warnings: ${stderr}`);
      } else
      /* istanbul ignore next */
      {
        cov_2qrrk9ngmy().b[6][1]++;
      }

      // Set appropriate permissions
      cov_2qrrk9ngmy().s[60]++;
      await execAsync(`chmod 600 "${backupPath}"`);

      // Calculate file stats
      const stats =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[61]++, await fs.stat(backupPath));
      const checksum =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[62]++, await this.calculateChecksum(backupPath));
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[63]++;
      this.logger.info(`Backup file created successfully`, {
        backupId,
        path: backupPath,
        size: stats.size
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[64]++;
      return {
        path: backupPath,
        size: stats.size,
        checksum: checksum,
        fileCount:
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().b[8][0]++, configFiles.length) ||
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().b[8][1]++, 'unknown')
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[65]++;
      this.logger.error(`Failed to create backup: ${backupId}`, {
        error: error.message
      });

      // Clean up failed backup
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[66]++;
      try {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[67]++;
        await fs.unlink(backupPath);
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[68]++;
        this.logger.info(`Cleaned up failed backup file: ${backupPath}`);
      } catch (cleanupError) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[69]++;
        this.logger.warn(`Failed to cleanup failed backup`, {
          backupPath,
          error: cleanupError.message
        });
      }
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[70]++;
      throw error;
    }
  }
  async restoreFromBackup(backupId, options =
  /* istanbul ignore next */
  (cov_2qrrk9ngmy().b[9][0]++, {})) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[5]++;
    cov_2qrrk9ngmy().s[71]++;
    await this.ensureInitialized();
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[72]++;
    this.logger.info(`Starting restoration from backup: ${backupId}`, options);
    const metadata =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[73]++, await this.getBackupMetadata(backupId));
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[74]++;
    if (!metadata) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().b[10][0]++;
      cov_2qrrk9ngmy().s[75]++;
      throw new Error(`Backup not found: ${backupId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qrrk9ngmy().b[10][1]++;
    }
    const backupPath =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[76]++, metadata.path);
    const configPath =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[77]++, '/config');
    const tempRestorePath =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[78]++, `/tmp/restore-${Date.now()}`);
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[79]++;
    try {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[80]++;
      // Verify backup integrity before restoration
      await this.verifyBackupIntegrity(backupPath);

      // Extract backup to temporary location
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[81]++;
      await execAsync(`mkdir -p "${tempRestorePath}"`);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[82]++;
      await execAsync(`tar -xzf "${backupPath}" -C "${tempRestorePath}"`);

      // Validate extracted configuration if requested
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[83]++;
      if (!options.skipValidation) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().b[11][0]++;
        cov_2qrrk9ngmy().s[84]++;
        await this.validateConfiguration(tempRestorePath);
      } else
      /* istanbul ignore next */
      {
        cov_2qrrk9ngmy().b[11][1]++;
      }

      // Create current config backup before restoration
      cov_2qrrk9ngmy().s[85]++;
      if (!options.skipCurrentBackup) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().b[12][0]++;
        cov_2qrrk9ngmy().s[86]++;
        await this.createBackup(`pre-restore-${Date.now()}`, {
          type: 'pre-restore',
          timestamp: new Date().toISOString(),
          reason: `Backup before restoring ${backupId}`
        });
      } else
      /* istanbul ignore next */
      {
        cov_2qrrk9ngmy().b[12][1]++;
      }

      // Restore configuration using MCP coordinator
      cov_2qrrk9ngmy().s[87]++;
      await this.mcpCoordinator.deploymentOperations({
        repository: 'backup-restore',
        branch: 'restore',
        backupPath: tempRestorePath,
        targetPath: configPath
      });

      // Cleanup temporary files
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[88]++;
      await execAsync(`rm -rf "${tempRestorePath}"`);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[89]++;
      this.logger.info(`Restoration completed successfully`, {
        backupId,
        restoredFiles:
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().b[13][0]++, metadata.fileCount) ||
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().b[13][1]++, 'unknown')
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[90]++;
      return {
        success: true,
        backupId: backupId,
        restoredFiles:
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().b[14][0]++, metadata.fileCount) ||
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().b[14][1]++, 'unknown'),
        restoredSize: metadata.size
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[91]++;
      this.logger.error(`Restoration failed`, {
        backupId,
        error: error.message
      });

      // Cleanup temporary files
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[92]++;
      try {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[93]++;
        await execAsync(`rm -rf "${tempRestorePath}"`);
      } catch (cleanupError) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[94]++;
        this.logger.warn(`Failed to cleanup temporary files`, {
          tempRestorePath,
          error: cleanupError.message
        });
      }
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[95]++;
      throw error;
    }
  }
  async rollbackDeployment(deploymentId) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[6]++;
    cov_2qrrk9ngmy().s[96]++;
    await this.ensureInitialized();
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[97]++;
    this.logger.info(`Rolling back deployment: ${deploymentId}`);
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[98]++;
    try {
      // Find pre-deployment backup
      const backupMetadata =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[99]++, await this.findPreDeploymentBackup(deploymentId));
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[100]++;
      if (!backupMetadata) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().b[15][0]++;
        cov_2qrrk9ngmy().s[101]++;
        throw new Error(`No pre-deployment backup found for deployment: ${deploymentId}`);
      } else
      /* istanbul ignore next */
      {
        cov_2qrrk9ngmy().b[15][1]++;
      }

      // Restore from backup
      const result =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[102]++, await this.restoreFromBackup(backupMetadata.backupId, {
        skipCurrentBackup: true // Don't backup current state during rollback
      }));

      // Update metadata to mark as rollback
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[103]++;
      await this.updateBackupMetadata({
        ...backupMetadata,
        rollbackTimestamp: new Date().toISOString(),
        rollbackDeploymentId: deploymentId,
        rollbackCompleted: true
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[104]++;
      this.logger.info(`Rollback completed successfully`, {
        deploymentId,
        backupId: backupMetadata.backupId
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[105]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[106]++;
      this.logger.error(`Rollback failed`, {
        deploymentId,
        error: error.message
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[107]++;
      throw error;
    }
  }
  async verifyBackupIntegrity(backupPath) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[7]++;
    cov_2qrrk9ngmy().s[108]++;
    this.logger.debug(`Verifying backup integrity: ${backupPath}`);
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[109]++;
    try {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[110]++;
      // Test tar file integrity
      await execAsync(`tar -tzf "${backupPath}" > /dev/null`);

      // Verify file exists and has content
      const stats =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[111]++, await fs.stat(backupPath));
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[112]++;
      if (stats.size === 0) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().b[16][0]++;
        cov_2qrrk9ngmy().s[113]++;
        throw new Error('Backup file is empty');
      } else
      /* istanbul ignore next */
      {
        cov_2qrrk9ngmy().b[16][1]++;
      }

      // Verify file is accessible
      cov_2qrrk9ngmy().s[114]++;
      await fs.access(backupPath, fs.constants.R_OK);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[115]++;
      this.logger.debug(`Backup integrity verified successfully`, {
        path: backupPath,
        size: stats.size
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[116]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[117]++;
      this.logger.error(`Backup integrity verification failed`, {
        path: backupPath,
        error: error.message
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[118]++;
      throw new Error(`Backup integrity verification failed: ${error.message}`);
    }
  }
  async validateConfiguration(configPath) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[8]++;
    cov_2qrrk9ngmy().s[119]++;
    this.logger.debug(`Validating configuration: ${configPath}`);
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[120]++;
    try {
      // Check for essential Home Assistant files
      const essentialFiles =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[121]++, ['configuration.yaml', 'automations.yaml', 'scripts.yaml']);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[122]++;
      for (const file of essentialFiles) {
        const filePath =
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().s[123]++, path.join(configPath, file));
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[124]++;
        try {
          /* istanbul ignore next */
          cov_2qrrk9ngmy().s[125]++;
          await fs.access(filePath, fs.constants.R_OK);
        } catch (error) {
          /* istanbul ignore next */
          cov_2qrrk9ngmy().s[126]++;
          this.logger.warn(`Essential file missing: ${file}`);
        }
      }

      // Basic YAML validation for configuration.yaml
      const configFile =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[127]++, path.join(configPath, 'configuration.yaml'));
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[128]++;
      try {
        const configContent =
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().s[129]++, await fs.readFile(configFile, 'utf8'));
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[130]++;
        if (configContent.trim().length === 0) {
          /* istanbul ignore next */
          cov_2qrrk9ngmy().b[17][0]++;
          cov_2qrrk9ngmy().s[131]++;
          throw new Error('Configuration file is empty');
        } else
        /* istanbul ignore next */
        {
          cov_2qrrk9ngmy().b[17][1]++;
        }

        // Basic YAML structure check
        cov_2qrrk9ngmy().s[132]++;
        if (!configContent.includes('homeassistant:')) {
          /* istanbul ignore next */
          cov_2qrrk9ngmy().b[18][0]++;
          cov_2qrrk9ngmy().s[133]++;
          this.logger.warn('Configuration may be missing homeassistant section');
        } else
        /* istanbul ignore next */
        {
          cov_2qrrk9ngmy().b[18][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[134]++;
        this.logger.warn(`Configuration validation warning: ${error.message}`);
      }
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[135]++;
      this.logger.debug('Configuration validation completed');
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[136]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[137]++;
      this.logger.error(`Configuration validation failed: ${error.message}`);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[138]++;
      throw error;
    }
  }
  async cleanupExpiredBackups() {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[9]++;
    cov_2qrrk9ngmy().s[139]++;
    await this.ensureInitialized();
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[140]++;
    this.logger.info('Starting cleanup of expired backups');
    const retentionDays =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[141]++,
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().b[19][0]++, this.config?.deployment?.homeAssistantConfig?.backupRetention) ||
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().b[19][1]++, 7));
    const cutoffDate =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[142]++, new Date());
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[143]++;
    cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[144]++;
    try {
      const metadata =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[145]++, await this.loadBackupMetadata());
      const expiredBackups =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[146]++, metadata.backups.filter(backup => {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().f[10]++;
        const backupDate =
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().s[147]++, new Date(backup.timestamp));
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[148]++;
        return /* istanbul ignore next */(cov_2qrrk9ngmy().b[20][0]++, backupDate < cutoffDate) &&
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().b[20][1]++, backup.type !== 'manual'); // Keep manual backups
      }));
      let deletedCount =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[149]++, 0);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[150]++;
      for (const backup of expiredBackups) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[151]++;
        try {
          /* istanbul ignore next */
          cov_2qrrk9ngmy().s[152]++;
          await fs.unlink(backup.path);
          /* istanbul ignore next */
          cov_2qrrk9ngmy().s[153]++;
          deletedCount++;
          /* istanbul ignore next */
          cov_2qrrk9ngmy().s[154]++;
          this.logger.info(`Deleted expired backup`, {
            backupId: backup.backupId,
            path: backup.path,
            age: Math.floor((Date.now() - new Date(backup.timestamp).getTime()) / (1000 * 60 * 60 * 24))
          });
        } catch (error) {
          /* istanbul ignore next */
          cov_2qrrk9ngmy().s[155]++;
          this.logger.warn(`Failed to delete expired backup`, {
            backupId: backup.backupId,
            error: error.message
          });
        }
      }

      // Update metadata to remove deleted backups
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[156]++;
      metadata.backups = metadata.backups.filter(backup => {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().f[11]++;
        cov_2qrrk9ngmy().s[157]++;
        return !expiredBackups.some(expired => {
          /* istanbul ignore next */
          cov_2qrrk9ngmy().f[12]++;
          cov_2qrrk9ngmy().s[158]++;
          return expired.backupId === backup.backupId;
        });
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[159]++;
      await this.saveBackupMetadata(metadata);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[160]++;
      this.logger.info(`Cleanup completed successfully`, {
        deletedCount,
        retentionDays,
        totalBackups: metadata.backups.length
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[161]++;
      return {
        deletedCount,
        remainingBackups: metadata.backups.length
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[162]++;
      this.logger.error(`Backup cleanup failed: ${error.message}`);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[163]++;
      throw error;
    }
  }
  async listBackups(options =
  /* istanbul ignore next */
  (cov_2qrrk9ngmy().b[21][0]++, {})) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[13]++;
    cov_2qrrk9ngmy().s[164]++;
    await this.ensureInitialized();
    const metadata =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[165]++, await this.loadBackupMetadata());
    let backups =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[166]++, [...metadata.backups]);

    // Apply filters
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[167]++;
    if (options.type) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().b[22][0]++;
      cov_2qrrk9ngmy().s[168]++;
      backups = backups.filter(backup => {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().f[14]++;
        cov_2qrrk9ngmy().s[169]++;
        return backup.type === options.type;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qrrk9ngmy().b[22][1]++;
    }
    cov_2qrrk9ngmy().s[170]++;
    if (options.deploymentId) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().b[23][0]++;
      cov_2qrrk9ngmy().s[171]++;
      backups = backups.filter(backup => {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().f[15]++;
        cov_2qrrk9ngmy().s[172]++;
        return backup.deploymentId === options.deploymentId;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2qrrk9ngmy().b[23][1]++;
    }
    cov_2qrrk9ngmy().s[173]++;
    if (options.limit) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().b[24][0]++;
      cov_2qrrk9ngmy().s[174]++;
      backups = backups.slice(0, options.limit);
    } else
    /* istanbul ignore next */
    {
      cov_2qrrk9ngmy().b[24][1]++;
    }

    // Sort by timestamp (newest first)
    cov_2qrrk9ngmy().s[175]++;
    backups.sort((a, b) => {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().f[16]++;
      cov_2qrrk9ngmy().s[176]++;
      return new Date(b.timestamp) - new Date(a.timestamp);
    });

    // Add runtime information
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[177]++;
    for (const backup of backups) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[178]++;
      try {
        const stats =
        /* istanbul ignore next */
        (cov_2qrrk9ngmy().s[179]++, await fs.stat(backup.path));
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[180]++;
        backup.exists = true;
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[181]++;
        backup.actualSize = stats.size;
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[182]++;
        backup.lastModified = stats.mtime;
      } catch (error) {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[183]++;
        backup.exists = false;
        /* istanbul ignore next */
        cov_2qrrk9ngmy().s[184]++;
        backup.error = error.message;
      }
    }
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[185]++;
    return backups;
  }
  async getBackupInfo(backupId) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[17]++;
    cov_2qrrk9ngmy().s[186]++;
    await this.ensureInitialized();
    const metadata =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[187]++, await this.getBackupMetadata(backupId));
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[188]++;
    if (!metadata) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().b[25][0]++;
      cov_2qrrk9ngmy().s[189]++;
      throw new Error(`Backup not found: ${backupId}`);
    } else
    /* istanbul ignore next */
    {
      cov_2qrrk9ngmy().b[25][1]++;
    }

    // Add additional runtime info
    cov_2qrrk9ngmy().s[190]++;
    try {
      const stats =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[191]++, await fs.stat(metadata.path));
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[192]++;
      return {
        ...metadata,
        exists: true,
        actualSize: stats.size,
        lastModified: stats.mtime,
        accessible: await this.isBackupAccessible(metadata.path)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[193]++;
      return {
        ...metadata,
        exists: false,
        accessible: false,
        error: error.message
      };
    }
  }

  // Utility Methods
  async ensureInitialized() {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[18]++;
    cov_2qrrk9ngmy().s[194]++;
    if (!this.initialized) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().b[26][0]++;
      cov_2qrrk9ngmy().s[195]++;
      await this.initialize();
    } else
    /* istanbul ignore next */
    {
      cov_2qrrk9ngmy().b[26][1]++;
    }
  }
  async ensureBackupDirectory() {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[19]++;
    cov_2qrrk9ngmy().s[196]++;
    try {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[197]++;
      await fs.mkdir(this.backupDir, {
        recursive: true
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[198]++;
      await execAsync(`chmod 700 "${this.backupDir}"`);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[199]++;
      this.logger.debug(`Backup directory ensured: ${this.backupDir}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[200]++;
      this.logger.error(`Failed to create backup directory: ${error.message}`);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[201]++;
      throw error;
    }
  }
  async loadBackupMetadata() {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[20]++;
    cov_2qrrk9ngmy().s[202]++;
    try {
      const data =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[203]++, await fs.readFile(this.metadataFile, 'utf8'));
      const metadata =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[204]++, JSON.parse(data));
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[205]++;
      this.logger.debug(`Loaded backup metadata: ${metadata.backups.length} backups`);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[206]++;
      return metadata;
    } catch (error) {
      // Initialize empty metadata if file doesn't exist
      const metadata =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[207]++, {
        version: '1.0',
        created: new Date().toISOString(),
        backups: []
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[208]++;
      await this.saveBackupMetadata(metadata);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[209]++;
      this.logger.debug('Initialized new backup metadata');
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[210]++;
      return metadata;
    }
  }
  async saveBackupMetadata(metadata) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[21]++;
    cov_2qrrk9ngmy().s[211]++;
    metadata.lastUpdated = new Date().toISOString();
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[212]++;
    await fs.writeFile(this.metadataFile, JSON.stringify(metadata, null, 2));
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[213]++;
    await execAsync(`chmod 600 "${this.metadataFile}"`);
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[214]++;
    this.logger.debug('Backup metadata saved');
  }
  async updateBackupMetadata(backupInfo) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[22]++;
    const metadata =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[215]++, await this.loadBackupMetadata());

    // Remove existing entry if it exists
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[216]++;
    metadata.backups = metadata.backups.filter(backup => {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().f[23]++;
      cov_2qrrk9ngmy().s[217]++;
      return backup.backupId !== backupInfo.backupId;
    });

    // Add new entry
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[218]++;
    metadata.backups.push(backupInfo);
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[219]++;
    await this.saveBackupMetadata(metadata);
  }
  async getBackupMetadata(backupId) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[24]++;
    const metadata =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[220]++, await this.loadBackupMetadata());
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[221]++;
    return metadata.backups.find(backup => {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().f[25]++;
      cov_2qrrk9ngmy().s[222]++;
      return backup.backupId === backupId;
    });
  }
  async findPreDeploymentBackup(deploymentId) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[26]++;
    const metadata =
    /* istanbul ignore next */
    (cov_2qrrk9ngmy().s[223]++, await this.loadBackupMetadata());
    /* istanbul ignore next */
    cov_2qrrk9ngmy().s[224]++;
    return metadata.backups.find(backup => {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().f[27]++;
      cov_2qrrk9ngmy().s[225]++;
      return /* istanbul ignore next */(cov_2qrrk9ngmy().b[27][0]++, backup.type === 'pre-deployment') &&
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().b[27][1]++, backup.deploymentId === deploymentId);
    });
  }
  async calculateChecksum(filePath) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[28]++;
    cov_2qrrk9ngmy().s[226]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().f[29]++;
      const hash =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[227]++, crypto.createHash('sha256'));
      const stream =
      /* istanbul ignore next */
      (cov_2qrrk9ngmy().s[228]++, require('fs').createReadStream(filePath));
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[229]++;
      stream.on('data', data => {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().f[30]++;
        cov_2qrrk9ngmy().s[230]++;
        return hash.update(data);
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[231]++;
      stream.on('end', () => {
        /* istanbul ignore next */
        cov_2qrrk9ngmy().f[31]++;
        cov_2qrrk9ngmy().s[232]++;
        return resolve(hash.digest('hex'));
      });
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[233]++;
      stream.on('error', reject);
    });
  }
  async isBackupAccessible(backupPath) {
    /* istanbul ignore next */
    cov_2qrrk9ngmy().f[32]++;
    cov_2qrrk9ngmy().s[234]++;
    try {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[235]++;
      await fs.access(backupPath, fs.constants.R_OK);
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[236]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2qrrk9ngmy().s[237]++;
      return false;
    }
  }
}
/* istanbul ignore next */
cov_2qrrk9ngmy().s[238]++;
module.exports = {
  BackupManager
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,