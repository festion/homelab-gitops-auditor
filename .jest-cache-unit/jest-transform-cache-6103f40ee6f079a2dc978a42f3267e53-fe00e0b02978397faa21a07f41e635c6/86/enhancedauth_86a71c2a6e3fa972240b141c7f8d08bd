9343d822702e389048e8b2e6fd7aacb6
/* istanbul ignore next */
function cov_2a3yq6jmpo() {
  var path = "/home/dev/workspace/homelab-gitops-auditor/api/middleware/enhanced-auth.js";
  var hash = "807393583120c699798986f8b164eb0879649b21";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/dev/workspace/homelab-gitops-auditor/api/middleware/enhanced-auth.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 20
        },
        end: {
          line: 1,
          column: 59
        }
      },
      "1": {
        start: {
          line: 2,
          column: 23
        },
        end: {
          line: 2,
          column: 48
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "3": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 36
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "5": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 137,
          column: 3
        }
      },
      "6": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "7": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 33,
          column: 7
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 91
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "10": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 93
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "13": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "14": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 70
        }
      },
      "16": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "17": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 56,
          column: 20
        }
      },
      "18": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 64
        }
      },
      "20": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "21": {
        start: {
          line: 66,
          column: 32
        },
        end: {
          line: 66,
          column: 73
        }
      },
      "22": {
        start: {
          line: 69,
          column: 27
        },
        end: {
          line: 69,
          column: 58
        }
      },
      "23": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 70,
          column: 83
        }
      },
      "24": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 22
        }
      },
      "25": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 84,
          column: 8
        }
      },
      "26": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 39
        }
      },
      "27": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 103,
          column: 8
        }
      },
      "28": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "29": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "30": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 77
        }
      },
      "31": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "32": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 77
        }
      },
      "33": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 129,
          column: 8
        }
      },
      "34": {
        start: {
          line: 131,
          column: 6
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "35": {
        start: {
          line: 142,
          column: 23
        },
        end: {
          line: 228,
          column: 3
        }
      },
      "36": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "37": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "38": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 91
        }
      },
      "39": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "40": {
        start: {
          line: 153,
          column: 21
        },
        end: {
          line: 153,
          column: 65
        }
      },
      "41": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 161,
          column: 7
        }
      },
      "42": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 66
        }
      },
      "43": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "44": {
        start: {
          line: 164,
          column: 6
        },
        end: {
          line: 170,
          column: 7
        }
      },
      "45": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 73
        }
      },
      "46": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "47": {
        start: {
          line: 172,
          column: 22
        },
        end: {
          line: 172,
          column: 65
        }
      },
      "48": {
        start: {
          line: 175,
          column: 6
        },
        end: {
          line: 184,
          column: 8
        }
      },
      "49": {
        start: {
          line: 187,
          column: 6
        },
        end: {
          line: 187,
          column: 39
        }
      },
      "50": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 202,
          column: 8
        }
      },
      "51": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 13
        }
      },
      "52": {
        start: {
          line: 206,
          column: 6
        },
        end: {
          line: 206,
          column: 79
        }
      },
      "53": {
        start: {
          line: 209,
          column: 6
        },
        end: {
          line: 221,
          column: 8
        }
      },
      "54": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "55": {
        start: {
          line: 233,
          column: 15
        },
        end: {
          line: 289,
          column: 3
        }
      },
      "56": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 288,
          column: 6
        }
      },
      "57": {
        start: {
          line: 235,
          column: 6
        },
        end: {
          line: 287,
          column: 7
        }
      },
      "58": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "59": {
        start: {
          line: 237,
          column: 10
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "60": {
        start: {
          line: 243,
          column: 24
        },
        end: {
          line: 243,
          column: 49
        }
      },
      "61": {
        start: {
          line: 244,
          column: 26
        },
        end: {
          line: 244,
          column: 63
        }
      },
      "62": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "63": {
        start: {
          line: 247,
          column: 10
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "64": {
        start: {
          line: 255,
          column: 25
        },
        end: {
          line: 255,
          column: 82
        }
      },
      "65": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "66": {
        start: {
          line: 258,
          column: 10
        },
        end: {
          line: 262,
          column: 18
        }
      },
      "67": {
        start: {
          line: 264,
          column: 10
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "68": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 36
        }
      },
      "69": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 39
        }
      },
      "70": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 278,
          column: 16
        }
      },
      "71": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "72": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 64
        }
      },
      "73": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 286,
          column: 11
        }
      },
      "74": {
        start: {
          line: 294,
          column: 17
        },
        end: {
          line: 312,
          column: 3
        }
      },
      "75": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "76": {
        start: {
          line: 297,
          column: 6
        },
        end: {
          line: 297,
          column: 50
        }
      },
      "77": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "78": {
        start: {
          line: 302,
          column: 6
        },
        end: {
          line: 302,
          column: 53
        }
      },
      "79": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 306,
          column: 63
        }
      },
      "80": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 311,
          column: 7
        }
      },
      "81": {
        start: {
          line: 317,
          column: 14
        },
        end: {
          line: 394,
          column: 3
        }
      },
      "82": {
        start: {
          line: 318,
          column: 4
        },
        end: {
          line: 393,
          column: 6
        }
      },
      "83": {
        start: {
          line: 319,
          column: 6
        },
        end: {
          line: 392,
          column: 7
        }
      },
      "84": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "85": {
        start: {
          line: 321,
          column: 10
        },
        end: {
          line: 324,
          column: 13
        }
      },
      "86": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "87": {
        start: {
          line: 329,
          column: 10
        },
        end: {
          line: 335,
          column: 18
        }
      },
      "88": {
        start: {
          line: 336,
          column: 10
        },
        end: {
          line: 336,
          column: 24
        }
      },
      "89": {
        start: {
          line: 340,
          column: 30
        },
        end: {
          line: 340,
          column: 91
        }
      },
      "90": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "91": {
        start: {
          line: 344,
          column: 10
        },
        end: {
          line: 359,
          column: 12
        }
      },
      "92": {
        start: {
          line: 361,
          column: 10
        },
        end: {
          line: 366,
          column: 13
        }
      },
      "93": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 383,
          column: 10
        }
      },
      "94": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 15
        }
      },
      "95": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 61
        }
      },
      "96": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 391,
          column: 11
        }
      },
      "97": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 448,
          column: 3
        }
      },
      "98": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 402,
          column: 5
        }
      },
      "99": {
        start: {
          line: 401,
          column: 6
        },
        end: {
          line: 401,
          column: 38
        }
      },
      "100": {
        start: {
          line: 404,
          column: 4
        },
        end: {
          line: 447,
          column: 6
        }
      },
      "101": {
        start: {
          line: 405,
          column: 6
        },
        end: {
          line: 446,
          column: 7
        }
      },
      "102": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "103": {
        start: {
          line: 407,
          column: 10
        },
        end: {
          line: 410,
          column: 13
        }
      },
      "104": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 419,
          column: 9
        }
      },
      "105": {
        start: {
          line: 415,
          column: 10
        },
        end: {
          line: 418,
          column: 13
        }
      },
      "106": {
        start: {
          line: 421,
          column: 25
        },
        end: {
          line: 421,
          column: 38
        }
      },
      "107": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 422,
          column: 80
        }
      },
      "108": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "109": {
        start: {
          line: 425,
          column: 10
        },
        end: {
          line: 430,
          column: 18
        }
      },
      "110": {
        start: {
          line: 432,
          column: 10
        },
        end: {
          line: 436,
          column: 13
        }
      },
      "111": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 15
        }
      },
      "112": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 66
        }
      },
      "113": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 445,
          column: 11
        }
      },
      "114": {
        start: {
          line: 453,
          column: 17
        },
        end: {
          line: 488,
          column: 3
        }
      },
      "115": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 487,
          column: 5
        }
      },
      "116": {
        start: {
          line: 455,
          column: 6
        },
        end: {
          line: 460,
          column: 7
        }
      },
      "117": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 459,
          column: 11
        }
      },
      "118": {
        start: {
          line: 463,
          column: 23
        },
        end: {
          line: 463,
          column: 63
        }
      },
      "119": {
        start: {
          line: 466,
          column: 6
        },
        end: {
          line: 473,
          column: 8
        }
      },
      "120": {
        start: {
          line: 475,
          column: 6
        },
        end: {
          line: 480,
          column: 9
        }
      },
      "121": {
        start: {
          line: 482,
          column: 6
        },
        end: {
          line: 482,
          column: 59
        }
      },
      "122": {
        start: {
          line: 483,
          column: 6
        },
        end: {
          line: 486,
          column: 9
        }
      },
      "123": {
        start: {
          line: 495,
          column: 4
        },
        end: {
          line: 497,
          column: 5
        }
      },
      "124": {
        start: {
          line: 496,
          column: 6
        },
        end: {
          line: 496,
          column: 58
        }
      },
      "125": {
        start: {
          line: 500,
          column: 4
        },
        end: {
          line: 502,
          column: 5
        }
      },
      "126": {
        start: {
          line: 501,
          column: 6
        },
        end: {
          line: 501,
          column: 59
        }
      },
      "127": {
        start: {
          line: 505,
          column: 4
        },
        end: {
          line: 505,
          column: 16
        }
      },
      "128": {
        start: {
          line: 510,
          column: 4
        },
        end: {
          line: 512,
          column: 31
        }
      },
      "129": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 516,
          column: 18
        }
      },
      "130": {
        start: {
          line: 517,
          column: 20
        },
        end: {
          line: 521,
          column: 5
        }
      },
      "131": {
        start: {
          line: 523,
          column: 4
        },
        end: {
          line: 525,
          column: 5
        }
      },
      "132": {
        start: {
          line: 524,
          column: 6
        },
        end: {
          line: 524,
          column: 39
        }
      },
      "133": {
        start: {
          line: 527,
          column: 21
        },
        end: {
          line: 527,
          column: 49
        }
      },
      "134": {
        start: {
          line: 528,
          column: 4
        },
        end: {
          line: 528,
          column: 27
        }
      },
      "135": {
        start: {
          line: 531,
          column: 19
        },
        end: {
          line: 531,
          column: 67
        }
      },
      "136": {
        start: {
          line: 532,
          column: 27
        },
        end: {
          line: 532,
          column: 69
        }
      },
      "137": {
        start: {
          line: 532,
          column: 48
        },
        end: {
          line: 532,
          column: 68
        }
      },
      "138": {
        start: {
          line: 533,
          column: 4
        },
        end: {
          line: 533,
          column: 49
        }
      },
      "139": {
        start: {
          line: 537,
          column: 4
        },
        end: {
          line: 537,
          column: 35
        }
      },
      "140": {
        start: {
          line: 541,
          column: 21
        },
        end: {
          line: 541,
          column: 54
        }
      },
      "141": {
        start: {
          line: 542,
          column: 19
        },
        end: {
          line: 542,
          column: 67
        }
      },
      "142": {
        start: {
          line: 543,
          column: 27
        },
        end: {
          line: 543,
          column: 69
        }
      },
      "143": {
        start: {
          line: 543,
          column: 48
        },
        end: {
          line: 543,
          column: 68
        }
      },
      "144": {
        start: {
          line: 545,
          column: 4
        },
        end: {
          line: 545,
          column: 74
        }
      },
      "145": {
        start: {
          line: 549,
          column: 26
        },
        end: {
          line: 549,
          column: 82
        }
      },
      "146": {
        start: {
          line: 554,
          column: 4
        },
        end: {
          line: 554,
          column: 25
        }
      },
      "147": {
        start: {
          line: 559,
          column: 4
        },
        end: {
          line: 563,
          column: 6
        }
      },
      "148": {
        start: {
          line: 567,
          column: 4
        },
        end: {
          line: 567,
          column: 61
        }
      },
      "149": {
        start: {
          line: 567,
          column: 44
        },
        end: {
          line: 567,
          column: 61
        }
      },
      "150": {
        start: {
          line: 568,
          column: 4
        },
        end: {
          line: 568,
          column: 61
        }
      },
      "151": {
        start: {
          line: 568,
          column: 44
        },
        end: {
          line: 568,
          column: 61
        }
      },
      "152": {
        start: {
          line: 569,
          column: 4
        },
        end: {
          line: 569,
          column: 61
        }
      },
      "153": {
        start: {
          line: 569,
          column: 41
        },
        end: {
          line: 569,
          column: 61
        }
      },
      "154": {
        start: {
          line: 570,
          column: 4
        },
        end: {
          line: 570,
          column: 21
        }
      },
      "155": {
        start: {
          line: 574,
          column: 4
        },
        end: {
          line: 574,
          column: 67
        }
      },
      "156": {
        start: {
          line: 574,
          column: 44
        },
        end: {
          line: 574,
          column: 67
        }
      },
      "157": {
        start: {
          line: 575,
          column: 4
        },
        end: {
          line: 575,
          column: 67
        }
      },
      "158": {
        start: {
          line: 575,
          column: 44
        },
        end: {
          line: 575,
          column: 67
        }
      },
      "159": {
        start: {
          line: 576,
          column: 4
        },
        end: {
          line: 576,
          column: 67
        }
      },
      "160": {
        start: {
          line: 576,
          column: 41
        },
        end: {
          line: 576,
          column: 67
        }
      },
      "161": {
        start: {
          line: 577,
          column: 4
        },
        end: {
          line: 577,
          column: 25
        }
      },
      "162": {
        start: {
          line: 583,
          column: 4
        },
        end: {
          line: 583,
          column: 17
        }
      },
      "163": {
        start: {
          line: 587,
          column: 4
        },
        end: {
          line: 602,
          column: 5
        }
      },
      "164": {
        start: {
          line: 588,
          column: 6
        },
        end: {
          line: 599,
          column: 8
        }
      },
      "165": {
        start: {
          line: 601,
          column: 6
        },
        end: {
          line: 601,
          column: 60
        }
      },
      "166": {
        start: {
          line: 608,
          column: 18
        },
        end: {
          line: 623,
          column: 3
        }
      },
      "167": {
        start: {
          line: 609,
          column: 4
        },
        end: {
          line: 622,
          column: 6
        }
      },
      "168": {
        start: {
          line: 611,
          column: 6
        },
        end: {
          line: 619,
          column: 7
        }
      },
      "169": {
        start: {
          line: 612,
          column: 8
        },
        end: {
          line: 618,
          column: 16
        }
      },
      "170": {
        start: {
          line: 621,
          column: 6
        },
        end: {
          line: 621,
          column: 13
        }
      },
      "171": {
        start: {
          line: 628,
          column: 17
        },
        end: {
          line: 630,
          column: 3
        }
      },
      "172": {
        start: {
          line: 629,
          column: 4
        },
        end: {
          line: 629,
          column: 37
        }
      },
      "173": {
        start: {
          line: 634,
          column: 31
        },
        end: {
          line: 634,
          column: 59
        }
      },
      "174": {
        start: {
          line: 637,
          column: 0
        },
        end: {
          line: 648,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 16
          },
          end: {
            line: 19,
            column: 3
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        },
        loc: {
          start: {
            line: 24,
            column: 46
          },
          end: {
            line: 137,
            column: 3
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 142,
            column: 24
          }
        },
        loc: {
          start: {
            line: 142,
            column: 49
          },
          end: {
            line: 228,
            column: 3
          }
        },
        line: 142
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 233,
            column: 16
          }
        },
        loc: {
          start: {
            line: 233,
            column: 21
          },
          end: {
            line: 289,
            column: 3
          }
        },
        line: 233
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 234,
            column: 11
          },
          end: {
            line: 234,
            column: 12
          }
        },
        loc: {
          start: {
            line: 234,
            column: 37
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 234
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 294,
            column: 17
          },
          end: {
            line: 294,
            column: 18
          }
        },
        loc: {
          start: {
            line: 294,
            column: 43
          },
          end: {
            line: 312,
            column: 3
          }
        },
        line: 294
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 317,
            column: 14
          },
          end: {
            line: 317,
            column: 15
          }
        },
        loc: {
          start: {
            line: 317,
            column: 50
          },
          end: {
            line: 394,
            column: 3
          }
        },
        line: 317
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 318,
            column: 11
          },
          end: {
            line: 318,
            column: 12
          }
        },
        loc: {
          start: {
            line: 318,
            column: 37
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 318
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 399,
            column: 16
          },
          end: {
            line: 399,
            column: 17
          }
        },
        loc: {
          start: {
            line: 399,
            column: 49
          },
          end: {
            line: 448,
            column: 3
          }
        },
        line: 399
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 404,
            column: 11
          },
          end: {
            line: 404,
            column: 12
          }
        },
        loc: {
          start: {
            line: 404,
            column: 37
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 404
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 453,
            column: 17
          },
          end: {
            line: 453,
            column: 18
          }
        },
        loc: {
          start: {
            line: 453,
            column: 43
          },
          end: {
            line: 488,
            column: 3
          }
        },
        line: 453
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 493,
            column: 2
          },
          end: {
            line: 493,
            column: 3
          }
        },
        loc: {
          start: {
            line: 493,
            column: 18
          },
          end: {
            line: 506,
            column: 3
          }
        },
        line: 493
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 508,
            column: 2
          },
          end: {
            line: 508,
            column: 3
          }
        },
        loc: {
          start: {
            line: 508,
            column: 30
          },
          end: {
            line: 513,
            column: 3
          }
        },
        line: 508
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 515,
            column: 2
          },
          end: {
            line: 515,
            column: 3
          }
        },
        loc: {
          start: {
            line: 515,
            column: 50
          },
          end: {
            line: 534,
            column: 3
          }
        },
        line: 515
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 532,
            column: 43
          },
          end: {
            line: 532,
            column: 44
          }
        },
        loc: {
          start: {
            line: 532,
            column: 48
          },
          end: {
            line: 532,
            column: 68
          }
        },
        line: 532
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 536,
            column: 2
          },
          end: {
            line: 536,
            column: 3
          }
        },
        loc: {
          start: {
            line: 536,
            column: 26
          },
          end: {
            line: 538,
            column: 3
          }
        },
        line: 536
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 540,
            column: 2
          },
          end: {
            line: 540,
            column: 3
          }
        },
        loc: {
          start: {
            line: 540,
            column: 20
          },
          end: {
            line: 546,
            column: 3
          }
        },
        line: 540
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 543,
            column: 43
          },
          end: {
            line: 543,
            column: 44
          }
        },
        loc: {
          start: {
            line: 543,
            column: 48
          },
          end: {
            line: 543,
            column: 68
          }
        },
        line: 543
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 548,
            column: 2
          },
          end: {
            line: 548,
            column: 3
          }
        },
        loc: {
          start: {
            line: 548,
            column: 55
          },
          end: {
            line: 555,
            column: 3
          }
        },
        line: 548
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 557,
            column: 2
          },
          end: {
            line: 557,
            column: 3
          }
        },
        loc: {
          start: {
            line: 557,
            column: 26
          },
          end: {
            line: 564,
            column: 3
          }
        },
        line: 557
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 566,
            column: 2
          },
          end: {
            line: 566,
            column: 3
          }
        },
        loc: {
          start: {
            line: 566,
            column: 27
          },
          end: {
            line: 571,
            column: 3
          }
        },
        line: 566
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 573,
            column: 2
          },
          end: {
            line: 573,
            column: 3
          }
        },
        loc: {
          start: {
            line: 573,
            column: 27
          },
          end: {
            line: 578,
            column: 3
          }
        },
        line: 573
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 580,
            column: 2
          },
          end: {
            line: 580,
            column: 3
          }
        },
        loc: {
          start: {
            line: 580,
            column: 44
          },
          end: {
            line: 584,
            column: 3
          }
        },
        line: 580
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 586,
            column: 2
          },
          end: {
            line: 586,
            column: 3
          }
        },
        loc: {
          start: {
            line: 586,
            column: 50
          },
          end: {
            line: 603,
            column: 3
          }
        },
        line: 586
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 608,
            column: 18
          },
          end: {
            line: 608,
            column: 19
          }
        },
        loc: {
          start: {
            line: 608,
            column: 24
          },
          end: {
            line: 623,
            column: 3
          }
        },
        line: 608
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 609,
            column: 11
          },
          end: {
            line: 609,
            column: 12
          }
        },
        loc: {
          start: {
            line: 609,
            column: 37
          },
          end: {
            line: 622,
            column: 5
          }
        },
        line: 609
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 628,
            column: 17
          },
          end: {
            line: 628,
            column: 18
          }
        },
        loc: {
          start: {
            line: 628,
            column: 23
          },
          end: {
            line: 630,
            column: 3
          }
        },
        line: 628
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 16,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 46
          },
          end: {
            line: 16,
            column: 81
          }
        }, {
          start: {
            line: 16,
            column: 84
          },
          end: {
            line: 16,
            column: 86
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 19
          },
          end: {
            line: 17,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 46
          },
          end: {
            line: 17,
            column: 81
          }
        }, {
          start: {
            line: 17,
            column: 84
          },
          end: {
            line: 17,
            column: 86
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 42,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 6
          },
          end: {
            line: 42,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 52,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 56,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 10
          },
          end: {
            line: 55,
            column: 29
          }
        }, {
          start: {
            line: 56,
            column: 10
          },
          end: {
            line: 56,
            column: 20
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 58,
            column: 6
          },
          end: {
            line: 64,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 6
          },
          end: {
            line: 64,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "7": {
        loc: {
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 109,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "8": {
        loc: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 151,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 151,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "9": {
        loc: {
          start: {
            line: 153,
            column: 21
          },
          end: {
            line: 153,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 21
          },
          end: {
            line: 153,
            column: 45
          }
        }, {
          start: {
            line: 153,
            column: 49
          },
          end: {
            line: 153,
            column: 65
          }
        }],
        line: 153
      },
      "10": {
        loc: {
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "11": {
        loc: {
          start: {
            line: 164,
            column: 6
          },
          end: {
            line: 170,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 6
          },
          end: {
            line: 170,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "12": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "13": {
        loc: {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 21
          }
        }, {
          start: {
            line: 236,
            column: 25
          },
          end: {
            line: 236,
            column: 48
          }
        }],
        line: 236
      },
      "14": {
        loc: {
          start: {
            line: 244,
            column: 26
          },
          end: {
            line: 244,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 26
          },
          end: {
            line: 244,
            column: 53
          }
        }, {
          start: {
            line: 244,
            column: 57
          },
          end: {
            line: 244,
            column: 63
          }
        }],
        line: 244
      },
      "15": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "16": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 268,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "17": {
        loc: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 298,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "18": {
        loc: {
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "19": {
        loc: {
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 301,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 301,
            column: 32
          }
        }, {
          start: {
            line: 301,
            column: 36
          },
          end: {
            line: 301,
            column: 52
          }
        }],
        line: 301
      },
      "20": {
        loc: {
          start: {
            line: 317,
            column: 33
          },
          end: {
            line: 317,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 317,
            column: 43
          },
          end: {
            line: 317,
            column: 45
          }
        }],
        line: 317
      },
      "21": {
        loc: {
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "22": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "23": {
        loc: {
          start: {
            line: 328,
            column: 12
          },
          end: {
            line: 328,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 328,
            column: 12
          },
          end: {
            line: 328,
            column: 30
          }
        }, {
          start: {
            line: 328,
            column: 34
          },
          end: {
            line: 328,
            column: 59
          }
        }],
        line: 328
      },
      "24": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "25": {
        loc: {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 345,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 345,
            column: 27
          }
        }, {
          start: {
            line: 345,
            column: 31
          },
          end: {
            line: 345,
            column: 35
          }
        }],
        line: 345
      },
      "26": {
        loc: {
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 346,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 346,
            column: 29
          }
        }, {
          start: {
            line: 346,
            column: 33
          },
          end: {
            line: 346,
            column: 49
          }
        }, {
          start: {
            line: 346,
            column: 53
          },
          end: {
            line: 346,
            column: 57
          }
        }],
        line: 346
      },
      "27": {
        loc: {
          start: {
            line: 371,
            column: 10
          },
          end: {
            line: 371,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 10
          },
          end: {
            line: 371,
            column: 25
          }
        }, {
          start: {
            line: 371,
            column: 29
          },
          end: {
            line: 371,
            column: 33
          }
        }],
        line: 371
      },
      "28": {
        loc: {
          start: {
            line: 372,
            column: 10
          },
          end: {
            line: 372,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 10
          },
          end: {
            line: 372,
            column: 27
          }
        }, {
          start: {
            line: 372,
            column: 31
          },
          end: {
            line: 372,
            column: 47
          }
        }, {
          start: {
            line: 372,
            column: 51
          },
          end: {
            line: 372,
            column: 55
          }
        }],
        line: 372
      },
      "29": {
        loc: {
          start: {
            line: 399,
            column: 32
          },
          end: {
            line: 399,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 399,
            column: 42
          },
          end: {
            line: 399,
            column: 44
          }
        }],
        line: 399
      },
      "30": {
        loc: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 402,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "31": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "32": {
        loc: {
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "33": {
        loc: {
          start: {
            line: 422,
            column: 24
          },
          end: {
            line: 422,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 422,
            column: 24
          },
          end: {
            line: 422,
            column: 56
          }
        }, {
          start: {
            line: 422,
            column: 60
          },
          end: {
            line: 422,
            column: 80
          }
        }],
        line: 422
      },
      "34": {
        loc: {
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 437,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 437,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 424
      },
      "35": {
        loc: {
          start: {
            line: 455,
            column: 6
          },
          end: {
            line: 460,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 6
          },
          end: {
            line: 460,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "36": {
        loc: {
          start: {
            line: 455,
            column: 10
          },
          end: {
            line: 455,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 455,
            column: 10
          },
          end: {
            line: 455,
            column: 19
          }
        }, {
          start: {
            line: 455,
            column: 23
          },
          end: {
            line: 455,
            column: 46
          }
        }],
        line: 455
      },
      "37": {
        loc: {
          start: {
            line: 495,
            column: 4
          },
          end: {
            line: 497,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 4
          },
          end: {
            line: 497,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "38": {
        loc: {
          start: {
            line: 500,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "39": {
        loc: {
          start: {
            line: 510,
            column: 11
          },
          end: {
            line: 512,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 510,
            column: 11
          },
          end: {
            line: 510,
            column: 37
          }
        }, {
          start: {
            line: 511,
            column: 11
          },
          end: {
            line: 511,
            column: 36
          }
        }, {
          start: {
            line: 512,
            column: 11
          },
          end: {
            line: 512,
            column: 30
          }
        }],
        line: 510
      },
      "40": {
        loc: {
          start: {
            line: 515,
            column: 34
          },
          end: {
            line: 515,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 515,
            column: 44
          },
          end: {
            line: 515,
            column: 48
          }
        }],
        line: 515
      },
      "41": {
        loc: {
          start: {
            line: 523,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 523,
            column: 4
          },
          end: {
            line: 525,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 523
      },
      "42": {
        loc: {
          start: {
            line: 541,
            column: 21
          },
          end: {
            line: 541,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 541,
            column: 21
          },
          end: {
            line: 541,
            column: 48
          }
        }, {
          start: {
            line: 541,
            column: 52
          },
          end: {
            line: 541,
            column: 54
          }
        }],
        line: 541
      },
      "43": {
        loc: {
          start: {
            line: 567,
            column: 4
          },
          end: {
            line: 567,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 567,
            column: 4
          },
          end: {
            line: 567,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 567
      },
      "44": {
        loc: {
          start: {
            line: 568,
            column: 4
          },
          end: {
            line: 568,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 568,
            column: 4
          },
          end: {
            line: 568,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 568
      },
      "45": {
        loc: {
          start: {
            line: 569,
            column: 4
          },
          end: {
            line: 569,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 569,
            column: 4
          },
          end: {
            line: 569,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 569
      },
      "46": {
        loc: {
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 574,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 4
          },
          end: {
            line: 574,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      },
      "47": {
        loc: {
          start: {
            line: 575,
            column: 4
          },
          end: {
            line: 575,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 575,
            column: 4
          },
          end: {
            line: 575,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 575
      },
      "48": {
        loc: {
          start: {
            line: 576,
            column: 4
          },
          end: {
            line: 576,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 576,
            column: 4
          },
          end: {
            line: 576,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 576
      },
      "49": {
        loc: {
          start: {
            line: 589,
            column: 8
          },
          end: {
            line: 589,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 589,
            column: 8
          },
          end: {
            line: 589,
            column: 24
          }
        }, {
          start: {
            line: 589,
            column: 28
          },
          end: {
            line: 589,
            column: 32
          }
        }],
        line: 589
      },
      "50": {
        loc: {
          start: {
            line: 590,
            column: 8
          },
          end: {
            line: 590,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 590,
            column: 8
          },
          end: {
            line: 590,
            column: 26
          }
        }, {
          start: {
            line: 590,
            column: 30
          },
          end: {
            line: 590,
            column: 34
          }
        }],
        line: 590
      },
      "51": {
        loc: {
          start: {
            line: 611,
            column: 6
          },
          end: {
            line: 619,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 611,
            column: 6
          },
          end: {
            line: 619,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 611
      },
      "52": {
        loc: {
          start: {
            line: 617,
            column: 20
          },
          end: {
            line: 617,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 617,
            column: 20
          },
          end: {
            line: 617,
            column: 37
          }
        }, {
          start: {
            line: 617,
            column: 41
          },
          end: {
            line: 617,
            column: 57
          }
        }],
        line: 617
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "807393583120c699798986f8b164eb0879649b21"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2a3yq6jmpo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2a3yq6jmpo();
const AuthService =
/* istanbul ignore next */
(cov_2a3yq6jmpo().s[0]++, require('../services/auth/authService'));
const {
  Permission
} =
/* istanbul ignore next */
(cov_2a3yq6jmpo().s[1]++, require('../models/user'));

/**
 * Enhanced Authentication middleware for Express.js
 * Provides JWT and API key authentication with comprehensive security features
 */
class EnhancedAuthMiddleware {
  constructor() {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[0]++;
    cov_2a3yq6jmpo().s[2]++;
    this.authService = new AuthService();
    /* istanbul ignore next */
    cov_2a3yq6jmpo().s[3]++;
    this.failedAttempts = new Map(); // Track failed authentication attempts
    /* istanbul ignore next */
    cov_2a3yq6jmpo().s[4]++;
    this.securityConfig = {
      maxFailedAttempts: 5,
      lockoutDuration: 15 * 60 * 1000,
      // 15 minutes
      tokenRefreshThreshold: 10 * 60 * 1000,
      // 10 minutes before expiry
      ipWhitelist: process.env.IP_WHITELIST ?
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[0][0]++, process.env.IP_WHITELIST.split(',')) :
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[0][1]++, []),
      ipBlacklist: process.env.IP_BLACKLIST ?
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[1][0]++, process.env.IP_BLACKLIST.split(',')) :
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[1][1]++, [])
    };
  }

  /**
   * Enhanced JWT authentication middleware with security features
   */
  authenticateJWT =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().s[5]++, async (req, res, next) => {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[1]++;
    cov_2a3yq6jmpo().s[6]++;
    try {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[7]++;
      // IP filtering
      if (!this.isIpAllowed(req.ip)) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[2][0]++;
        cov_2a3yq6jmpo().s[8]++;
        await this.logSecurityEvent('ip_blocked', {
          ip: req.ip,
          endpoint: req.path
        }, req);
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[9]++;
        return res.status(403).json({
          error: 'Access denied',
          message: 'Your IP address is not allowed'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[2][1]++;
      }

      // Rate limiting check
      cov_2a3yq6jmpo().s[10]++;
      if (this.isRateLimited(req.ip)) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[3][0]++;
        cov_2a3yq6jmpo().s[11]++;
        await this.logSecurityEvent('rate_limited', {
          ip: req.ip,
          endpoint: req.path
        }, req);
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[12]++;
        return res.status(429).json({
          error: 'Too many attempts',
          message: 'Too many authentication attempts. Please try again later.'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[3][1]++;
      }
      const authHeader =
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().s[13]++, req.headers.authorization);
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[14]++;
      if (!authHeader) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[4][0]++;
        cov_2a3yq6jmpo().s[15]++;
        await this.recordFailedAttempt(req.ip, 'missing_auth_header');
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[16]++;
        return res.status(401).json({
          error: 'Access denied',
          message: 'No authorization header provided'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[4][1]++;
      }
      const token =
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().s[17]++, authHeader.startsWith('Bearer ') ?
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[5][0]++, authHeader.slice(7)) :
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[5][1]++, authHeader));
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[18]++;
      if (!token) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[6][0]++;
        cov_2a3yq6jmpo().s[19]++;
        await this.recordFailedAttempt(req.ip, 'missing_token');
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[20]++;
        return res.status(401).json({
          error: 'Access denied',
          message: 'No token provided'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[6][1]++;
      }
      const {
        user,
        decoded
      } =
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().s[21]++, await this.authService.verifyToken(token));

      // Check for token refresh needs
      const timeToExpiry =
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().s[22]++, decoded.exp * 1000 - Date.now());
      const needsRefresh =
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().s[23]++, timeToExpiry < this.securityConfig.tokenRefreshThreshold);

      // Attach enhanced user and token info to request
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[24]++;
      req.user = user;
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[25]++;
      req.auth = {
        type: 'jwt',
        userId: user.id,
        username: user.username,
        role: user.role,
        permissions: user.permissions,
        tokenPayload: decoded,
        needsRefresh: needsRefresh,
        expiresAt: new Date(decoded.exp * 1000),
        issuedAt: new Date(decoded.iat * 1000)
      };

      // Clear failed attempts on successful authentication
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[26]++;
      this.clearFailedAttempts(req.ip);

      // Log successful authentication with enhanced details
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[27]++;
      await this.authService.logAuthEvent(user.id, user.username, 'jwt_auth_success', true, {
        endpoint: req.path,
        method: req.method,
        userAgent: req.get('User-Agent'),
        tokenId: decoded.jti,
        needsRefresh: needsRefresh
      }, req);

      // Add refresh token header if needed
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[28]++;
      if (needsRefresh) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[7][0]++;
        cov_2a3yq6jmpo().s[29]++;
        res.setHeader('X-Token-Refresh-Needed', 'true');
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[30]++;
        res.setHeader('X-Token-Expires-In', Math.floor(timeToExpiry / 1000));
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[7][1]++;
      }
      cov_2a3yq6jmpo().s[31]++;
      next();
    } catch (error) {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[32]++;
      await this.recordFailedAttempt(req.ip, 'invalid_token', error.message);

      // Log failed authentication with detailed error info
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[33]++;
      await this.authService.logAuthEvent(null, null, 'jwt_auth_failure', false, {
        error: error.message,
        endpoint: req.path,
        method: req.method,
        userAgent: req.get('User-Agent'),
        errorType: this.getTokenErrorType(error)
      }, req);
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[34]++;
      return res.status(401).json({
        error: 'Access denied',
        message: 'Invalid or expired token',
        code: this.getTokenErrorCode(error)
      });
    }
  });

  /**
   * Enhanced API key authentication middleware
   */
  authenticateApiKey =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().s[35]++, async (req, res, next) => {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[2]++;
    cov_2a3yq6jmpo().s[36]++;
    try {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[37]++;
      // IP filtering
      if (!this.isIpAllowed(req.ip)) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[8][0]++;
        cov_2a3yq6jmpo().s[38]++;
        await this.logSecurityEvent('ip_blocked', {
          ip: req.ip,
          endpoint: req.path
        }, req);
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[39]++;
        return res.status(403).json({
          error: 'Access denied',
          message: 'Your IP address is not allowed'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[8][1]++;
      }
      const apiKey =
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().s[40]++,
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[9][0]++, req.headers['x-api-key']) ||
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[9][1]++, req.query.apiKey));
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[41]++;
      if (!apiKey) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[10][0]++;
        cov_2a3yq6jmpo().s[42]++;
        await this.recordFailedAttempt(req.ip, 'missing_api_key');
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[43]++;
        return res.status(401).json({
          error: 'Access denied',
          message: 'No API key provided'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[10][1]++;
      }

      // Validate API key format
      cov_2a3yq6jmpo().s[44]++;
      if (!this.isValidApiKeyFormat(apiKey)) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[11][0]++;
        cov_2a3yq6jmpo().s[45]++;
        await this.recordFailedAttempt(req.ip, 'invalid_api_key_format');
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[46]++;
        return res.status(401).json({
          error: 'Access denied',
          message: 'Invalid API key format'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[11][1]++;
      }
      const keyData =
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().s[47]++, await this.authService.verifyApiKey(apiKey));

      // Attach enhanced API key info to request
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[48]++;
      req.auth = {
        type: 'api_key',
        keyId: keyData.id,
        keyName: keyData.name,
        permissions: keyData.permissions,
        keyData: keyData,
        createdAt: keyData.createdAt,
        lastUsed: keyData.lastUsed,
        expiresAt: keyData.expiresAt
      };

      // Clear failed attempts on successful authentication
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[49]++;
      this.clearFailedAttempts(req.ip);

      // Log successful authentication
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[50]++;
      await this.authService.logAuthEvent(null, keyData.name, 'api_key_auth_success', true, {
        endpoint: req.path,
        method: req.method,
        keyId: keyData.id,
        userAgent: req.get('User-Agent')
      }, req);
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[51]++;
      next();
    } catch (error) {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[52]++;
      await this.recordFailedAttempt(req.ip, 'invalid_api_key', error.message);

      // Log failed authentication
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[53]++;
      await this.authService.logAuthEvent(null, null, 'api_key_auth_failure', false, {
        error: error.message,
        endpoint: req.path,
        method: req.method,
        userAgent: req.get('User-Agent')
      }, req);
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[54]++;
      return res.status(401).json({
        error: 'Access denied',
        message: 'Invalid or expired API key'
      });
    }
  });

  /**
   * Multi-factor authentication middleware
   */
  requireMFA =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().s[55]++, () => {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[3]++;
    cov_2a3yq6jmpo().s[56]++;
    return async (req, res, next) => {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().f[4]++;
      cov_2a3yq6jmpo().s[57]++;
      try {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[58]++;
        if (
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[13][0]++, !req.auth) ||
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[13][1]++, req.auth.type !== 'jwt')) {
          /* istanbul ignore next */
          cov_2a3yq6jmpo().b[12][0]++;
          cov_2a3yq6jmpo().s[59]++;
          return res.status(401).json({
            error: 'Access denied',
            message: 'JWT authentication required for MFA operations'
          });
        } else
        /* istanbul ignore next */
        {
          cov_2a3yq6jmpo().b[12][1]++;
        }
        const mfaCode =
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().s[60]++, req.headers['x-mfa-code']);
        const mfaMethod =
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().s[61]++,
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[14][0]++, req.headers['x-mfa-method']) ||
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[14][1]++, 'totp'));
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[62]++;
        if (!mfaCode) {
          /* istanbul ignore next */
          cov_2a3yq6jmpo().b[15][0]++;
          cov_2a3yq6jmpo().s[63]++;
          return res.status(401).json({
            error: 'MFA required',
            message: 'Multi-factor authentication code required',
            supportedMethods: ['totp', 'sms', 'email']
          });
        } else
        /* istanbul ignore next */
        {
          cov_2a3yq6jmpo().b[15][1]++;
        }

        // Verify MFA code (this would integrate with your MFA provider)
        const mfaValid =
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().s[64]++, await this.verifyMFACode(req.user.id, mfaCode, mfaMethod));
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[65]++;
        if (!mfaValid) {
          /* istanbul ignore next */
          cov_2a3yq6jmpo().b[16][0]++;
          cov_2a3yq6jmpo().s[66]++;
          await this.logSecurityEvent('mfa_failure', {
            userId: req.user.id,
            method: mfaMethod,
            endpoint: req.path
          }, req);
          /* istanbul ignore next */
          cov_2a3yq6jmpo().s[67]++;
          return res.status(401).json({
            error: 'MFA failed',
            message: 'Invalid multi-factor authentication code'
          });
        } else
        /* istanbul ignore next */
        {
          cov_2a3yq6jmpo().b[16][1]++;
        }

        // Mark request as MFA verified
        cov_2a3yq6jmpo().s[68]++;
        req.auth.mfaVerified = true;
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[69]++;
        req.auth.mfaMethod = mfaMethod;
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[70]++;
        await this.logSecurityEvent('mfa_success', {
          userId: req.user.id,
          method: mfaMethod,
          endpoint: req.path
        }, req);
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[71]++;
        next();
      } catch (error) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[72]++;
        console.error('MFA verification error:', error.message);
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[73]++;
        return res.status(500).json({
          error: 'Internal server error',
          message: 'MFA verification failed'
        });
      }
    };
  });

  /**
   * Combined authentication with fallback
   */
  authenticate =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().s[74]++, async (req, res, next) => {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[5]++;
    cov_2a3yq6jmpo().s[75]++;
    // Try JWT authentication first
    if (req.headers.authorization) {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[17][0]++;
      cov_2a3yq6jmpo().s[76]++;
      return this.authenticateJWT(req, res, next);
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[17][1]++;
    }

    // Try API key authentication
    cov_2a3yq6jmpo().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().b[19][0]++, req.headers['x-api-key']) ||
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().b[19][1]++, req.query.apiKey)) {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[18][0]++;
      cov_2a3yq6jmpo().s[78]++;
      return this.authenticateApiKey(req, res, next);
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[18][1]++;
    }

    // No authentication provided
    cov_2a3yq6jmpo().s[79]++;
    await this.recordFailedAttempt(req.ip, 'no_auth_provided');
    /* istanbul ignore next */
    cov_2a3yq6jmpo().s[80]++;
    return res.status(401).json({
      error: 'Access denied',
      message: 'Authentication required. Use Authorization header (Bearer token) or X-API-Key header',
      supportedMethods: ['jwt', 'api_key']
    });
  });

  /**
   * Enhanced authorization with resource-based permissions
   */
  authorize =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().s[81]++, (resource, action, options =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().b[20][0]++, {})) => {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[6]++;
    cov_2a3yq6jmpo().s[82]++;
    return async (req, res, next) => {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().f[7]++;
      cov_2a3yq6jmpo().s[83]++;
      try {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[84]++;
        if (!req.auth) {
          /* istanbul ignore next */
          cov_2a3yq6jmpo().b[21][0]++;
          cov_2a3yq6jmpo().s[85]++;
          return res.status(401).json({
            error: 'Access denied',
            message: 'Authentication required'
          });
        } else
        /* istanbul ignore next */
        {
          cov_2a3yq6jmpo().b[21][1]++;
        }

        // Check for admin bypass
        cov_2a3yq6jmpo().s[86]++;
        if (
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[23][0]++, options.allowAdmin) &&
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[23][1]++, req.auth.role === 'admin')) {
          /* istanbul ignore next */
          cov_2a3yq6jmpo().b[22][0]++;
          cov_2a3yq6jmpo().s[87]++;
          await this.logSecurityEvent('admin_access_granted', {
            userId: req.auth.userId,
            username: req.auth.username,
            resource: resource,
            action: action,
            endpoint: req.path
          }, req);
          /* istanbul ignore next */
          cov_2a3yq6jmpo().s[88]++;
          return next();
        } else
        /* istanbul ignore next */
        {
          cov_2a3yq6jmpo().b[22][1]++;
        }

        // Resource-level permission check
        const hasPermission =
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().s[89]++, this.checkResourcePermission(req.auth, resource, action, req));
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[90]++;
        if (!hasPermission) {
          /* istanbul ignore next */
          cov_2a3yq6jmpo().b[24][0]++;
          cov_2a3yq6jmpo().s[91]++;
          // Log authorization failure with detailed context
          await this.authService.logAuthEvent(
          /* istanbul ignore next */
          (cov_2a3yq6jmpo().b[25][0]++, req.auth.userId) ||
          /* istanbul ignore next */
          (cov_2a3yq6jmpo().b[25][1]++, null),
          /* istanbul ignore next */
          (cov_2a3yq6jmpo().b[26][0]++, req.auth.username) ||
          /* istanbul ignore next */
          (cov_2a3yq6jmpo().b[26][1]++, req.auth.keyName) ||
          /* istanbul ignore next */
          (cov_2a3yq6jmpo().b[26][2]++, null), 'authorization_denied', false, {
            resource,
            action,
            endpoint: req.path,
            method: req.method,
            userPermissions: req.auth.permissions,
            requiredPermission: `${resource}:${action}`,
            resourceContext: this.getResourceContext(req)
          }, req);
          /* istanbul ignore next */
          cov_2a3yq6jmpo().s[92]++;
          return res.status(403).json({
            error: 'Forbidden',
            message: `Insufficient permissions for ${resource}:${action}`,
            required: `${resource}:${action}`,
            granted: req.auth.permissions
          });
        } else
        /* istanbul ignore next */
        {
          cov_2a3yq6jmpo().b[24][1]++;
        }

        // Log successful authorization
        cov_2a3yq6jmpo().s[93]++;
        await this.authService.logAuthEvent(
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[27][0]++, req.auth.userId) ||
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[27][1]++, null),
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[28][0]++, req.auth.username) ||
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[28][1]++, req.auth.keyName) ||
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[28][2]++, null), 'authorization_granted', true, {
          resource,
          action,
          endpoint: req.path,
          method: req.method,
          permission: `${resource}:${action}`
        }, req);
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[94]++;
        next();
      } catch (error) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[95]++;
        console.error('Authorization error:', error.message);
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[96]++;
        return res.status(500).json({
          error: 'Internal server error',
          message: 'Authorization check failed'
        });
      }
    };
  });

  /**
   * Enhanced role-based authorization
   */
  requireRole =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().s[97]++, (requiredRoles, options =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().b[29][0]++, {})) => {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[8]++;
    cov_2a3yq6jmpo().s[98]++;
    if (typeof requiredRoles === 'string') {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[30][0]++;
      cov_2a3yq6jmpo().s[99]++;
      requiredRoles = [requiredRoles];
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[30][1]++;
    }
    cov_2a3yq6jmpo().s[100]++;
    return async (req, res, next) => {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().f[9]++;
      cov_2a3yq6jmpo().s[101]++;
      try {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[102]++;
        if (!req.auth) {
          /* istanbul ignore next */
          cov_2a3yq6jmpo().b[31][0]++;
          cov_2a3yq6jmpo().s[103]++;
          return res.status(401).json({
            error: 'Access denied',
            message: 'Authentication required'
          });
        } else
        /* istanbul ignore next */
        {
          cov_2a3yq6jmpo().b[31][1]++;
        }

        // API keys don't have roles, only users do
        cov_2a3yq6jmpo().s[104]++;
        if (req.auth.type !== 'jwt') {
          /* istanbul ignore next */
          cov_2a3yq6jmpo().b[32][0]++;
          cov_2a3yq6jmpo().s[105]++;
          return res.status(403).json({
            error: 'Forbidden',
            message: 'User authentication required for role-based operations'
          });
        } else
        /* istanbul ignore next */
        {
          cov_2a3yq6jmpo().b[32][1]++;
        }
        const userRole =
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().s[106]++, req.auth.role);
        const hasRole =
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().s[107]++,
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[33][0]++, requiredRoles.includes(userRole)) ||
        /* istanbul ignore next */
        (cov_2a3yq6jmpo().b[33][1]++, userRole === 'admin'));
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[108]++;
        if (!hasRole) {
          /* istanbul ignore next */
          cov_2a3yq6jmpo().b[34][0]++;
          cov_2a3yq6jmpo().s[109]++;
          await this.logSecurityEvent('role_denied', {
            userId: req.auth.userId,
            userRole: userRole,
            requiredRoles: requiredRoles,
            endpoint: req.path
          }, req);
          /* istanbul ignore next */
          cov_2a3yq6jmpo().s[110]++;
          return res.status(403).json({
            error: 'Forbidden',
            message: `Required role: ${requiredRoles.join(' or ')}`,
            currentRole: userRole
          });
        } else
        /* istanbul ignore next */
        {
          cov_2a3yq6jmpo().b[34][1]++;
        }
        cov_2a3yq6jmpo().s[111]++;
        next();
      } catch (error) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[112]++;
        console.error('Role authorization error:', error.message);
        /* istanbul ignore next */
        cov_2a3yq6jmpo().s[113]++;
        return res.status(500).json({
          error: 'Internal server error',
          message: 'Role check failed'
        });
      }
    };
  });

  /**
   * Token refresh middleware
   */
  refreshToken =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().s[114]++, async (req, res, next) => {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[10]++;
    cov_2a3yq6jmpo().s[115]++;
    try {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[116]++;
      if (
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[36][0]++, !req.auth) ||
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[36][1]++, req.auth.type !== 'jwt')) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[35][0]++;
        cov_2a3yq6jmpo().s[117]++;
        return res.status(401).json({
          error: 'Access denied',
          message: 'JWT authentication required for token refresh'
        });
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[35][1]++;
      }

      // Generate new token with same payload but fresh expiration
      const newToken =
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().s[118]++, this.authService.generateToken(req.user));

      // Log token refresh
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[119]++;
      await this.authService.logAuthEvent(req.user.id, req.user.username, 'token_refresh', true, {
        endpoint: req.path,
        oldTokenExp: req.auth.expiresAt
      }, req);
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[120]++;
      res.json({
        status: 'success',
        token: newToken,
        expiresIn: this.authService.jwtExpiresIn,
        refreshedAt: new Date().toISOString()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[121]++;
      console.error('Token refresh error:', error.message);
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[122]++;
      return res.status(500).json({
        error: 'Internal server error',
        message: 'Token refresh failed'
      });
    }
  });

  /**
   * Security utility methods
   */
  isIpAllowed(ip) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[11]++;
    cov_2a3yq6jmpo().s[123]++;
    // If whitelist is configured, IP must be in whitelist
    if (this.securityConfig.ipWhitelist.length > 0) {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[37][0]++;
      cov_2a3yq6jmpo().s[124]++;
      return this.securityConfig.ipWhitelist.includes(ip);
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[37][1]++;
    }

    // If blacklist is configured, IP must not be in blacklist
    cov_2a3yq6jmpo().s[125]++;
    if (this.securityConfig.ipBlacklist.length > 0) {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[38][0]++;
      cov_2a3yq6jmpo().s[126]++;
      return !this.securityConfig.ipBlacklist.includes(ip);
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[38][1]++;
    }

    // No IP filtering configured
    cov_2a3yq6jmpo().s[127]++;
    return true;
  }
  isValidApiKeyFormat(apiKey) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[12]++;
    cov_2a3yq6jmpo().s[128]++;
    // API keys should start with 'hga_' and be 64+ characters
    return /* istanbul ignore next */(cov_2a3yq6jmpo().b[39][0]++, typeof apiKey === 'string') &&
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().b[39][1]++, apiKey.startsWith('hga_')) &&
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().b[39][2]++, apiKey.length >= 35);
  }
  recordFailedAttempt(ip, reason, details =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().b[40][0]++, null)) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[13]++;
    const key =
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().s[129]++, ip);
    const attempt =
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().s[130]++, {
      timestamp: Date.now(),
      reason: reason,
      details: details
    });
    /* istanbul ignore next */
    cov_2a3yq6jmpo().s[131]++;
    if (!this.failedAttempts.has(key)) {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[41][0]++;
      cov_2a3yq6jmpo().s[132]++;
      this.failedAttempts.set(key, []);
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[41][1]++;
    }
    const attempts =
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().s[133]++, this.failedAttempts.get(key));
    /* istanbul ignore next */
    cov_2a3yq6jmpo().s[134]++;
    attempts.push(attempt);

    // Clean old attempts (older than lockout duration)
    const cutoff =
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().s[135]++, Date.now() - this.securityConfig.lockoutDuration);
    const recentAttempts =
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().s[136]++, attempts.filter(a => {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().f[14]++;
      cov_2a3yq6jmpo().s[137]++;
      return a.timestamp > cutoff;
    }));
    /* istanbul ignore next */
    cov_2a3yq6jmpo().s[138]++;
    this.failedAttempts.set(key, recentAttempts);
  }
  clearFailedAttempts(ip) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[15]++;
    cov_2a3yq6jmpo().s[139]++;
    this.failedAttempts.delete(ip);
  }
  isRateLimited(ip) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[16]++;
    const attempts =
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().s[140]++,
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().b[42][0]++, this.failedAttempts.get(ip)) ||
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().b[42][1]++, []));
    const cutoff =
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().s[141]++, Date.now() - this.securityConfig.lockoutDuration);
    const recentAttempts =
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().s[142]++, attempts.filter(a => {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().f[17]++;
      cov_2a3yq6jmpo().s[143]++;
      return a.timestamp > cutoff;
    }));
    /* istanbul ignore next */
    cov_2a3yq6jmpo().s[144]++;
    return recentAttempts.length >= this.securityConfig.maxFailedAttempts;
  }
  checkResourcePermission(auth, resource, action, req) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[18]++;
    const hasPermission =
    /* istanbul ignore next */
    (cov_2a3yq6jmpo().s[145]++, this.authService.checkPermission(auth, resource, action));

    // Additional context-based checks could go here
    // For example, checking if user owns the resource they're trying to access
    /* istanbul ignore next */
    cov_2a3yq6jmpo().s[146]++;
    return hasPermission;
  }
  getResourceContext(req) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[19]++;
    cov_2a3yq6jmpo().s[147]++;
    // Extract resource context from request (e.g., repository name, deployment ID)
    return {
      params: req.params,
      query: req.query,
      path: req.path
    };
  }
  getTokenErrorType(error) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[20]++;
    cov_2a3yq6jmpo().s[148]++;
    if (error.name === 'TokenExpiredError') {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[43][0]++;
      cov_2a3yq6jmpo().s[149]++;
      return 'expired';
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[43][1]++;
    }
    cov_2a3yq6jmpo().s[150]++;
    if (error.name === 'JsonWebTokenError') {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[44][0]++;
      cov_2a3yq6jmpo().s[151]++;
      return 'invalid';
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[44][1]++;
    }
    cov_2a3yq6jmpo().s[152]++;
    if (error.name === 'NotBeforeError') {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[45][0]++;
      cov_2a3yq6jmpo().s[153]++;
      return 'not_active';
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[45][1]++;
    }
    cov_2a3yq6jmpo().s[154]++;
    return 'unknown';
  }
  getTokenErrorCode(error) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[21]++;
    cov_2a3yq6jmpo().s[155]++;
    if (error.name === 'TokenExpiredError') {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[46][0]++;
      cov_2a3yq6jmpo().s[156]++;
      return 'TOKEN_EXPIRED';
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[46][1]++;
    }
    cov_2a3yq6jmpo().s[157]++;
    if (error.name === 'JsonWebTokenError') {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[47][0]++;
      cov_2a3yq6jmpo().s[158]++;
      return 'TOKEN_INVALID';
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[47][1]++;
    }
    cov_2a3yq6jmpo().s[159]++;
    if (error.name === 'NotBeforeError') {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().b[48][0]++;
      cov_2a3yq6jmpo().s[160]++;
      return 'TOKEN_NOT_ACTIVE';
    } else
    /* istanbul ignore next */
    {
      cov_2a3yq6jmpo().b[48][1]++;
    }
    cov_2a3yq6jmpo().s[161]++;
    return 'TOKEN_ERROR';
  }
  async verifyMFACode(userId, code, method) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[22]++;
    cov_2a3yq6jmpo().s[162]++;
    // This would integrate with your MFA provider (e.g., Google Authenticator, SMS service)
    // For now, return false as MFA is not fully implemented
    return false;
  }
  async logSecurityEvent(eventType, details, req) {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[23]++;
    cov_2a3yq6jmpo().s[163]++;
    try {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[164]++;
      await this.authService.logAuthEvent(
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[49][0]++, req.auth?.userId) ||
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[49][1]++, null),
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[50][0]++, req.auth?.username) ||
      /* istanbul ignore next */
      (cov_2a3yq6jmpo().b[50][1]++, null), `security_${eventType}`, false, {
        ...details,
        userAgent: req.get('User-Agent'),
        timestamp: new Date().toISOString()
      }, req);
    } catch (error) {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().s[165]++;
      console.error('Failed to log security event:', error);
    }
  }

  /**
   * Security audit middleware
   */
  securityAudit =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().s[166]++, () => {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[24]++;
    cov_2a3yq6jmpo().s[167]++;
    return async (req, res, next) => {
      /* istanbul ignore next */
      cov_2a3yq6jmpo().f[25]++;
      cov_2a3yq6jmpo().s[168]++;
      // Log all authenticated requests for security audit
      if (req.auth) {
        /* istanbul ignore next */
        cov_2a3yq6jmpo().b[51][0]++;
        cov_2a3yq6jmpo().s[169]++;
        await this.logSecurityEvent('request_audit', {
          endpoint: req.path,
          method: req.method,
          authType: req.auth.type,
          userId: req.auth.userId,
          username:
          /* istanbul ignore next */
          (cov_2a3yq6jmpo().b[52][0]++, req.auth.username) ||
          /* istanbul ignore next */
          (cov_2a3yq6jmpo().b[52][1]++, req.auth.keyName)
        }, req);
      } else
      /* istanbul ignore next */
      {
        cov_2a3yq6jmpo().b[51][1]++;
      }
      cov_2a3yq6jmpo().s[170]++;
      next();
    };
  });

  /**
   * Admin-only middleware
   */
  requireAdmin =
  /* istanbul ignore next */
  (cov_2a3yq6jmpo().s[171]++, () => {
    /* istanbul ignore next */
    cov_2a3yq6jmpo().f[26]++;
    cov_2a3yq6jmpo().s[172]++;
    return this.requireRole('admin');
  });
}

// Create singleton instance
const enhancedAuthMiddleware =
/* istanbul ignore next */
(cov_2a3yq6jmpo().s[173]++, new EnhancedAuthMiddleware());

// Export individual middleware functions
/* istanbul ignore next */
cov_2a3yq6jmpo().s[174]++;
module.exports = {
  authenticate: enhancedAuthMiddleware.authenticate,
  authenticateJWT: enhancedAuthMiddleware.authenticateJWT,
  authenticateApiKey: enhancedAuthMiddleware.authenticateApiKey,
  authorize: enhancedAuthMiddleware.authorize,
  requireRole: enhancedAuthMiddleware.requireRole,
  requireAdmin: enhancedAuthMiddleware.requireAdmin,
  requireMFA: enhancedAuthMiddleware.requireMFA,
  refreshToken: enhancedAuthMiddleware.refreshToken,
  securityAudit: enhancedAuthMiddleware.securityAudit,
  EnhancedAuthMiddleware
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,