19873ad680be326b84718c34de34931a
/* istanbul ignore next */
function cov_1xpdpcyfa2() {
  var path = "/home/dev/workspace/homelab-gitops-auditor/scripts/services/mcp-coordinator.js";
  var hash = "e681e00f15842b9ed248918fb642a4af6fe735a1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/dev/workspace/homelab-gitops-auditor/scripts/services/mcp-coordinator.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 24
        },
        end: {
          line: 1,
          column: 48
        }
      },
      "1": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 2,
          column: 37
        }
      },
      "2": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 3,
          column: 42
        }
      },
      "3": {
        start: {
          line: 4,
          column: 11
        },
        end: {
          line: 4,
          column: 33
        }
      },
      "4": {
        start: {
          line: 5,
          column: 13
        },
        end: {
          line: 5,
          column: 28
        }
      },
      "5": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 33
        }
      },
      "6": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 12
        }
      },
      "7": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 53
        }
      },
      "8": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "9": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "10": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "11": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "12": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 68
        }
      },
      "13": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 46
        }
      },
      "14": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 27,
          column: 6
        }
      },
      "15": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "16": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "17": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 74
        }
      },
      "18": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 68
        }
      },
      "19": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 31
        }
      },
      "20": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 68
        }
      },
      "21": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 18
        }
      },
      "22": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "23": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 18
        }
      },
      "24": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "25": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 89
        }
      },
      "26": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "27": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "28": {
        start: {
          line: 58,
          column: 21
        },
        end: {
          line: 58,
          column: 85
        }
      },
      "29": {
        start: {
          line: 58,
          column: 61
        },
        end: {
          line: 58,
          column: 65
        }
      },
      "30": {
        start: {
          line: 58,
          column: 79
        },
        end: {
          line: 58,
          column: 84
        }
      },
      "31": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 61,
          column: 7
        }
      },
      "32": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 68
        }
      },
      "33": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 71,
          column: 7
        }
      },
      "34": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 45
        }
      },
      "35": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 74,
          column: 38
        }
      },
      "36": {
        start: {
          line: 76,
          column: 6
        },
        end: {
          line: 76,
          column: 77
        }
      },
      "37": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "38": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "39": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 96,
          column: 49
        }
      },
      "40": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "41": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 54
        }
      },
      "42": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 56
        }
      },
      "43": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "44": {
        start: {
          line: 104,
          column: 26
        },
        end: {
          line: 104,
          column: 53
        }
      },
      "45": {
        start: {
          line: 105,
          column: 21
        },
        end: {
          line: 105,
          column: 85
        }
      },
      "46": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 57
        }
      },
      "47": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 108,
          column: 60
        }
      },
      "48": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 34
        }
      },
      "49": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 32
        }
      },
      "50": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 69
        }
      },
      "51": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 48
        }
      },
      "52": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 20
        }
      },
      "53": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 53
        }
      },
      "54": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 43
        }
      },
      "55": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 120,
          column: 30
        }
      },
      "56": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "57": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 69
        }
      },
      "58": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 129,
          column: 18
        }
      },
      "59": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "60": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 44
        }
      },
      "61": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 26
        }
      },
      "62": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 24
        }
      },
      "63": {
        start: {
          line: 145,
          column: 23
        },
        end: {
          line: 145,
          column: 59
        }
      },
      "64": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "65": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 147,
          column: 64
        }
      },
      "66": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "67": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 48
        }
      },
      "68": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 51
        }
      },
      "69": {
        start: {
          line: 155,
          column: 22
        },
        end: {
          line: 155,
          column: 98
        }
      },
      "70": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 162,
          column: 7
        }
      },
      "71": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "72": {
        start: {
          line: 165,
          column: 21
        },
        end: {
          line: 165,
          column: 83
        }
      },
      "73": {
        start: {
          line: 167,
          column: 6
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "74": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 173,
          column: 20
        }
      },
      "75": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "76": {
        start: {
          line: 183,
          column: 6
        },
        end: {
          line: 183,
          column: 43
        }
      },
      "77": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 188,
          column: 7
        }
      },
      "78": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 55
        }
      },
      "79": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 53
        }
      },
      "80": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 18
        }
      },
      "81": {
        start: {
          line: 195,
          column: 22
        },
        end: {
          line: 195,
          column: 32
        }
      },
      "82": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 244,
          column: 7
        }
      },
      "83": {
        start: {
          line: 198,
          column: 26
        },
        end: {
          line: 198,
          column: 70
        }
      },
      "84": {
        start: {
          line: 199,
          column: 22
        },
        end: {
          line: 202,
          column: 8
        }
      },
      "85": {
        start: {
          line: 204,
          column: 19
        },
        end: {
          line: 204,
          column: 21
        }
      },
      "86": {
        start: {
          line: 205,
          column: 19
        },
        end: {
          line: 205,
          column: 21
        }
      },
      "87": {
        start: {
          line: 209,
          column: 6
        },
        end: {
          line: 212,
          column: 18
        }
      },
      "88": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 32
        }
      },
      "89": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 64
        }
      },
      "90": {
        start: {
          line: 214,
          column: 6
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "91": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 34
        }
      },
      "92": {
        start: {
          line: 218,
          column: 6
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "93": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 34
        }
      },
      "94": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "95": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 32
        }
      },
      "96": {
        start: {
          line: 225,
          column: 25
        },
        end: {
          line: 225,
          column: 47
        }
      },
      "97": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "98": {
        start: {
          line: 228,
          column: 10
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "99": {
        start: {
          line: 236,
          column: 10
        },
        end: {
          line: 236,
          column: 90
        }
      },
      "100": {
        start: {
          line: 240,
          column: 6
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "101": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 32
        }
      },
      "102": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 61
        }
      },
      "103": {
        start: {
          line: 248,
          column: 21
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "104": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 258,
          column: 39
        }
      },
      "105": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "106": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 260,
          column: 68
        }
      },
      "107": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 75
        }
      },
      "108": {
        start: {
          line: 267,
          column: 21
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "109": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 39
        }
      },
      "110": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 282,
          column: 5
        }
      },
      "111": {
        start: {
          line: 281,
          column: 6
        },
        end: {
          line: 281,
          column: 64
        }
      },
      "112": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 284,
          column: 72
        }
      },
      "113": {
        start: {
          line: 288,
          column: 23
        },
        end: {
          line: 288,
          column: 25
        }
      },
      "114": {
        start: {
          line: 290,
          column: 4
        },
        end: {
          line: 434,
          column: 5
        }
      },
      "115": {
        start: {
          line: 292,
          column: 32
        },
        end: {
          line: 292,
          column: 67
        }
      },
      "116": {
        start: {
          line: 295,
          column: 32
        },
        end: {
          line: 295,
          column: 36
        }
      },
      "117": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 333,
          column: 7
        }
      },
      "118": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "119": {
        start: {
          line: 298,
          column: 32
        },
        end: {
          line: 298,
          column: 51
        }
      },
      "120": {
        start: {
          line: 299,
          column: 10
        },
        end: {
          line: 299,
          column: 43
        }
      },
      "121": {
        start: {
          line: 301,
          column: 10
        },
        end: {
          line: 303,
          column: 12
        }
      },
      "122": {
        start: {
          line: 305,
          column: 10
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "123": {
        start: {
          line: 312,
          column: 10
        },
        end: {
          line: 315,
          column: 13
        }
      },
      "124": {
        start: {
          line: 318,
          column: 10
        },
        end: {
          line: 320,
          column: 13
        }
      },
      "125": {
        start: {
          line: 322,
          column: 10
        },
        end: {
          line: 326,
          column: 13
        }
      },
      "126": {
        start: {
          line: 329,
          column: 10
        },
        end: {
          line: 331,
          column: 11
        }
      },
      "127": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 84
        }
      },
      "128": {
        start: {
          line: 336,
          column: 6
        },
        end: {
          line: 336,
          column: 103
        }
      },
      "129": {
        start: {
          line: 338,
          column: 28
        },
        end: {
          line: 341,
          column: 8
        }
      },
      "130": {
        start: {
          line: 343,
          column: 6
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "131": {
        start: {
          line: 350,
          column: 6
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "132": {
        start: {
          line: 355,
          column: 28
        },
        end: {
          line: 355,
          column: 66
        }
      },
      "133": {
        start: {
          line: 356,
          column: 28
        },
        end: {
          line: 360,
          column: 8
        }
      },
      "134": {
        start: {
          line: 362,
          column: 6
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "135": {
        start: {
          line: 369,
          column: 29
        },
        end: {
          line: 369,
          column: 33
        }
      },
      "136": {
        start: {
          line: 370,
          column: 6
        },
        end: {
          line: 382,
          column: 7
        }
      },
      "137": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 66
        }
      },
      "138": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 375,
          column: 11
        }
      },
      "139": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "140": {
        start: {
          line: 385,
          column: 26
        },
        end: {
          line: 385,
          column: 96
        }
      },
      "141": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 406,
          column: 7
        }
      },
      "142": {
        start: {
          line: 388,
          column: 28
        },
        end: {
          line: 393,
          column: 10
        }
      },
      "143": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 399,
          column: 11
        }
      },
      "144": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 405,
          column: 11
        }
      },
      "145": {
        start: {
          line: 408,
          column: 6
        },
        end: {
          line: 415,
          column: 8
        }
      },
      "146": {
        start: {
          line: 418,
          column: 6
        },
        end: {
          line: 421,
          column: 9
        }
      },
      "147": {
        start: {
          line: 423,
          column: 6
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "148": {
        start: {
          line: 429,
          column: 6
        },
        end: {
          line: 433,
          column: 8
        }
      },
      "149": {
        start: {
          line: 438,
          column: 4
        },
        end: {
          line: 479,
          column: 5
        }
      },
      "150": {
        start: {
          line: 439,
          column: 27
        },
        end: {
          line: 444,
          column: 8
        }
      },
      "151": {
        start: {
          line: 446,
          column: 23
        },
        end: {
          line: 446,
          column: 54
        }
      },
      "152": {
        start: {
          line: 447,
          column: 26
        },
        end: {
          line: 447,
          column: 28
        }
      },
      "153": {
        start: {
          line: 449,
          column: 31
        },
        end: {
          line: 449,
          column: 57
        }
      },
      "154": {
        start: {
          line: 450,
          column: 32
        },
        end: {
          line: 450,
          column: 72
        }
      },
      "155": {
        start: {
          line: 452,
          column: 6
        },
        end: {
          line: 467,
          column: 7
        }
      },
      "156": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "157": {
        start: {
          line: 454,
          column: 37
        },
        end: {
          line: 454,
          column: 90
        }
      },
      "158": {
        start: {
          line: 454,
          column: 66
        },
        end: {
          line: 454,
          column: 89
        }
      },
      "159": {
        start: {
          line: 455,
          column: 10
        },
        end: {
          line: 462,
          column: 11
        }
      },
      "160": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 461,
          column: 15
        }
      },
      "161": {
        start: {
          line: 463,
          column: 15
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "162": {
        start: {
          line: 464,
          column: 27
        },
        end: {
          line: 464,
          column: 87
        }
      },
      "163": {
        start: {
          line: 465,
          column: 10
        },
        end: {
          line: 465,
          column: 40
        }
      },
      "164": {
        start: {
          line: 469,
          column: 6
        },
        end: {
          line: 469,
          column: 25
        }
      },
      "165": {
        start: {
          line: 472,
          column: 6
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "166": {
        start: {
          line: 478,
          column: 6
        },
        end: {
          line: 478,
          column: 18
        }
      },
      "167": {
        start: {
          line: 483,
          column: 4
        },
        end: {
          line: 516,
          column: 5
        }
      },
      "168": {
        start: {
          line: 484,
          column: 26
        },
        end: {
          line: 489,
          column: 8
        }
      },
      "169": {
        start: {
          line: 491,
          column: 23
        },
        end: {
          line: 491,
          column: 53
        }
      },
      "170": {
        start: {
          line: 492,
          column: 20
        },
        end: {
          line: 492,
          column: 22
        }
      },
      "171": {
        start: {
          line: 494,
          column: 6
        },
        end: {
          line: 506,
          column: 7
        }
      },
      "172": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 505,
          column: 9
        }
      },
      "173": {
        start: {
          line: 496,
          column: 10
        },
        end: {
          line: 501,
          column: 13
        }
      },
      "174": {
        start: {
          line: 502,
          column: 15
        },
        end: {
          line: 505,
          column: 9
        }
      },
      "175": {
        start: {
          line: 503,
          column: 27
        },
        end: {
          line: 503,
          column: 87
        }
      },
      "176": {
        start: {
          line: 504,
          column: 10
        },
        end: {
          line: 504,
          column: 34
        }
      },
      "177": {
        start: {
          line: 508,
          column: 6
        },
        end: {
          line: 508,
          column: 19
        }
      },
      "178": {
        start: {
          line: 511,
          column: 6
        },
        end: {
          line: 514,
          column: 9
        }
      },
      "179": {
        start: {
          line: 515,
          column: 6
        },
        end: {
          line: 515,
          column: 16
        }
      },
      "180": {
        start: {
          line: 520,
          column: 4
        },
        end: {
          line: 611,
          column: 5
        }
      },
      "181": {
        start: {
          line: 521,
          column: 6
        },
        end: {
          line: 521,
          column: 81
        }
      },
      "182": {
        start: {
          line: 524,
          column: 6
        },
        end: {
          line: 560,
          column: 7
        }
      },
      "183": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 559,
          column: 9
        }
      },
      "184": {
        start: {
          line: 526,
          column: 38
        },
        end: {
          line: 526,
          column: 75
        }
      },
      "185": {
        start: {
          line: 527,
          column: 34
        },
        end: {
          line: 527,
          column: 55
        }
      },
      "186": {
        start: {
          line: 528,
          column: 10
        },
        end: {
          line: 528,
          column: 45
        }
      },
      "187": {
        start: {
          line: 530,
          column: 33
        },
        end: {
          line: 537,
          column: 11
        }
      },
      "188": {
        start: {
          line: 539,
          column: 10
        },
        end: {
          line: 542,
          column: 13
        }
      },
      "189": {
        start: {
          line: 544,
          column: 10
        },
        end: {
          line: 552,
          column: 12
        }
      },
      "190": {
        start: {
          line: 555,
          column: 10
        },
        end: {
          line: 557,
          column: 13
        }
      },
      "191": {
        start: {
          line: 563,
          column: 6
        },
        end: {
          line: 563,
          column: 56
        }
      },
      "192": {
        start: {
          line: 566,
          column: 26
        },
        end: {
          line: 569,
          column: 8
        }
      },
      "193": {
        start: {
          line: 572,
          column: 28
        },
        end: {
          line: 572,
          column: 30
        }
      },
      "194": {
        start: {
          line: 573,
          column: 6
        },
        end: {
          line: 588,
          column: 7
        }
      },
      "195": {
        start: {
          line: 574,
          column: 8
        },
        end: {
          line: 587,
          column: 9
        }
      },
      "196": {
        start: {
          line: 575,
          column: 30
        },
        end: {
          line: 578,
          column: 12
        }
      },
      "197": {
        start: {
          line: 580,
          column: 10
        },
        end: {
          line: 584,
          column: 13
        }
      },
      "198": {
        start: {
          line: 586,
          column: 10
        },
        end: {
          line: 586,
          column: 40
        }
      },
      "199": {
        start: {
          line: 590,
          column: 6
        },
        end: {
          line: 596,
          column: 8
        }
      },
      "200": {
        start: {
          line: 599,
          column: 6
        },
        end: {
          line: 603,
          column: 9
        }
      },
      "201": {
        start: {
          line: 605,
          column: 6
        },
        end: {
          line: 610,
          column: 8
        }
      },
      "202": {
        start: {
          line: 615,
          column: 4
        },
        end: {
          line: 617,
          column: 5
        }
      },
      "203": {
        start: {
          line: 616,
          column: 6
        },
        end: {
          line: 616,
          column: 43
        }
      },
      "204": {
        start: {
          line: 619,
          column: 4
        },
        end: {
          line: 621,
          column: 33
        }
      },
      "205": {
        start: {
          line: 620,
          column: 6
        },
        end: {
          line: 620,
          column: 39
        }
      },
      "206": {
        start: {
          line: 623,
          column: 4
        },
        end: {
          line: 623,
          column: 88
        }
      },
      "207": {
        start: {
          line: 627,
          column: 4
        },
        end: {
          line: 646,
          column: 5
        }
      },
      "208": {
        start: {
          line: 628,
          column: 6
        },
        end: {
          line: 645,
          column: 7
        }
      },
      "209": {
        start: {
          line: 629,
          column: 8
        },
        end: {
          line: 639,
          column: 9
        }
      },
      "210": {
        start: {
          line: 630,
          column: 10
        },
        end: {
          line: 630,
          column: 42
        }
      },
      "211": {
        start: {
          line: 631,
          column: 15
        },
        end: {
          line: 639,
          column: 9
        }
      },
      "212": {
        start: {
          line: 632,
          column: 10
        },
        end: {
          line: 636,
          column: 13
        }
      },
      "213": {
        start: {
          line: 638,
          column: 10
        },
        end: {
          line: 638,
          column: 42
        }
      },
      "214": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 644,
          column: 11
        }
      },
      "215": {
        start: {
          line: 650,
          column: 19
        },
        end: {
          line: 653,
          column: 5
        }
      },
      "216": {
        start: {
          line: 655,
          column: 4
        },
        end: {
          line: 663,
          column: 5
        }
      },
      "217": {
        start: {
          line: 656,
          column: 6
        },
        end: {
          line: 662,
          column: 8
        }
      },
      "218": {
        start: {
          line: 665,
          column: 36
        },
        end: {
          line: 667,
          column: 5
        }
      },
      "219": {
        start: {
          line: 666,
          column: 14
        },
        end: {
          line: 666,
          column: 57
        }
      },
      "220": {
        start: {
          line: 669,
          column: 4
        },
        end: {
          line: 671,
          column: 5
        }
      },
      "221": {
        start: {
          line: 670,
          column: 6
        },
        end: {
          line: 670,
          column: 33
        }
      },
      "222": {
        start: {
          line: 673,
          column: 4
        },
        end: {
          line: 673,
          column: 18
        }
      },
      "223": {
        start: {
          line: 677,
          column: 23
        },
        end: {
          line: 677,
          column: 49
        }
      },
      "224": {
        start: {
          line: 678,
          column: 4
        },
        end: {
          line: 678,
          column: 55
        }
      },
      "225": {
        start: {
          line: 682,
          column: 24
        },
        end: {
          line: 682,
          column: 26
        }
      },
      "226": {
        start: {
          line: 683,
          column: 4
        },
        end: {
          line: 691,
          column: 5
        }
      },
      "227": {
        start: {
          line: 684,
          column: 6
        },
        end: {
          line: 690,
          column: 8
        }
      },
      "228": {
        start: {
          line: 692,
          column: 4
        },
        end: {
          line: 692,
          column: 23
        }
      },
      "229": {
        start: {
          line: 696,
          column: 4
        },
        end: {
          line: 699,
          column: 5
        }
      },
      "230": {
        start: {
          line: 697,
          column: 6
        },
        end: {
          line: 697,
          column: 43
        }
      },
      "231": {
        start: {
          line: 698,
          column: 6
        },
        end: {
          line: 698,
          column: 35
        }
      },
      "232": {
        start: {
          line: 702,
          column: 4
        },
        end: {
          line: 706,
          column: 5
        }
      },
      "233": {
        start: {
          line: 703,
          column: 6
        },
        end: {
          line: 705,
          column: 7
        }
      },
      "234": {
        start: {
          line: 704,
          column: 8
        },
        end: {
          line: 704,
          column: 43
        }
      },
      "235": {
        start: {
          line: 708,
          column: 4
        },
        end: {
          line: 708,
          column: 29
        }
      },
      "236": {
        start: {
          line: 709,
          column: 4
        },
        end: {
          line: 709,
          column: 30
        }
      },
      "237": {
        start: {
          line: 711,
          column: 4
        },
        end: {
          line: 711,
          column: 52
        }
      },
      "238": {
        start: {
          line: 715,
          column: 0
        },
        end: {
          line: 715,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 2
          },
          end: {
            line: 10,
            column: 3
          }
        },
        loc: {
          start: {
            line: 10,
            column: 28
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        loc: {
          start: {
            line: 30,
            column: 21
          },
          end: {
            line: 49,
            column: 3
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 51,
            column: 2
          },
          end: {
            line: 51,
            column: 3
          }
        },
        loc: {
          start: {
            line: 51,
            column: 48
          },
          end: {
            line: 93,
            column: 3
          }
        },
        line: 51
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 55
          },
          end: {
            line: 58,
            column: 56
          }
        },
        loc: {
          start: {
            line: 58,
            column: 61
          },
          end: {
            line: 58,
            column: 65
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 73
          },
          end: {
            line: 58,
            column: 74
          }
        },
        loc: {
          start: {
            line: 58,
            column: 79
          },
          end: {
            line: 58,
            column: 84
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        loc: {
          start: {
            line: 95,
            column: 29
          },
          end: {
            line: 131,
            column: 3
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 133,
            column: 2
          },
          end: {
            line: 133,
            column: 3
          }
        },
        loc: {
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 142,
            column: 3
          }
        },
        line: 133
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 144,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        },
        loc: {
          start: {
            line: 144,
            column: 62
          },
          end: {
            line: 192,
            column: 3
          }
        },
        line: 144
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 194,
            column: 2
          },
          end: {
            line: 194,
            column: 3
          }
        },
        loc: {
          start: {
            line: 194,
            column: 60
          },
          end: {
            line: 245,
            column: 3
          }
        },
        line: 194
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 197,
            column: 23
          },
          end: {
            line: 197,
            column: 24
          }
        },
        loc: {
          start: {
            line: 197,
            column: 44
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 197
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 209,
            column: 29
          },
          end: {
            line: 209,
            column: 30
          }
        },
        loc: {
          start: {
            line: 209,
            column: 35
          },
          end: {
            line: 212,
            column: 7
          }
        },
        line: 209
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 214,
            column: 32
          },
          end: {
            line: 214,
            column: 33
          }
        },
        loc: {
          start: {
            line: 214,
            column: 42
          },
          end: {
            line: 216,
            column: 7
          }
        },
        line: 214
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 218,
            column: 32
          },
          end: {
            line: 218,
            column: 33
          }
        },
        loc: {
          start: {
            line: 218,
            column: 42
          },
          end: {
            line: 220,
            column: 7
          }
        },
        line: 218
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 222,
            column: 26
          },
          end: {
            line: 222,
            column: 27
          }
        },
        loc: {
          start: {
            line: 222,
            column: 36
          },
          end: {
            line: 238,
            column: 7
          }
        },
        line: 222
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 240,
            column: 26
          },
          end: {
            line: 240,
            column: 27
          }
        },
        loc: {
          start: {
            line: 240,
            column: 37
          },
          end: {
            line: 243,
            column: 7
          }
        },
        line: 240
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 247,
            column: 2
          },
          end: {
            line: 247,
            column: 3
          }
        },
        loc: {
          start: {
            line: 247,
            column: 51
          },
          end: {
            line: 264,
            column: 3
          }
        },
        line: 247
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 266,
            column: 2
          },
          end: {
            line: 266,
            column: 3
          }
        },
        loc: {
          start: {
            line: 266,
            column: 48
          },
          end: {
            line: 285,
            column: 3
          }
        },
        line: 266
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 287,
            column: 2
          },
          end: {
            line: 287,
            column: 3
          }
        },
        loc: {
          start: {
            line: 287,
            column: 47
          },
          end: {
            line: 435,
            column: 3
          }
        },
        line: 287
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 437,
            column: 2
          },
          end: {
            line: 437,
            column: 3
          }
        },
        loc: {
          start: {
            line: 437,
            column: 60
          },
          end: {
            line: 480,
            column: 3
          }
        },
        line: 437
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 454,
            column: 59
          },
          end: {
            line: 454,
            column: 60
          }
        },
        loc: {
          start: {
            line: 454,
            column: 66
          },
          end: {
            line: 454,
            column: 89
          }
        },
        line: 454
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 482,
            column: 2
          },
          end: {
            line: 482,
            column: 3
          }
        },
        loc: {
          start: {
            line: 482,
            column: 56
          },
          end: {
            line: 517,
            column: 3
          }
        },
        line: 482
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 519,
            column: 2
          },
          end: {
            line: 519,
            column: 3
          }
        },
        loc: {
          start: {
            line: 519,
            column: 53
          },
          end: {
            line: 612,
            column: 3
          }
        },
        line: 519
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 614,
            column: 2
          },
          end: {
            line: 614,
            column: 3
          }
        },
        loc: {
          start: {
            line: 614,
            column: 22
          },
          end: {
            line: 624,
            column: 3
          }
        },
        line: 614
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 619,
            column: 40
          },
          end: {
            line: 619,
            column: 41
          }
        },
        loc: {
          start: {
            line: 619,
            column: 52
          },
          end: {
            line: 621,
            column: 5
          }
        },
        line: 619
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 626,
            column: 2
          },
          end: {
            line: 626,
            column: 3
          }
        },
        loc: {
          start: {
            line: 626,
            column: 30
          },
          end: {
            line: 647,
            column: 3
          }
        },
        line: 626
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 649,
            column: 2
          },
          end: {
            line: 649,
            column: 3
          }
        },
        loc: {
          start: {
            line: 649,
            column: 22
          },
          end: {
            line: 674,
            column: 3
          }
        },
        line: 649
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 666,
            column: 6
          },
          end: {
            line: 666,
            column: 7
          }
        },
        loc: {
          start: {
            line: 666,
            column: 14
          },
          end: {
            line: 666,
            column: 57
          }
        },
        line: 666
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 676,
            column: 2
          },
          end: {
            line: 676,
            column: 3
          }
        },
        loc: {
          start: {
            line: 676,
            column: 28
          },
          end: {
            line: 679,
            column: 3
          }
        },
        line: 676
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 681,
            column: 2
          },
          end: {
            line: 681,
            column: 3
          }
        },
        loc: {
          start: {
            line: 681,
            column: 22
          },
          end: {
            line: 693,
            column: 3
          }
        },
        line: 681
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 695,
            column: 2
          },
          end: {
            line: 695,
            column: 3
          }
        },
        loc: {
          start: {
            line: 695,
            column: 18
          },
          end: {
            line: 712,
            column: 3
          }
        },
        line: 695
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 14
          },
          end: {
            line: 10,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 24
          },
          end: {
            line: 10,
            column: 26
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 15,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 15,
            column: 34
          }
        }, {
          start: {
            line: 15,
            column: 38
          },
          end: {
            line: 15,
            column: 43
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 58
          }
        }, {
          start: {
            line: 19,
            column: 62
          },
          end: {
            line: 19,
            column: 67
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 40
          }
        }, {
          start: {
            line: 20,
            column: 44
          },
          end: {
            line: 20,
            column: 45
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 6
          },
          end: {
            line: 61,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 6
          },
          end: {
            line: 61,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "7": {
        loc: {
          start: {
            line: 134,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 135,
            column: 6
          },
          end: {
            line: 136,
            column: 44
          }
        }, {
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 138,
            column: 26
          }
        }, {
          start: {
            line: 139,
            column: 6
          },
          end: {
            line: 140,
            column: 24
          }
        }],
        line: 134
      },
      "8": {
        loc: {
          start: {
            line: 144,
            column: 48
          },
          end: {
            line: 144,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 58
          },
          end: {
            line: 144,
            column: 60
          }
        }],
        line: 144
      },
      "9": {
        loc: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "10": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "11": {
        loc: {
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 154,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 20
          },
          end: {
            line: 154,
            column: 35
          }
        }, {
          start: {
            line: 154,
            column: 39
          },
          end: {
            line: 154,
            column: 51
          }
        }],
        line: 154
      },
      "12": {
        loc: {
          start: {
            line: 159,
            column: 15
          },
          end: {
            line: 159,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 40
          },
          end: {
            line: 159,
            column: 57
          }
        }, {
          start: {
            line: 159,
            column: 60
          },
          end: {
            line: 159,
            column: 67
          }
        }],
        line: 159
      },
      "13": {
        loc: {
          start: {
            line: 180,
            column: 17
          },
          end: {
            line: 180,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 42
          },
          end: {
            line: 180,
            column: 59
          }
        }, {
          start: {
            line: 180,
            column: 62
          },
          end: {
            line: 180,
            column: 69
          }
        }],
        line: 180
      },
      "14": {
        loc: {
          start: {
            line: 185,
            column: 6
          },
          end: {
            line: 188,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 6
          },
          end: {
            line: 188,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "15": {
        loc: {
          start: {
            line: 185,
            column: 10
          },
          end: {
            line: 185,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 10
          },
          end: {
            line: 185,
            column: 43
          }
        }, {
          start: {
            line: 185,
            column: 47
          },
          end: {
            line: 185,
            column: 83
          }
        }],
        line: 185
      },
      "16": {
        loc: {
          start: {
            line: 198,
            column: 26
          },
          end: {
            line: 198,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 51
          },
          end: {
            line: 198,
            column: 58
          }
        }, {
          start: {
            line: 198,
            column: 61
          },
          end: {
            line: 198,
            column: 70
          }
        }],
        line: 198
      },
      "17": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: 235,
            column: 15
          },
          end: {
            line: 237,
            column: 9
          }
        }],
        line: 227
      },
      "18": {
        loc: {
          start: {
            line: 236,
            column: 69
          },
          end: {
            line: 236,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 69
          },
          end: {
            line: 236,
            column: 75
          }
        }, {
          start: {
            line: 236,
            column: 79
          },
          end: {
            line: 236,
            column: 85
          }
        }],
        line: 236
      },
      "19": {
        loc: {
          start: {
            line: 247,
            column: 38
          },
          end: {
            line: 247,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 247,
            column: 47
          },
          end: {
            line: 247,
            column: 49
          }
        }],
        line: 247
      },
      "20": {
        loc: {
          start: {
            line: 249,
            column: 69
          },
          end: {
            line: 249,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 69
          },
          end: {
            line: 249,
            column: 80
          }
        }, {
          start: {
            line: 249,
            column: 84
          },
          end: {
            line: 249,
            column: 86
          }
        }],
        line: 249
      },
      "21": {
        loc: {
          start: {
            line: 250,
            column: 76
          },
          end: {
            line: 250,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 76
          },
          end: {
            line: 250,
            column: 91
          }
        }, {
          start: {
            line: 250,
            column: 95
          },
          end: {
            line: 250,
            column: 102
          }
        }],
        line: 250
      },
      "22": {
        loc: {
          start: {
            line: 251,
            column: 94
          },
          end: {
            line: 251,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 94
          },
          end: {
            line: 251,
            column: 109
          }
        }, {
          start: {
            line: 251,
            column: 113
          },
          end: {
            line: 251,
            column: 120
          }
        }],
        line: 251
      },
      "23": {
        loc: {
          start: {
            line: 255,
            column: 43
          },
          end: {
            line: 255,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 43
          },
          end: {
            line: 255,
            column: 59
          }
        }, {
          start: {
            line: 255,
            column: 63
          },
          end: {
            line: 255,
            column: 65
          }
        }],
        line: 255
      },
      "24": {
        loc: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "25": {
        loc: {
          start: {
            line: 266,
            column: 35
          },
          end: {
            line: 266,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 266,
            column: 44
          },
          end: {
            line: 266,
            column: 46
          }
        }],
        line: 266
      },
      "26": {
        loc: {
          start: {
            line: 269,
            column: 51
          },
          end: {
            line: 269,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 51
          },
          end: {
            line: 269,
            column: 63
          }
        }, {
          start: {
            line: 269,
            column: 67
          },
          end: {
            line: 269,
            column: 69
          }
        }],
        line: 269
      },
      "27": {
        loc: {
          start: {
            line: 272,
            column: 80
          },
          end: {
            line: 272,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 272,
            column: 80
          },
          end: {
            line: 272,
            column: 91
          }
        }, {
          start: {
            line: 272,
            column: 95
          },
          end: {
            line: 272,
            column: 97
          }
        }],
        line: 272
      },
      "28": {
        loc: {
          start: {
            line: 273,
            column: 89
          },
          end: {
            line: 273,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 89
          },
          end: {
            line: 273,
            column: 99
          }
        }, {
          start: {
            line: 273,
            column: 103
          },
          end: {
            line: 273,
            column: 105
          }
        }],
        line: 273
      },
      "29": {
        loc: {
          start: {
            line: 274,
            column: 144
          },
          end: {
            line: 274,
            column: 160
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 144
          },
          end: {
            line: 274,
            column: 154
          }
        }, {
          start: {
            line: 274,
            column: 158
          },
          end: {
            line: 274,
            column: 160
          }
        }],
        line: 274
      },
      "30": {
        loc: {
          start: {
            line: 275,
            column: 66
          },
          end: {
            line: 275,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 66
          },
          end: {
            line: 275,
            column: 76
          }
        }, {
          start: {
            line: 275,
            column: 80
          },
          end: {
            line: 275,
            column: 82
          }
        }],
        line: 275
      },
      "31": {
        loc: {
          start: {
            line: 275,
            column: 84
          },
          end: {
            line: 275,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 84
          },
          end: {
            line: 275,
            column: 97
          }
        }, {
          start: {
            line: 275,
            column: 101
          },
          end: {
            line: 275,
            column: 103
          }
        }],
        line: 275
      },
      "32": {
        loc: {
          start: {
            line: 276,
            column: 120
          },
          end: {
            line: 276,
            column: 137
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 120
          },
          end: {
            line: 276,
            column: 131
          }
        }, {
          start: {
            line: 276,
            column: 135
          },
          end: {
            line: 276,
            column: 137
          }
        }],
        line: 276
      },
      "33": {
        loc: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "34": {
        loc: {
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 333,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 333,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "35": {
        loc: {
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 302,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 12
          },
          end: {
            line: 302,
            column: 41
          }
        }, {
          start: {
            line: 302,
            column: 45
          },
          end: {
            line: 302,
            column: 71
          }
        }],
        line: 302
      },
      "36": {
        loc: {
          start: {
            line: 329,
            column: 10
          },
          end: {
            line: 331,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 10
          },
          end: {
            line: 331,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "37": {
        loc: {
          start: {
            line: 370,
            column: 6
          },
          end: {
            line: 382,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 6
          },
          end: {
            line: 382,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "38": {
        loc: {
          start: {
            line: 411,
            column: 20
          },
          end: {
            line: 411,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 411,
            column: 20
          },
          end: {
            line: 411,
            column: 45
          }
        }, {
          start: {
            line: 411,
            column: 49
          },
          end: {
            line: 411,
            column: 65
          }
        }],
        line: 411
      },
      "39": {
        loc: {
          start: {
            line: 437,
            column: 43
          },
          end: {
            line: 437,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 437,
            column: 52
          },
          end: {
            line: 437,
            column: 58
          }
        }],
        line: 437
      },
      "40": {
        loc: {
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        }, {
          start: {
            line: 463,
            column: 15
          },
          end: {
            line: 466,
            column: 9
          }
        }],
        line: 453
      },
      "41": {
        loc: {
          start: {
            line: 455,
            column: 10
          },
          end: {
            line: 462,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 10
          },
          end: {
            line: 462,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "42": {
        loc: {
          start: {
            line: 463,
            column: 15
          },
          end: {
            line: 466,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 15
          },
          end: {
            line: 466,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 463
      },
      "43": {
        loc: {
          start: {
            line: 463,
            column: 19
          },
          end: {
            line: 463,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 463,
            column: 19
          },
          end: {
            line: 463,
            column: 38
          }
        }, {
          start: {
            line: 463,
            column: 42
          },
          end: {
            line: 463,
            column: 79
          }
        }],
        line: 463
      },
      "44": {
        loc: {
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        }, {
          start: {
            line: 502,
            column: 15
          },
          end: {
            line: 505,
            column: 9
          }
        }],
        line: 495
      },
      "45": {
        loc: {
          start: {
            line: 502,
            column: 15
          },
          end: {
            line: 505,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 15
          },
          end: {
            line: 505,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      },
      "46": {
        loc: {
          start: {
            line: 519,
            column: 39
          },
          end: {
            line: 519,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 519,
            column: 49
          },
          end: {
            line: 519,
            column: 51
          }
        }],
        line: 519
      },
      "47": {
        loc: {
          start: {
            line: 524,
            column: 6
          },
          end: {
            line: 560,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 6
          },
          end: {
            line: 560,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      },
      "48": {
        loc: {
          start: {
            line: 574,
            column: 8
          },
          end: {
            line: 587,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 574,
            column: 8
          },
          end: {
            line: 587,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 574
      },
      "49": {
        loc: {
          start: {
            line: 615,
            column: 4
          },
          end: {
            line: 617,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 615,
            column: 4
          },
          end: {
            line: 617,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 615
      },
      "50": {
        loc: {
          start: {
            line: 629,
            column: 8
          },
          end: {
            line: 639,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 629,
            column: 8
          },
          end: {
            line: 639,
            column: 9
          }
        }, {
          start: {
            line: 631,
            column: 15
          },
          end: {
            line: 639,
            column: 9
          }
        }],
        line: 629
      },
      "51": {
        loc: {
          start: {
            line: 631,
            column: 15
          },
          end: {
            line: 639,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 631,
            column: 15
          },
          end: {
            line: 639,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 631
      },
      "52": {
        loc: {
          start: {
            line: 631,
            column: 19
          },
          end: {
            line: 631,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 631,
            column: 19
          },
          end: {
            line: 631,
            column: 67
          }
        }, {
          start: {
            line: 631,
            column: 71
          },
          end: {
            line: 631,
            column: 110
          }
        }],
        line: 631
      },
      "53": {
        loc: {
          start: {
            line: 669,
            column: 4
          },
          end: {
            line: 671,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 669,
            column: 4
          },
          end: {
            line: 671,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 669
      },
      "54": {
        loc: {
          start: {
            line: 678,
            column: 11
          },
          end: {
            line: 678,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 678,
            column: 24
          },
          end: {
            line: 678,
            column: 40
          }
        }, {
          start: {
            line: 678,
            column: 43
          },
          end: {
            line: 678,
            column: 54
          }
        }],
        line: 678
      },
      "55": {
        loc: {
          start: {
            line: 696,
            column: 4
          },
          end: {
            line: 699,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 696,
            column: 4
          },
          end: {
            line: 699,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 696
      },
      "56": {
        loc: {
          start: {
            line: 703,
            column: 6
          },
          end: {
            line: 705,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 703,
            column: 6
          },
          end: {
            line: 705,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 703
      },
      "57": {
        loc: {
          start: {
            line: 703,
            column: 10
          },
          end: {
            line: 703,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 703,
            column: 10
          },
          end: {
            line: 703,
            column: 28
          }
        }, {
          start: {
            line: 703,
            column: 32
          },
          end: {
            line: 703,
            column: 58
          }
        }],
        line: 703
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e681e00f15842b9ed248918fb642a4af6fe735a1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xpdpcyfa2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xpdpcyfa2();
const {
  spawn,
  exec
} =
/* istanbul ignore next */
(cov_1xpdpcyfa2().s[0]++, require('child_process'));
const {
  promisify
} =
/* istanbul ignore next */
(cov_1xpdpcyfa2().s[1]++, require('util'));
const {
  EventEmitter
} =
/* istanbul ignore next */
(cov_1xpdpcyfa2().s[2]++, require('events'));
const fs =
/* istanbul ignore next */
(cov_1xpdpcyfa2().s[3]++, require('fs').promises);
const path =
/* istanbul ignore next */
(cov_1xpdpcyfa2().s[4]++, require('path'));
const execAsync =
/* istanbul ignore next */
(cov_1xpdpcyfa2().s[5]++, promisify(exec));
class MCPCoordinator extends EventEmitter {
  constructor(options =
  /* istanbul ignore next */
  (cov_1xpdpcyfa2().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[0]++;
    cov_1xpdpcyfa2().s[6]++;
    super();
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[7]++;
    this.networkFsWrapper = options.networkFsWrapper;
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[8]++;
    this.githubWrapper = options.githubWrapper;
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[9]++;
    this.timeout =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[1][0]++, options.timeout) ||
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[1][1]++, 30000);
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[10]++;
    this.logger = options.logger;
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[11]++;
    this.connections = new Map();
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[12]++;
    this.healthCheckInterval =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[2][0]++, options.healthCheckInterval) ||
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[2][1]++, 60000); // 1 minute
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[13]++;
    this.maxRetries =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[3][0]++, options.maxRetries) ||
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[3][1]++, 3);
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[14]++;
    this.connectionStates = {
      DISCONNECTED: 'disconnected',
      CONNECTING: 'connecting',
      CONNECTED: 'connected',
      ERROR: 'error'
    };
  }
  async initialize() {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[1]++;
    cov_1xpdpcyfa2().s[15]++;
    try {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[16]++;
      this.logger?.info('Initializing MCP coordinator');
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[17]++;
      await this.initializeConnection('networkFs', this.networkFsWrapper);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[18]++;
      await this.initializeConnection('github', this.githubWrapper);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[19]++;
      this.startHealthChecks();
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[20]++;
      this.logger?.info('MCP coordinator initialized successfully');
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[21]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[22]++;
      this.logger?.error('Failed to initialize MCP coordinator', {
        error: error.message,
        stack: error.stack
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[23]++;
      throw error;
    }
  }
  async initializeConnection(name, wrapperPath) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[2]++;
    cov_1xpdpcyfa2().s[24]++;
    if (!wrapperPath) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().b[4][0]++;
      cov_1xpdpcyfa2().s[25]++;
      this.logger?.warn(`No wrapper path provided for ${name}, skipping initialization`);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[26]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1xpdpcyfa2().b[4][1]++;
    }
    cov_1xpdpcyfa2().s[27]++;
    try {
      const exists =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[28]++, await fs.access(wrapperPath).then(() => {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().f[3]++;
        cov_1xpdpcyfa2().s[29]++;
        return true;
      }).catch(() => {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().f[4]++;
        cov_1xpdpcyfa2().s[30]++;
        return false;
      }));
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[31]++;
      if (!exists) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().b[5][0]++;
        cov_1xpdpcyfa2().s[32]++;
        throw new Error(`Wrapper script not found: ${wrapperPath}`);
      } else
      /* istanbul ignore next */
      {
        cov_1xpdpcyfa2().b[5][1]++;
      }
      const connection =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[33]++, {
        name,
        wrapperPath,
        state: this.connectionStates.DISCONNECTED,
        lastHealthCheck: null,
        lastError: null,
        retryCount: 0,
        process: null
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[34]++;
      this.connections.set(name, connection);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[35]++;
      await this.testConnection(name);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[36]++;
      this.logger?.info(`MCP connection initialized`, {
        name,
        wrapperPath
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[37]++;
      this.logger?.error(`Failed to initialize MCP connection`, {
        name,
        wrapperPath,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[38]++;
      this.connections.set(name, {
        name,
        wrapperPath,
        state: this.connectionStates.ERROR,
        lastError: error.message,
        retryCount: 0
      });
    }
  }
  async testConnection(name) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[5]++;
    const connection =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[39]++, this.connections.get(name));
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[40]++;
    if (!connection) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().b[6][0]++;
      cov_1xpdpcyfa2().s[41]++;
      throw new Error(`Connection ${name} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_1xpdpcyfa2().b[6][1]++;
    }
    cov_1xpdpcyfa2().s[42]++;
    connection.state = this.connectionStates.CONNECTING;
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[43]++;
    try {
      const testCommand =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[44]++, this.buildTestCommand(name));
      const result =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[45]++, await this.executeCommand(name, testCommand, {
        timeout: 10000
      }));
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[46]++;
      connection.state = this.connectionStates.CONNECTED;
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[47]++;
      connection.lastHealthCheck = new Date().toISOString();
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[48]++;
      connection.lastError = null;
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[49]++;
      connection.retryCount = 0;
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[50]++;
      this.logger?.debug(`MCP connection test successful`, {
        name
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[51]++;
      this.emit('connection_established', name);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[52]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[53]++;
      connection.state = this.connectionStates.ERROR;
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[54]++;
      connection.lastError = error.message;
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[55]++;
      connection.retryCount++;
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[56]++;
      this.logger?.error(`MCP connection test failed`, {
        name,
        error: error.message,
        retryCount: connection.retryCount
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[57]++;
      this.emit('connection_failed', {
        name,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[58]++;
      throw error;
    }
  }
  buildTestCommand(name) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[6]++;
    cov_1xpdpcyfa2().s[59]++;
    switch (name) {
      case 'networkFs':
        /* istanbul ignore next */
        cov_1xpdpcyfa2().b[7][0]++;
        cov_1xpdpcyfa2().s[60]++;
        return ['list_allowed_directories'];
      case 'github':
        /* istanbul ignore next */
        cov_1xpdpcyfa2().b[7][1]++;
        cov_1xpdpcyfa2().s[61]++;
        return ['get_me'];
      default:
        /* istanbul ignore next */
        cov_1xpdpcyfa2().b[7][2]++;
        cov_1xpdpcyfa2().s[62]++;
        return ['help'];
    }
  }
  async executeCommand(connectionName, command, options =
  /* istanbul ignore next */
  (cov_1xpdpcyfa2().b[8][0]++, {})) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[7]++;
    const connection =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[63]++, this.connections.get(connectionName));
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[64]++;
    if (!connection) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().b[9][0]++;
      cov_1xpdpcyfa2().s[65]++;
      throw new Error(`Connection ${connectionName} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_1xpdpcyfa2().b[9][1]++;
    }
    cov_1xpdpcyfa2().s[66]++;
    if (connection.state !== this.connectionStates.CONNECTED) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().b[10][0]++;
      cov_1xpdpcyfa2().s[67]++;
      await this.testConnection(connectionName);
    } else
    /* istanbul ignore next */
    {
      cov_1xpdpcyfa2().b[10][1]++;
    }
    const timeout =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[68]++,
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[11][0]++, options.timeout) ||
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[11][1]++, this.timeout));
    const commandId =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[69]++, `${connectionName}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`);
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[70]++;
    this.logger?.debug('Executing MCP command', {
      connectionName,
      command: Array.isArray(command) ?
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[12][0]++, command.join(' ')) :
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[12][1]++, command),
      commandId,
      timeout
    });
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[71]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[72]++, await this.runCommand(connection, command, timeout, commandId));
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[73]++;
      this.logger?.debug('MCP command completed successfully', {
        connectionName,
        commandId,
        duration: result.duration
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[74]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[75]++;
      this.logger?.error('MCP command failed', {
        connectionName,
        commandId,
        error: error.message,
        command: Array.isArray(command) ?
        /* istanbul ignore next */
        (cov_1xpdpcyfa2().b[13][0]++, command.join(' ')) :
        /* istanbul ignore next */
        (cov_1xpdpcyfa2().b[13][1]++, command)
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[76]++;
      connection.lastError = error.message;
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[77]++;
      if (
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[15][0]++, error.message.includes('timeout')) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[15][1]++, error.message.includes('ECONNRESET'))) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().b[14][0]++;
        cov_1xpdpcyfa2().s[78]++;
        connection.state = this.connectionStates.ERROR;
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[79]++;
        this.emit('connection_lost', connectionName);
      } else
      /* istanbul ignore next */
      {
        cov_1xpdpcyfa2().b[14][1]++;
      }
      cov_1xpdpcyfa2().s[80]++;
      throw error;
    }
  }
  async runCommand(connection, command, timeout, commandId) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[8]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[81]++, Date.now());
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[82]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().f[9]++;
      const commandArgs =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[83]++, Array.isArray(command) ?
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[16][0]++, command) :
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[16][1]++, [command]));
      const process =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[84]++, spawn('bash', [connection.wrapperPath, ...commandArgs], {
        stdio: ['pipe', 'pipe', 'pipe'],
        timeout
      }));
      let stdout =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[85]++, '');
      let stderr =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[86]++, '');
      let timeoutId;

      // Set up timeout
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[87]++;
      timeoutId = setTimeout(() => {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().f[10]++;
        cov_1xpdpcyfa2().s[88]++;
        process.kill('SIGTERM');
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[89]++;
        reject(new Error(`Command timeout after ${timeout}ms`));
      }, timeout);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[90]++;
      process.stdout.on('data', data => {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().f[11]++;
        cov_1xpdpcyfa2().s[91]++;
        stdout += data.toString();
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[92]++;
      process.stderr.on('data', data => {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().f[12]++;
        cov_1xpdpcyfa2().s[93]++;
        stderr += data.toString();
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[94]++;
      process.on('close', code => {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().f[13]++;
        cov_1xpdpcyfa2().s[95]++;
        clearTimeout(timeoutId);
        const duration =
        /* istanbul ignore next */
        (cov_1xpdpcyfa2().s[96]++, Date.now() - startTime);
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[97]++;
        if (code === 0) {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().b[17][0]++;
          cov_1xpdpcyfa2().s[98]++;
          resolve({
            stdout: stdout.trim(),
            stderr: stderr.trim(),
            exitCode: code,
            duration,
            commandId
          });
        } else {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().b[17][1]++;
          cov_1xpdpcyfa2().s[99]++;
          reject(new Error(`Command failed with exit code ${code}: ${
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().b[18][0]++, stderr) ||
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().b[18][1]++, stdout)}`));
        }
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[100]++;
      process.on('error', error => {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().f[14]++;
        cov_1xpdpcyfa2().s[101]++;
        clearTimeout(timeoutId);
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[102]++;
        reject(new Error(`Process error: ${error.message}`));
      });
    });
  }
  async networkFsOperation(operation, params =
  /* istanbul ignore next */
  (cov_1xpdpcyfa2().b[19][0]++, {})) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[15]++;
    const commands =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[103]++, {
      'list_directory': ['list_network_directory', params.shareName,
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[20][0]++, params.path) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[20][1]++, '')],
      'read_file': ['read_network_file', params.shareName, params.filePath,
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[21][0]++, params.encoding) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[21][1]++, 'utf-8')],
      'write_file': ['write_network_file', params.shareName, params.filePath, params.content,
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[22][0]++, params.encoding) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[22][1]++, 'utf-8')],
      'delete_file': ['delete_network_file', params.shareName, params.filePath],
      'create_directory': ['create_network_directory', params.shareName, params.directoryPath],
      'get_file_info': ['get_network_file_info', params.shareName, params.path],
      'get_share_info': ['get_share_info',
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[23][0]++, params.shareName) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[23][1]++, '')]
    });
    const command =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[104]++, commands[operation]);
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[105]++;
    if (!command) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().b[24][0]++;
      cov_1xpdpcyfa2().s[106]++;
      throw new Error(`Unknown network FS operation: ${operation}`);
    } else
    /* istanbul ignore next */
    {
      cov_1xpdpcyfa2().b[24][1]++;
    }
    cov_1xpdpcyfa2().s[107]++;
    return await this.executeCommand('networkFs', command.filter(Boolean));
  }
  async githubOperation(operation, params =
  /* istanbul ignore next */
  (cov_1xpdpcyfa2().b[25][0]++, {})) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[16]++;
    const commands =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[108]++, {
      'get_me': ['get_me'],
      'list_repositories': ['search_repositories',
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[26][0]++, params.query) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[26][1]++, '')],
      'get_repository': ['get_repository', params.owner, params.repo],
      'list_issues': ['list_issues', params.owner, params.repo],
      'create_issue': ['create_issue', params.owner, params.repo, params.title,
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[27][0]++, params.body) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[27][1]++, '')],
      'get_file_contents': ['get_file_contents', params.owner, params.repo, params.path,
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[28][0]++, params.ref) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[28][1]++, '')],
      'create_or_update_file': ['create_or_update_file', params.owner, params.repo, params.path, params.content, params.message, params.branch,
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[29][0]++, params.sha) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[29][1]++, '')],
      'list_commits': ['list_commits', params.owner, params.repo,
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[30][0]++, params.sha) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[30][1]++, ''),
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[31][0]++, params.author) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[31][1]++, '')],
      'create_pull_request': ['create_pull_request', params.owner, params.repo, params.title, params.head, params.base,
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[32][0]++, params.body) ||
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[32][1]++, '')]
    });
    const command =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[109]++, commands[operation]);
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[110]++;
    if (!command) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().b[33][0]++;
      cov_1xpdpcyfa2().s[111]++;
      throw new Error(`Unknown GitHub operation: ${operation}`);
    } else
    /* istanbul ignore next */
    {
      cov_1xpdpcyfa2().b[33][1]++;
    }
    cov_1xpdpcyfa2().s[112]++;
    return await this.executeCommand('github', command.filter(Boolean));
  }
  async deploymentOperations(deploymentParams) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[17]++;
    const operations =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[113]++, []);
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[114]++;
    try {
      // Import backup manager if needed
      const {
        BackupManager
      } =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[115]++, require('../backup/backup-manager'));

      // 1. Create pre-deployment backup if backup manager is available
      let preDeploymentBackup =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[116]++, null);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[117]++;
      if (deploymentParams.createBackup !== false) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().b[34][0]++;
        cov_1xpdpcyfa2().s[118]++;
        try {
          const backupManager =
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().s[119]++, new BackupManager());
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[120]++;
          await backupManager.initialize();
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[121]++;
          preDeploymentBackup = await backupManager.createPreDeploymentBackup(
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().b[35][0]++, deploymentParams.deploymentId) ||
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().b[35][1]++, `deployment-${Date.now()}`));
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[122]++;
          operations.push({
            operation: 'create_pre_deployment_backup',
            result: 'success',
            backupId: preDeploymentBackup.backupId,
            backupPath: preDeploymentBackup.path
          });
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[123]++;
          this.logger?.info('Pre-deployment backup created', {
            backupId: preDeploymentBackup.backupId,
            size: preDeploymentBackup.size
          });
        } catch (backupError) {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[124]++;
          this.logger?.warn('Failed to create pre-deployment backup', {
            error: backupError.message
          });
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[125]++;
          operations.push({
            operation: 'create_pre_deployment_backup',
            result: 'failed',
            error: backupError.message
          });

          // Continue with deployment unless backup is required
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[126]++;
          if (deploymentParams.requireBackup) {
            /* istanbul ignore next */
            cov_1xpdpcyfa2().b[36][0]++;
            cov_1xpdpcyfa2().s[127]++;
            throw new Error(`Pre-deployment backup failed: ${backupError.message}`);
          } else
          /* istanbul ignore next */
          {
            cov_1xpdpcyfa2().b[36][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xpdpcyfa2().b[34][1]++;
      }

      // 2. Get current configuration from target server
      cov_1xpdpcyfa2().s[128]++;
      this.logger?.info('Fetching current configuration', {
        repository: deploymentParams.repository
      });
      const currentConfig =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[129]++, await this.networkFsOperation('list_directory', {
        shareName: 'home-assistant',
        path: '/config'
      }));
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[130]++;
      operations.push({
        operation: 'fetch_current_config',
        result: 'success',
        data: currentConfig
      });

      // 3. Get latest changes from GitHub
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[131]++;
      this.logger?.info('Fetching latest changes from GitHub', {
        repository: deploymentParams.repository,
        branch: deploymentParams.branch
      });
      const [owner, repo] =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[132]++, deploymentParams.repository.split('/'));
      const latestCommits =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[133]++, await this.githubOperation('list_commits', {
        owner,
        repo,
        sha: deploymentParams.branch
      }));
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[134]++;
      operations.push({
        operation: 'fetch_github_changes',
        result: 'success',
        data: latestCommits
      });

      // 4. Create legacy backup for compatibility (if no backup manager)
      let legacyBackupPath =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[135]++, null);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[136]++;
      if (!preDeploymentBackup) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().b[37][0]++;
        cov_1xpdpcyfa2().s[137]++;
        legacyBackupPath = `/config/backups/backup-${Date.now()}`;
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[138]++;
        await this.networkFsOperation('create_directory', {
          shareName: 'home-assistant',
          directoryPath: legacyBackupPath
        });
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[139]++;
        operations.push({
          operation: 'create_legacy_backup',
          result: 'success',
          backupPath: legacyBackupPath
        });
      } else
      /* istanbul ignore next */
      {
        cov_1xpdpcyfa2().b[37][1]++;
      }

      // 5. Download and apply new configuration files
      const configFiles =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[140]++, await this.getConfigurationFiles(owner, repo, deploymentParams.branch));
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[141]++;
      for (const file of configFiles) {
        const fileContent =
        /* istanbul ignore next */
        (cov_1xpdpcyfa2().s[142]++, await this.githubOperation('get_file_contents', {
          owner,
          repo,
          path: file.path,
          ref: deploymentParams.branch
        }));
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[143]++;
        await this.networkFsOperation('write_file', {
          shareName: 'home-assistant',
          filePath: `/config/${file.path}`,
          content: fileContent.stdout
        });
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[144]++;
        operations.push({
          operation: 'deploy_file',
          result: 'success',
          file: file.path
        });
      }
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[145]++;
      return {
        success: true,
        operations,
        backupPath:
        /* istanbul ignore next */
        (cov_1xpdpcyfa2().b[38][0]++, preDeploymentBackup?.path) ||
        /* istanbul ignore next */
        (cov_1xpdpcyfa2().b[38][1]++, legacyBackupPath),
        backupId: preDeploymentBackup?.backupId,
        deployedFiles: configFiles.length,
        preDeploymentBackup: preDeploymentBackup
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[146]++;
      this.logger?.error('Deployment operations failed', {
        error: error.message,
        operations: operations.length
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[147]++;
      operations.push({
        operation: 'deployment',
        result: 'failed',
        error: error.message
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[148]++;
      return {
        success: false,
        error: error.message,
        operations
      };
    }
  }
  async getConfigurationFiles(owner, repo, branch =
  /* istanbul ignore next */
  (cov_1xpdpcyfa2().b[39][0]++, 'main')) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[18]++;
    cov_1xpdpcyfa2().s[149]++;
    try {
      const repoContents =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[150]++, await this.githubOperation('get_file_contents', {
        owner,
        repo,
        path: '',
        ref: branch
      }));
      const contents =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[151]++, JSON.parse(repoContents.stdout));
      const configFiles =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[152]++, []);
      const configExtensions =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[153]++, ['.yaml', '.yml', '.json']);
      const configDirectories =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[154]++, ['packages', 'lovelace', 'integrations']);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[155]++;
      for (const item of contents) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[156]++;
        if (item.type === 'file') {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().b[40][0]++;
          const hasConfigExtension =
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().s[157]++, configExtensions.some(ext => {
            /* istanbul ignore next */
            cov_1xpdpcyfa2().f[19]++;
            cov_1xpdpcyfa2().s[158]++;
            return item.name.endsWith(ext);
          }));
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[159]++;
          if (hasConfigExtension) {
            /* istanbul ignore next */
            cov_1xpdpcyfa2().b[41][0]++;
            cov_1xpdpcyfa2().s[160]++;
            configFiles.push({
              path: item.path,
              name: item.name,
              size: item.size,
              sha: item.sha
            });
          } else
          /* istanbul ignore next */
          {
            cov_1xpdpcyfa2().b[41][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().b[40][1]++;
          cov_1xpdpcyfa2().s[161]++;
          if (
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().b[43][0]++, item.type === 'dir') &&
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().b[43][1]++, configDirectories.includes(item.name))) {
            /* istanbul ignore next */
            cov_1xpdpcyfa2().b[42][0]++;
            const dirFiles =
            /* istanbul ignore next */
            (cov_1xpdpcyfa2().s[162]++, await this.getDirectoryFiles(owner, repo, item.path, branch));
            /* istanbul ignore next */
            cov_1xpdpcyfa2().s[163]++;
            configFiles.push(...dirFiles);
          } else
          /* istanbul ignore next */
          {
            cov_1xpdpcyfa2().b[42][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[164]++;
      return configFiles;
    } catch (error) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[165]++;
      this.logger?.error('Failed to get configuration files', {
        owner,
        repo,
        branch,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[166]++;
      throw error;
    }
  }
  async getDirectoryFiles(owner, repo, dirPath, branch) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[20]++;
    cov_1xpdpcyfa2().s[167]++;
    try {
      const dirContents =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[168]++, await this.githubOperation('get_file_contents', {
        owner,
        repo,
        path: dirPath,
        ref: branch
      }));
      const contents =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[169]++, JSON.parse(dirContents.stdout));
      const files =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[170]++, []);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[171]++;
      for (const item of contents) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[172]++;
        if (item.type === 'file') {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().b[44][0]++;
          cov_1xpdpcyfa2().s[173]++;
          files.push({
            path: item.path,
            name: item.name,
            size: item.size,
            sha: item.sha
          });
        } else {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().b[44][1]++;
          cov_1xpdpcyfa2().s[174]++;
          if (item.type === 'dir') {
            /* istanbul ignore next */
            cov_1xpdpcyfa2().b[45][0]++;
            const subFiles =
            /* istanbul ignore next */
            (cov_1xpdpcyfa2().s[175]++, await this.getDirectoryFiles(owner, repo, item.path, branch));
            /* istanbul ignore next */
            cov_1xpdpcyfa2().s[176]++;
            files.push(...subFiles);
          } else
          /* istanbul ignore next */
          {
            cov_1xpdpcyfa2().b[45][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[177]++;
      return files;
    } catch (error) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[178]++;
      this.logger?.error('Failed to get directory files', {
        dirPath,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[179]++;
      return [];
    }
  }
  async rollbackOperations(backupPath, options =
  /* istanbul ignore next */
  (cov_1xpdpcyfa2().b[46][0]++, {})) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[21]++;
    cov_1xpdpcyfa2().s[180]++;
    try {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[181]++;
      this.logger?.info('Starting rollback operations', {
        backupPath,
        options
      });

      // Try to use BackupManager for rollback if deploymentId is provided
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[182]++;
      if (options.deploymentId) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().b[47][0]++;
        cov_1xpdpcyfa2().s[183]++;
        try {
          const {
            RecoveryService
          } =
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().s[184]++, require('../backup/recovery-service'));
          const recoveryService =
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().s[185]++, new RecoveryService());
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[186]++;
          await recoveryService.initialize();
          const rollbackResult =
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().s[187]++, await recoveryService.performControlledRollback(options.deploymentId, {
            validateBefore: options.validateBefore !== false,
            createBackupBefore: options.createBackupBefore !== false,
            healthCheckAfter: options.healthCheckAfter !== false
          }));
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[188]++;
          this.logger?.info('Rollback completed using RecoveryService', {
            deploymentId: options.deploymentId,
            backupId: rollbackResult.rolledBackToBackup
          });
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[189]++;
          return {
            success: true,
            method: 'recovery-service',
            deploymentId: options.deploymentId,
            backupId: rollbackResult.rolledBackToBackup,
            restoredFiles: rollbackResult.restoredFiles,
            restoredSize: rollbackResult.restoredSize,
            currentStateBackup: rollbackResult.currentStateBackup
          };
        } catch (recoveryError) {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[190]++;
          this.logger?.warn('RecoveryService rollback failed, falling back to legacy method', {
            error: recoveryError.message
          });
          // Fall through to legacy rollback method
        }
      } else
      /* istanbul ignore next */
      {
        cov_1xpdpcyfa2().b[47][1]++;
      }

      // Legacy rollback method for backward compatibility
      cov_1xpdpcyfa2().s[191]++;
      this.logger?.info('Using legacy rollback method');

      // List backup files
      const backupFiles =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[192]++, await this.networkFsOperation('list_directory', {
        shareName: 'home-assistant',
        path: backupPath
      }));

      // Restore each file
      const restoredFiles =
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().s[193]++, []);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[194]++;
      for (const file of JSON.parse(backupFiles.stdout)) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[195]++;
        if (file.type === 'file') {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().b[48][0]++;
          const fileContent =
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().s[196]++, await this.networkFsOperation('read_file', {
            shareName: 'home-assistant',
            filePath: `${backupPath}/${file.name}`
          }));
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[197]++;
          await this.networkFsOperation('write_file', {
            shareName: 'home-assistant',
            filePath: `/config/${file.name}`,
            content: fileContent.stdout
          });
          /* istanbul ignore next */
          cov_1xpdpcyfa2().s[198]++;
          restoredFiles.push(file.name);
        } else
        /* istanbul ignore next */
        {
          cov_1xpdpcyfa2().b[48][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[199]++;
      return {
        success: true,
        method: 'legacy',
        restoredFiles: restoredFiles.length,
        files: restoredFiles,
        backupPath
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[200]++;
      this.logger?.error('Rollback operations failed', {
        backupPath,
        options,
        error: error.message
      });
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[201]++;
      return {
        success: false,
        error: error.message,
        backupPath,
        method: 'failed'
      };
    }
  }
  startHealthChecks() {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[22]++;
    cov_1xpdpcyfa2().s[202]++;
    if (this.healthCheckTimer) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().b[49][0]++;
      cov_1xpdpcyfa2().s[203]++;
      clearInterval(this.healthCheckTimer);
    } else
    /* istanbul ignore next */
    {
      cov_1xpdpcyfa2().b[49][1]++;
    }
    cov_1xpdpcyfa2().s[204]++;
    this.healthCheckTimer = setInterval(async () => {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().f[23]++;
      cov_1xpdpcyfa2().s[205]++;
      await this.performHealthChecks();
    }, this.healthCheckInterval);
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[206]++;
    this.logger?.debug('Health checks started', {
      interval: this.healthCheckInterval
    });
  }
  async performHealthChecks() {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[24]++;
    cov_1xpdpcyfa2().s[207]++;
    for (const [name, connection] of this.connections) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[208]++;
      try {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[209]++;
        if (connection.state === this.connectionStates.CONNECTED) {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().b[50][0]++;
          cov_1xpdpcyfa2().s[210]++;
          await this.testConnection(name);
        } else {
          /* istanbul ignore next */
          cov_1xpdpcyfa2().b[50][1]++;
          cov_1xpdpcyfa2().s[211]++;
          if (
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().b[52][0]++, connection.state === this.connectionStates.ERROR) &&
          /* istanbul ignore next */
          (cov_1xpdpcyfa2().b[52][1]++, connection.retryCount < this.maxRetries)) {
            /* istanbul ignore next */
            cov_1xpdpcyfa2().b[51][0]++;
            cov_1xpdpcyfa2().s[212]++;
            this.logger?.info('Attempting to reconnect MCP connection', {
              name,
              retryCount: connection.retryCount,
              maxRetries: this.maxRetries
            });
            /* istanbul ignore next */
            cov_1xpdpcyfa2().s[213]++;
            await this.testConnection(name);
          } else
          /* istanbul ignore next */
          {
            cov_1xpdpcyfa2().b[51][1]++;
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().s[214]++;
        this.logger?.debug('Health check failed', {
          name,
          error: error.message
        });
      }
    }
  }
  async checkHealth() {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[25]++;
    const health =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[215]++, {
      status: 'healthy',
      connections: {}
    });
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[216]++;
    for (const [name, connection] of this.connections) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[217]++;
      health.connections[name] = {
        status: connection.state,
        lastHealthCheck: connection.lastHealthCheck,
        lastError: connection.lastError,
        retryCount: connection.retryCount,
        wrapperPath: connection.wrapperPath
      };
    }
    const hasUnhealthyConnections =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[218]++, Object.values(health.connections).some(conn => {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().f[26]++;
      cov_1xpdpcyfa2().s[219]++;
      return conn.status === this.connectionStates.ERROR;
    }));
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[220]++;
    if (hasUnhealthyConnections) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().b[53][0]++;
      cov_1xpdpcyfa2().s[221]++;
      health.status = 'degraded';
    } else
    /* istanbul ignore next */
    {
      cov_1xpdpcyfa2().b[53][1]++;
    }
    cov_1xpdpcyfa2().s[222]++;
    return health;
  }
  getConnectionStatus(name) {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[27]++;
    const connection =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[223]++, this.connections.get(name));
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[224]++;
    return connection ?
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[54][0]++, connection.state) :
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().b[54][1]++, 'not_found');
  }
  getAllConnections() {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[28]++;
    const connections =
    /* istanbul ignore next */
    (cov_1xpdpcyfa2().s[225]++, {});
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[226]++;
    for (const [name, connection] of this.connections) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[227]++;
      connections[name] = {
        name: connection.name,
        state: connection.state,
        lastHealthCheck: connection.lastHealthCheck,
        lastError: connection.lastError,
        retryCount: connection.retryCount
      };
    }
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[228]++;
    return connections;
  }
  async cleanup() {
    /* istanbul ignore next */
    cov_1xpdpcyfa2().f[29]++;
    cov_1xpdpcyfa2().s[229]++;
    if (this.healthCheckTimer) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().b[55][0]++;
      cov_1xpdpcyfa2().s[230]++;
      clearInterval(this.healthCheckTimer);
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[231]++;
      this.healthCheckTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_1xpdpcyfa2().b[55][1]++;
    }

    // Close any active processes
    cov_1xpdpcyfa2().s[232]++;
    for (const [name, connection] of this.connections) {
      /* istanbul ignore next */
      cov_1xpdpcyfa2().s[233]++;
      if (
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[57][0]++, connection.process) &&
      /* istanbul ignore next */
      (cov_1xpdpcyfa2().b[57][1]++, !connection.process.killed)) {
        /* istanbul ignore next */
        cov_1xpdpcyfa2().b[56][0]++;
        cov_1xpdpcyfa2().s[234]++;
        connection.process.kill('SIGTERM');
      } else
      /* istanbul ignore next */
      {
        cov_1xpdpcyfa2().b[56][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[235]++;
    this.connections.clear();
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[236]++;
    this.removeAllListeners();
    /* istanbul ignore next */
    cov_1xpdpcyfa2().s[237]++;
    this.logger?.info('MCP coordinator cleaned up');
  }
}
/* istanbul ignore next */
cov_1xpdpcyfa2().s[238]++;
module.exports = MCPCoordinator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXhwZHBjeWZhMiIsImFjdHVhbENvdmVyYWdlIiwic3Bhd24iLCJleGVjIiwicyIsInJlcXVpcmUiLCJwcm9taXNpZnkiLCJFdmVudEVtaXR0ZXIiLCJmcyIsInByb21pc2VzIiwicGF0aCIsImV4ZWNBc3luYyIsIk1DUENvb3JkaW5hdG9yIiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwiYiIsImYiLCJuZXR3b3JrRnNXcmFwcGVyIiwiZ2l0aHViV3JhcHBlciIsInRpbWVvdXQiLCJsb2dnZXIiLCJjb25uZWN0aW9ucyIsIk1hcCIsImhlYWx0aENoZWNrSW50ZXJ2YWwiLCJtYXhSZXRyaWVzIiwiY29ubmVjdGlvblN0YXRlcyIsIkRJU0NPTk5FQ1RFRCIsIkNPTk5FQ1RJTkciLCJDT05ORUNURUQiLCJFUlJPUiIsImluaXRpYWxpemUiLCJpbmZvIiwiaW5pdGlhbGl6ZUNvbm5lY3Rpb24iLCJzdGFydEhlYWx0aENoZWNrcyIsImVycm9yIiwibWVzc2FnZSIsInN0YWNrIiwibmFtZSIsIndyYXBwZXJQYXRoIiwid2FybiIsImV4aXN0cyIsImFjY2VzcyIsInRoZW4iLCJjYXRjaCIsIkVycm9yIiwiY29ubmVjdGlvbiIsInN0YXRlIiwibGFzdEhlYWx0aENoZWNrIiwibGFzdEVycm9yIiwicmV0cnlDb3VudCIsInByb2Nlc3MiLCJzZXQiLCJ0ZXN0Q29ubmVjdGlvbiIsImdldCIsInRlc3RDb21tYW5kIiwiYnVpbGRUZXN0Q29tbWFuZCIsInJlc3VsdCIsImV4ZWN1dGVDb21tYW5kIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiZGVidWciLCJlbWl0IiwiY29ubmVjdGlvbk5hbWUiLCJjb21tYW5kIiwiY29tbWFuZElkIiwibm93IiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9pbiIsInJ1bkNvbW1hbmQiLCJkdXJhdGlvbiIsImluY2x1ZGVzIiwic3RhcnRUaW1lIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJjb21tYW5kQXJncyIsInN0ZGlvIiwic3Rkb3V0Iiwic3RkZXJyIiwidGltZW91dElkIiwic2V0VGltZW91dCIsImtpbGwiLCJvbiIsImRhdGEiLCJjb2RlIiwiY2xlYXJUaW1lb3V0IiwidHJpbSIsImV4aXRDb2RlIiwibmV0d29ya0ZzT3BlcmF0aW9uIiwib3BlcmF0aW9uIiwicGFyYW1zIiwiY29tbWFuZHMiLCJzaGFyZU5hbWUiLCJmaWxlUGF0aCIsImVuY29kaW5nIiwiY29udGVudCIsImRpcmVjdG9yeVBhdGgiLCJmaWx0ZXIiLCJCb29sZWFuIiwiZ2l0aHViT3BlcmF0aW9uIiwicXVlcnkiLCJvd25lciIsInJlcG8iLCJ0aXRsZSIsImJvZHkiLCJyZWYiLCJicmFuY2giLCJzaGEiLCJhdXRob3IiLCJoZWFkIiwiYmFzZSIsImRlcGxveW1lbnRPcGVyYXRpb25zIiwiZGVwbG95bWVudFBhcmFtcyIsIm9wZXJhdGlvbnMiLCJCYWNrdXBNYW5hZ2VyIiwicHJlRGVwbG95bWVudEJhY2t1cCIsImNyZWF0ZUJhY2t1cCIsImJhY2t1cE1hbmFnZXIiLCJjcmVhdGVQcmVEZXBsb3ltZW50QmFja3VwIiwiZGVwbG95bWVudElkIiwicHVzaCIsImJhY2t1cElkIiwiYmFja3VwUGF0aCIsInNpemUiLCJiYWNrdXBFcnJvciIsInJlcXVpcmVCYWNrdXAiLCJyZXBvc2l0b3J5IiwiY3VycmVudENvbmZpZyIsInNwbGl0IiwibGF0ZXN0Q29tbWl0cyIsImxlZ2FjeUJhY2t1cFBhdGgiLCJjb25maWdGaWxlcyIsImdldENvbmZpZ3VyYXRpb25GaWxlcyIsImZpbGUiLCJmaWxlQ29udGVudCIsInN1Y2Nlc3MiLCJkZXBsb3llZEZpbGVzIiwibGVuZ3RoIiwicmVwb0NvbnRlbnRzIiwiY29udGVudHMiLCJKU09OIiwicGFyc2UiLCJjb25maWdFeHRlbnNpb25zIiwiY29uZmlnRGlyZWN0b3JpZXMiLCJpdGVtIiwidHlwZSIsImhhc0NvbmZpZ0V4dGVuc2lvbiIsInNvbWUiLCJleHQiLCJlbmRzV2l0aCIsImRpckZpbGVzIiwiZ2V0RGlyZWN0b3J5RmlsZXMiLCJkaXJQYXRoIiwiZGlyQ29udGVudHMiLCJmaWxlcyIsInN1YkZpbGVzIiwicm9sbGJhY2tPcGVyYXRpb25zIiwiUmVjb3ZlcnlTZXJ2aWNlIiwicmVjb3ZlcnlTZXJ2aWNlIiwicm9sbGJhY2tSZXN1bHQiLCJwZXJmb3JtQ29udHJvbGxlZFJvbGxiYWNrIiwidmFsaWRhdGVCZWZvcmUiLCJjcmVhdGVCYWNrdXBCZWZvcmUiLCJoZWFsdGhDaGVja0FmdGVyIiwicm9sbGVkQmFja1RvQmFja3VwIiwibWV0aG9kIiwicmVzdG9yZWRGaWxlcyIsInJlc3RvcmVkU2l6ZSIsImN1cnJlbnRTdGF0ZUJhY2t1cCIsInJlY292ZXJ5RXJyb3IiLCJiYWNrdXBGaWxlcyIsImhlYWx0aENoZWNrVGltZXIiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJwZXJmb3JtSGVhbHRoQ2hlY2tzIiwiaW50ZXJ2YWwiLCJjaGVja0hlYWx0aCIsImhlYWx0aCIsInN0YXR1cyIsImhhc1VuaGVhbHRoeUNvbm5lY3Rpb25zIiwiT2JqZWN0IiwidmFsdWVzIiwiY29ubiIsImdldENvbm5lY3Rpb25TdGF0dXMiLCJnZXRBbGxDb25uZWN0aW9ucyIsImNsZWFudXAiLCJraWxsZWQiLCJjbGVhciIsInJlbW92ZUFsbExpc3RlbmVycyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJtY3AtY29vcmRpbmF0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBzcGF3biwgZXhlYyB9ID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpO1xuY29uc3QgeyBwcm9taXNpZnkgfSA9IHJlcXVpcmUoJ3V0aWwnKTtcbmNvbnN0IHsgRXZlbnRFbWl0dGVyIH0gPSByZXF1aXJlKCdldmVudHMnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKS5wcm9taXNlcztcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmNvbnN0IGV4ZWNBc3luYyA9IHByb21pc2lmeShleGVjKTtcblxuY2xhc3MgTUNQQ29vcmRpbmF0b3IgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zID0ge30pIHtcbiAgICBzdXBlcigpO1xuICAgIFxuICAgIHRoaXMubmV0d29ya0ZzV3JhcHBlciA9IG9wdGlvbnMubmV0d29ya0ZzV3JhcHBlcjtcbiAgICB0aGlzLmdpdGh1YldyYXBwZXIgPSBvcHRpb25zLmdpdGh1YldyYXBwZXI7XG4gICAgdGhpcy50aW1lb3V0ID0gb3B0aW9ucy50aW1lb3V0IHx8IDMwMDAwO1xuICAgIHRoaXMubG9nZ2VyID0gb3B0aW9ucy5sb2dnZXI7XG4gICAgXG4gICAgdGhpcy5jb25uZWN0aW9ucyA9IG5ldyBNYXAoKTtcbiAgICB0aGlzLmhlYWx0aENoZWNrSW50ZXJ2YWwgPSBvcHRpb25zLmhlYWx0aENoZWNrSW50ZXJ2YWwgfHwgNjAwMDA7IC8vIDEgbWludXRlXG4gICAgdGhpcy5tYXhSZXRyaWVzID0gb3B0aW9ucy5tYXhSZXRyaWVzIHx8IDM7XG4gICAgXG4gICAgdGhpcy5jb25uZWN0aW9uU3RhdGVzID0ge1xuICAgICAgRElTQ09OTkVDVEVEOiAnZGlzY29ubmVjdGVkJyxcbiAgICAgIENPTk5FQ1RJTkc6ICdjb25uZWN0aW5nJyxcbiAgICAgIENPTk5FQ1RFRDogJ2Nvbm5lY3RlZCcsXG4gICAgICBFUlJPUjogJ2Vycm9yJ1xuICAgIH07XG4gIH1cblxuICBhc3luYyBpbml0aWFsaXplKCkge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLmxvZ2dlcj8uaW5mbygnSW5pdGlhbGl6aW5nIE1DUCBjb29yZGluYXRvcicpO1xuICAgICAgXG4gICAgICBhd2FpdCB0aGlzLmluaXRpYWxpemVDb25uZWN0aW9uKCduZXR3b3JrRnMnLCB0aGlzLm5ldHdvcmtGc1dyYXBwZXIpO1xuICAgICAgYXdhaXQgdGhpcy5pbml0aWFsaXplQ29ubmVjdGlvbignZ2l0aHViJywgdGhpcy5naXRodWJXcmFwcGVyKTtcbiAgICAgIFxuICAgICAgdGhpcy5zdGFydEhlYWx0aENoZWNrcygpO1xuICAgICAgXG4gICAgICB0aGlzLmxvZ2dlcj8uaW5mbygnTUNQIGNvb3JkaW5hdG9yIGluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseScpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5sb2dnZXI/LmVycm9yKCdGYWlsZWQgdG8gaW5pdGlhbGl6ZSBNQ1AgY29vcmRpbmF0b3InLCB7XG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBzdGFjazogZXJyb3Iuc3RhY2tcbiAgICAgIH0pO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgaW5pdGlhbGl6ZUNvbm5lY3Rpb24obmFtZSwgd3JhcHBlclBhdGgpIHtcbiAgICBpZiAoIXdyYXBwZXJQYXRoKSB7XG4gICAgICB0aGlzLmxvZ2dlcj8ud2FybihgTm8gd3JhcHBlciBwYXRoIHByb3ZpZGVkIGZvciAke25hbWV9LCBza2lwcGluZyBpbml0aWFsaXphdGlvbmApO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICB0cnkge1xuICAgICAgY29uc3QgZXhpc3RzID0gYXdhaXQgZnMuYWNjZXNzKHdyYXBwZXJQYXRoKS50aGVuKCgpID0+IHRydWUpLmNhdGNoKCgpID0+IGZhbHNlKTtcbiAgICAgIGlmICghZXhpc3RzKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgV3JhcHBlciBzY3JpcHQgbm90IGZvdW5kOiAke3dyYXBwZXJQYXRofWApO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCBjb25uZWN0aW9uID0ge1xuICAgICAgICBuYW1lLFxuICAgICAgICB3cmFwcGVyUGF0aCxcbiAgICAgICAgc3RhdGU6IHRoaXMuY29ubmVjdGlvblN0YXRlcy5ESVNDT05ORUNURUQsXG4gICAgICAgIGxhc3RIZWFsdGhDaGVjazogbnVsbCxcbiAgICAgICAgbGFzdEVycm9yOiBudWxsLFxuICAgICAgICByZXRyeUNvdW50OiAwLFxuICAgICAgICBwcm9jZXNzOiBudWxsXG4gICAgICB9O1xuICAgICAgXG4gICAgICB0aGlzLmNvbm5lY3Rpb25zLnNldChuYW1lLCBjb25uZWN0aW9uKTtcbiAgICAgIGF3YWl0IHRoaXMudGVzdENvbm5lY3Rpb24obmFtZSk7XG4gICAgICBcbiAgICAgIHRoaXMubG9nZ2VyPy5pbmZvKGBNQ1AgY29ubmVjdGlvbiBpbml0aWFsaXplZGAsIHsgbmFtZSwgd3JhcHBlclBhdGggfSk7XG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5sb2dnZXI/LmVycm9yKGBGYWlsZWQgdG8gaW5pdGlhbGl6ZSBNQ1AgY29ubmVjdGlvbmAsIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgd3JhcHBlclBhdGgsXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgdGhpcy5jb25uZWN0aW9ucy5zZXQobmFtZSwge1xuICAgICAgICBuYW1lLFxuICAgICAgICB3cmFwcGVyUGF0aCxcbiAgICAgICAgc3RhdGU6IHRoaXMuY29ubmVjdGlvblN0YXRlcy5FUlJPUixcbiAgICAgICAgbGFzdEVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICByZXRyeUNvdW50OiAwXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBhc3luYyB0ZXN0Q29ubmVjdGlvbihuYW1lKSB7XG4gICAgY29uc3QgY29ubmVjdGlvbiA9IHRoaXMuY29ubmVjdGlvbnMuZ2V0KG5hbWUpO1xuICAgIGlmICghY29ubmVjdGlvbikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb25uZWN0aW9uICR7bmFtZX0gbm90IGZvdW5kYCk7XG4gICAgfVxuICAgIFxuICAgIGNvbm5lY3Rpb24uc3RhdGUgPSB0aGlzLmNvbm5lY3Rpb25TdGF0ZXMuQ09OTkVDVElORztcbiAgICBcbiAgICB0cnkge1xuICAgICAgY29uc3QgdGVzdENvbW1hbmQgPSB0aGlzLmJ1aWxkVGVzdENvbW1hbmQobmFtZSk7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmV4ZWN1dGVDb21tYW5kKG5hbWUsIHRlc3RDb21tYW5kLCB7IHRpbWVvdXQ6IDEwMDAwIH0pO1xuICAgICAgXG4gICAgICBjb25uZWN0aW9uLnN0YXRlID0gdGhpcy5jb25uZWN0aW9uU3RhdGVzLkNPTk5FQ1RFRDtcbiAgICAgIGNvbm5lY3Rpb24ubGFzdEhlYWx0aENoZWNrID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICAgICAgY29ubmVjdGlvbi5sYXN0RXJyb3IgPSBudWxsO1xuICAgICAgY29ubmVjdGlvbi5yZXRyeUNvdW50ID0gMDtcbiAgICAgIFxuICAgICAgdGhpcy5sb2dnZXI/LmRlYnVnKGBNQ1AgY29ubmVjdGlvbiB0ZXN0IHN1Y2Nlc3NmdWxgLCB7IG5hbWUgfSk7XG4gICAgICB0aGlzLmVtaXQoJ2Nvbm5lY3Rpb25fZXN0YWJsaXNoZWQnLCBuYW1lKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25uZWN0aW9uLnN0YXRlID0gdGhpcy5jb25uZWN0aW9uU3RhdGVzLkVSUk9SO1xuICAgICAgY29ubmVjdGlvbi5sYXN0RXJyb3IgPSBlcnJvci5tZXNzYWdlO1xuICAgICAgY29ubmVjdGlvbi5yZXRyeUNvdW50Kys7XG4gICAgICBcbiAgICAgIHRoaXMubG9nZ2VyPy5lcnJvcihgTUNQIGNvbm5lY3Rpb24gdGVzdCBmYWlsZWRgLCB7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICByZXRyeUNvdW50OiBjb25uZWN0aW9uLnJldHJ5Q291bnRcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICB0aGlzLmVtaXQoJ2Nvbm5lY3Rpb25fZmFpbGVkJywgeyBuYW1lLCBlcnJvcjogZXJyb3IubWVzc2FnZSB9KTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIGJ1aWxkVGVzdENvbW1hbmQobmFtZSkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnbmV0d29ya0ZzJzpcbiAgICAgICAgcmV0dXJuIFsnbGlzdF9hbGxvd2VkX2RpcmVjdG9yaWVzJ107XG4gICAgICBjYXNlICdnaXRodWInOlxuICAgICAgICByZXR1cm4gWydnZXRfbWUnXTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBbJ2hlbHAnXTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBleGVjdXRlQ29tbWFuZChjb25uZWN0aW9uTmFtZSwgY29tbWFuZCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgY29ubmVjdGlvbiA9IHRoaXMuY29ubmVjdGlvbnMuZ2V0KGNvbm5lY3Rpb25OYW1lKTtcbiAgICBpZiAoIWNvbm5lY3Rpb24pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ29ubmVjdGlvbiAke2Nvbm5lY3Rpb25OYW1lfSBub3QgZm91bmRgKTtcbiAgICB9XG4gICAgXG4gICAgaWYgKGNvbm5lY3Rpb24uc3RhdGUgIT09IHRoaXMuY29ubmVjdGlvblN0YXRlcy5DT05ORUNURUQpIHtcbiAgICAgIGF3YWl0IHRoaXMudGVzdENvbm5lY3Rpb24oY29ubmVjdGlvbk5hbWUpO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCB0aW1lb3V0ID0gb3B0aW9ucy50aW1lb3V0IHx8IHRoaXMudGltZW91dDtcbiAgICBjb25zdCBjb21tYW5kSWQgPSBgJHtjb25uZWN0aW9uTmFtZX0tJHtEYXRlLm5vdygpfS0ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gO1xuICAgIFxuICAgIHRoaXMubG9nZ2VyPy5kZWJ1ZygnRXhlY3V0aW5nIE1DUCBjb21tYW5kJywge1xuICAgICAgY29ubmVjdGlvbk5hbWUsXG4gICAgICBjb21tYW5kOiBBcnJheS5pc0FycmF5KGNvbW1hbmQpID8gY29tbWFuZC5qb2luKCcgJykgOiBjb21tYW5kLFxuICAgICAgY29tbWFuZElkLFxuICAgICAgdGltZW91dFxuICAgIH0pO1xuICAgIFxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLnJ1bkNvbW1hbmQoY29ubmVjdGlvbiwgY29tbWFuZCwgdGltZW91dCwgY29tbWFuZElkKTtcbiAgICAgIFxuICAgICAgdGhpcy5sb2dnZXI/LmRlYnVnKCdNQ1AgY29tbWFuZCBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5Jywge1xuICAgICAgICBjb25uZWN0aW9uTmFtZSxcbiAgICAgICAgY29tbWFuZElkLFxuICAgICAgICBkdXJhdGlvbjogcmVzdWx0LmR1cmF0aW9uXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0aGlzLmxvZ2dlcj8uZXJyb3IoJ01DUCBjb21tYW5kIGZhaWxlZCcsIHtcbiAgICAgICAgY29ubmVjdGlvbk5hbWUsXG4gICAgICAgIGNvbW1hbmRJZCxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgIGNvbW1hbmQ6IEFycmF5LmlzQXJyYXkoY29tbWFuZCkgPyBjb21tYW5kLmpvaW4oJyAnKSA6IGNvbW1hbmRcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBjb25uZWN0aW9uLmxhc3RFcnJvciA9IGVycm9yLm1lc3NhZ2U7XG4gICAgICBcbiAgICAgIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCd0aW1lb3V0JykgfHwgZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnRUNPTk5SRVNFVCcpKSB7XG4gICAgICAgIGNvbm5lY3Rpb24uc3RhdGUgPSB0aGlzLmNvbm5lY3Rpb25TdGF0ZXMuRVJST1I7XG4gICAgICAgIHRoaXMuZW1pdCgnY29ubmVjdGlvbl9sb3N0JywgY29ubmVjdGlvbk5hbWUpO1xuICAgICAgfVxuICAgICAgXG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cblxuICBhc3luYyBydW5Db21tYW5kKGNvbm5lY3Rpb24sIGNvbW1hbmQsIHRpbWVvdXQsIGNvbW1hbmRJZCkge1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG4gICAgXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGNvbnN0IGNvbW1hbmRBcmdzID0gQXJyYXkuaXNBcnJheShjb21tYW5kKSA/IGNvbW1hbmQgOiBbY29tbWFuZF07XG4gICAgICBjb25zdCBwcm9jZXNzID0gc3Bhd24oJ2Jhc2gnLCBbY29ubmVjdGlvbi53cmFwcGVyUGF0aCwgLi4uY29tbWFuZEFyZ3NdLCB7XG4gICAgICAgIHN0ZGlvOiBbJ3BpcGUnLCAncGlwZScsICdwaXBlJ10sXG4gICAgICAgIHRpbWVvdXRcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBsZXQgc3Rkb3V0ID0gJyc7XG4gICAgICBsZXQgc3RkZXJyID0gJyc7XG4gICAgICBsZXQgdGltZW91dElkO1xuICAgICAgXG4gICAgICAvLyBTZXQgdXAgdGltZW91dFxuICAgICAgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHByb2Nlc3Mua2lsbCgnU0lHVEVSTScpO1xuICAgICAgICByZWplY3QobmV3IEVycm9yKGBDb21tYW5kIHRpbWVvdXQgYWZ0ZXIgJHt0aW1lb3V0fW1zYCkpO1xuICAgICAgfSwgdGltZW91dCk7XG4gICAgICBcbiAgICAgIHByb2Nlc3Muc3Rkb3V0Lm9uKCdkYXRhJywgKGRhdGEpID0+IHtcbiAgICAgICAgc3Rkb3V0ICs9IGRhdGEudG9TdHJpbmcoKTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBwcm9jZXNzLnN0ZGVyci5vbignZGF0YScsIChkYXRhKSA9PiB7XG4gICAgICAgIHN0ZGVyciArPSBkYXRhLnRvU3RyaW5nKCk7XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgcHJvY2Vzcy5vbignY2xvc2UnLCAoY29kZSkgPT4ge1xuICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGR1cmF0aW9uID0gRGF0ZS5ub3coKSAtIHN0YXJ0VGltZTtcbiAgICAgICAgXG4gICAgICAgIGlmIChjb2RlID09PSAwKSB7XG4gICAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgICBzdGRvdXQ6IHN0ZG91dC50cmltKCksXG4gICAgICAgICAgICBzdGRlcnI6IHN0ZGVyci50cmltKCksXG4gICAgICAgICAgICBleGl0Q29kZTogY29kZSxcbiAgICAgICAgICAgIGR1cmF0aW9uLFxuICAgICAgICAgICAgY29tbWFuZElkXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgQ29tbWFuZCBmYWlsZWQgd2l0aCBleGl0IGNvZGUgJHtjb2RlfTogJHtzdGRlcnIgfHwgc3Rkb3V0fWApKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHByb2Nlc3Mub24oJ2Vycm9yJywgKGVycm9yKSA9PiB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICByZWplY3QobmV3IEVycm9yKGBQcm9jZXNzIGVycm9yOiAke2Vycm9yLm1lc3NhZ2V9YCkpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBhc3luYyBuZXR3b3JrRnNPcGVyYXRpb24ob3BlcmF0aW9uLCBwYXJhbXMgPSB7fSkge1xuICAgIGNvbnN0IGNvbW1hbmRzID0ge1xuICAgICAgJ2xpc3RfZGlyZWN0b3J5JzogWydsaXN0X25ldHdvcmtfZGlyZWN0b3J5JywgcGFyYW1zLnNoYXJlTmFtZSwgcGFyYW1zLnBhdGggfHwgJyddLFxuICAgICAgJ3JlYWRfZmlsZSc6IFsncmVhZF9uZXR3b3JrX2ZpbGUnLCBwYXJhbXMuc2hhcmVOYW1lLCBwYXJhbXMuZmlsZVBhdGgsIHBhcmFtcy5lbmNvZGluZyB8fCAndXRmLTgnXSxcbiAgICAgICd3cml0ZV9maWxlJzogWyd3cml0ZV9uZXR3b3JrX2ZpbGUnLCBwYXJhbXMuc2hhcmVOYW1lLCBwYXJhbXMuZmlsZVBhdGgsIHBhcmFtcy5jb250ZW50LCBwYXJhbXMuZW5jb2RpbmcgfHwgJ3V0Zi04J10sXG4gICAgICAnZGVsZXRlX2ZpbGUnOiBbJ2RlbGV0ZV9uZXR3b3JrX2ZpbGUnLCBwYXJhbXMuc2hhcmVOYW1lLCBwYXJhbXMuZmlsZVBhdGhdLFxuICAgICAgJ2NyZWF0ZV9kaXJlY3RvcnknOiBbJ2NyZWF0ZV9uZXR3b3JrX2RpcmVjdG9yeScsIHBhcmFtcy5zaGFyZU5hbWUsIHBhcmFtcy5kaXJlY3RvcnlQYXRoXSxcbiAgICAgICdnZXRfZmlsZV9pbmZvJzogWydnZXRfbmV0d29ya19maWxlX2luZm8nLCBwYXJhbXMuc2hhcmVOYW1lLCBwYXJhbXMucGF0aF0sXG4gICAgICAnZ2V0X3NoYXJlX2luZm8nOiBbJ2dldF9zaGFyZV9pbmZvJywgcGFyYW1zLnNoYXJlTmFtZSB8fCAnJ11cbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IGNvbW1hbmQgPSBjb21tYW5kc1tvcGVyYXRpb25dO1xuICAgIGlmICghY29tbWFuZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG5ldHdvcmsgRlMgb3BlcmF0aW9uOiAke29wZXJhdGlvbn1gKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZXhlY3V0ZUNvbW1hbmQoJ25ldHdvcmtGcycsIGNvbW1hbmQuZmlsdGVyKEJvb2xlYW4pKTtcbiAgfVxuXG4gIGFzeW5jIGdpdGh1Yk9wZXJhdGlvbihvcGVyYXRpb24sIHBhcmFtcyA9IHt9KSB7XG4gICAgY29uc3QgY29tbWFuZHMgPSB7XG4gICAgICAnZ2V0X21lJzogWydnZXRfbWUnXSxcbiAgICAgICdsaXN0X3JlcG9zaXRvcmllcyc6IFsnc2VhcmNoX3JlcG9zaXRvcmllcycsIHBhcmFtcy5xdWVyeSB8fCAnJ10sXG4gICAgICAnZ2V0X3JlcG9zaXRvcnknOiBbJ2dldF9yZXBvc2l0b3J5JywgcGFyYW1zLm93bmVyLCBwYXJhbXMucmVwb10sXG4gICAgICAnbGlzdF9pc3N1ZXMnOiBbJ2xpc3RfaXNzdWVzJywgcGFyYW1zLm93bmVyLCBwYXJhbXMucmVwb10sXG4gICAgICAnY3JlYXRlX2lzc3VlJzogWydjcmVhdGVfaXNzdWUnLCBwYXJhbXMub3duZXIsIHBhcmFtcy5yZXBvLCBwYXJhbXMudGl0bGUsIHBhcmFtcy5ib2R5IHx8ICcnXSxcbiAgICAgICdnZXRfZmlsZV9jb250ZW50cyc6IFsnZ2V0X2ZpbGVfY29udGVudHMnLCBwYXJhbXMub3duZXIsIHBhcmFtcy5yZXBvLCBwYXJhbXMucGF0aCwgcGFyYW1zLnJlZiB8fCAnJ10sXG4gICAgICAnY3JlYXRlX29yX3VwZGF0ZV9maWxlJzogWydjcmVhdGVfb3JfdXBkYXRlX2ZpbGUnLCBwYXJhbXMub3duZXIsIHBhcmFtcy5yZXBvLCBwYXJhbXMucGF0aCwgcGFyYW1zLmNvbnRlbnQsIHBhcmFtcy5tZXNzYWdlLCBwYXJhbXMuYnJhbmNoLCBwYXJhbXMuc2hhIHx8ICcnXSxcbiAgICAgICdsaXN0X2NvbW1pdHMnOiBbJ2xpc3RfY29tbWl0cycsIHBhcmFtcy5vd25lciwgcGFyYW1zLnJlcG8sIHBhcmFtcy5zaGEgfHwgJycsIHBhcmFtcy5hdXRob3IgfHwgJyddLFxuICAgICAgJ2NyZWF0ZV9wdWxsX3JlcXVlc3QnOiBbJ2NyZWF0ZV9wdWxsX3JlcXVlc3QnLCBwYXJhbXMub3duZXIsIHBhcmFtcy5yZXBvLCBwYXJhbXMudGl0bGUsIHBhcmFtcy5oZWFkLCBwYXJhbXMuYmFzZSwgcGFyYW1zLmJvZHkgfHwgJyddXG4gICAgfTtcbiAgICBcbiAgICBjb25zdCBjb21tYW5kID0gY29tbWFuZHNbb3BlcmF0aW9uXTtcbiAgICBpZiAoIWNvbW1hbmQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBHaXRIdWIgb3BlcmF0aW9uOiAke29wZXJhdGlvbn1gKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuZXhlY3V0ZUNvbW1hbmQoJ2dpdGh1YicsIGNvbW1hbmQuZmlsdGVyKEJvb2xlYW4pKTtcbiAgfVxuXG4gIGFzeW5jIGRlcGxveW1lbnRPcGVyYXRpb25zKGRlcGxveW1lbnRQYXJhbXMpIHtcbiAgICBjb25zdCBvcGVyYXRpb25zID0gW107XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIC8vIEltcG9ydCBiYWNrdXAgbWFuYWdlciBpZiBuZWVkZWRcbiAgICAgIGNvbnN0IHsgQmFja3VwTWFuYWdlciB9ID0gcmVxdWlyZSgnLi4vYmFja3VwL2JhY2t1cC1tYW5hZ2VyJyk7XG4gICAgICBcbiAgICAgIC8vIDEuIENyZWF0ZSBwcmUtZGVwbG95bWVudCBiYWNrdXAgaWYgYmFja3VwIG1hbmFnZXIgaXMgYXZhaWxhYmxlXG4gICAgICBsZXQgcHJlRGVwbG95bWVudEJhY2t1cCA9IG51bGw7XG4gICAgICBpZiAoZGVwbG95bWVudFBhcmFtcy5jcmVhdGVCYWNrdXAgIT09IGZhbHNlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgYmFja3VwTWFuYWdlciA9IG5ldyBCYWNrdXBNYW5hZ2VyKCk7XG4gICAgICAgICAgYXdhaXQgYmFja3VwTWFuYWdlci5pbml0aWFsaXplKCk7XG4gICAgICAgICAgXG4gICAgICAgICAgcHJlRGVwbG95bWVudEJhY2t1cCA9IGF3YWl0IGJhY2t1cE1hbmFnZXIuY3JlYXRlUHJlRGVwbG95bWVudEJhY2t1cChcbiAgICAgICAgICAgIGRlcGxveW1lbnRQYXJhbXMuZGVwbG95bWVudElkIHx8IGBkZXBsb3ltZW50LSR7RGF0ZS5ub3coKX1gXG4gICAgICAgICAgKTtcbiAgICAgICAgICBcbiAgICAgICAgICBvcGVyYXRpb25zLnB1c2goe1xuICAgICAgICAgICAgb3BlcmF0aW9uOiAnY3JlYXRlX3ByZV9kZXBsb3ltZW50X2JhY2t1cCcsXG4gICAgICAgICAgICByZXN1bHQ6ICdzdWNjZXNzJyxcbiAgICAgICAgICAgIGJhY2t1cElkOiBwcmVEZXBsb3ltZW50QmFja3VwLmJhY2t1cElkLFxuICAgICAgICAgICAgYmFja3VwUGF0aDogcHJlRGVwbG95bWVudEJhY2t1cC5wYXRoXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgdGhpcy5sb2dnZXI/LmluZm8oJ1ByZS1kZXBsb3ltZW50IGJhY2t1cCBjcmVhdGVkJywge1xuICAgICAgICAgICAgYmFja3VwSWQ6IHByZURlcGxveW1lbnRCYWNrdXAuYmFja3VwSWQsXG4gICAgICAgICAgICBzaXplOiBwcmVEZXBsb3ltZW50QmFja3VwLnNpemVcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBcbiAgICAgICAgfSBjYXRjaCAoYmFja3VwRXJyb3IpIHtcbiAgICAgICAgICB0aGlzLmxvZ2dlcj8ud2FybignRmFpbGVkIHRvIGNyZWF0ZSBwcmUtZGVwbG95bWVudCBiYWNrdXAnLCB7IFxuICAgICAgICAgICAgZXJyb3I6IGJhY2t1cEVycm9yLm1lc3NhZ2UgXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgb3BlcmF0aW9ucy5wdXNoKHtcbiAgICAgICAgICAgIG9wZXJhdGlvbjogJ2NyZWF0ZV9wcmVfZGVwbG95bWVudF9iYWNrdXAnLFxuICAgICAgICAgICAgcmVzdWx0OiAnZmFpbGVkJyxcbiAgICAgICAgICAgIGVycm9yOiBiYWNrdXBFcnJvci5tZXNzYWdlXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gQ29udGludWUgd2l0aCBkZXBsb3ltZW50IHVubGVzcyBiYWNrdXAgaXMgcmVxdWlyZWRcbiAgICAgICAgICBpZiAoZGVwbG95bWVudFBhcmFtcy5yZXF1aXJlQmFja3VwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFByZS1kZXBsb3ltZW50IGJhY2t1cCBmYWlsZWQ6ICR7YmFja3VwRXJyb3IubWVzc2FnZX1gKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gMi4gR2V0IGN1cnJlbnQgY29uZmlndXJhdGlvbiBmcm9tIHRhcmdldCBzZXJ2ZXJcbiAgICAgIHRoaXMubG9nZ2VyPy5pbmZvKCdGZXRjaGluZyBjdXJyZW50IGNvbmZpZ3VyYXRpb24nLCB7IHJlcG9zaXRvcnk6IGRlcGxveW1lbnRQYXJhbXMucmVwb3NpdG9yeSB9KTtcbiAgICAgIFxuICAgICAgY29uc3QgY3VycmVudENvbmZpZyA9IGF3YWl0IHRoaXMubmV0d29ya0ZzT3BlcmF0aW9uKCdsaXN0X2RpcmVjdG9yeScsIHtcbiAgICAgICAgc2hhcmVOYW1lOiAnaG9tZS1hc3Npc3RhbnQnLFxuICAgICAgICBwYXRoOiAnL2NvbmZpZydcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBvcGVyYXRpb25zLnB1c2goe1xuICAgICAgICBvcGVyYXRpb246ICdmZXRjaF9jdXJyZW50X2NvbmZpZycsXG4gICAgICAgIHJlc3VsdDogJ3N1Y2Nlc3MnLFxuICAgICAgICBkYXRhOiBjdXJyZW50Q29uZmlnXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gMy4gR2V0IGxhdGVzdCBjaGFuZ2VzIGZyb20gR2l0SHViXG4gICAgICB0aGlzLmxvZ2dlcj8uaW5mbygnRmV0Y2hpbmcgbGF0ZXN0IGNoYW5nZXMgZnJvbSBHaXRIdWInLCB7XG4gICAgICAgIHJlcG9zaXRvcnk6IGRlcGxveW1lbnRQYXJhbXMucmVwb3NpdG9yeSxcbiAgICAgICAgYnJhbmNoOiBkZXBsb3ltZW50UGFyYW1zLmJyYW5jaFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGNvbnN0IFtvd25lciwgcmVwb10gPSBkZXBsb3ltZW50UGFyYW1zLnJlcG9zaXRvcnkuc3BsaXQoJy8nKTtcbiAgICAgIGNvbnN0IGxhdGVzdENvbW1pdHMgPSBhd2FpdCB0aGlzLmdpdGh1Yk9wZXJhdGlvbignbGlzdF9jb21taXRzJywge1xuICAgICAgICBvd25lcixcbiAgICAgICAgcmVwbyxcbiAgICAgICAgc2hhOiBkZXBsb3ltZW50UGFyYW1zLmJyYW5jaFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIG9wZXJhdGlvbnMucHVzaCh7XG4gICAgICAgIG9wZXJhdGlvbjogJ2ZldGNoX2dpdGh1Yl9jaGFuZ2VzJyxcbiAgICAgICAgcmVzdWx0OiAnc3VjY2VzcycsXG4gICAgICAgIGRhdGE6IGxhdGVzdENvbW1pdHNcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICAvLyA0LiBDcmVhdGUgbGVnYWN5IGJhY2t1cCBmb3IgY29tcGF0aWJpbGl0eSAoaWYgbm8gYmFja3VwIG1hbmFnZXIpXG4gICAgICBsZXQgbGVnYWN5QmFja3VwUGF0aCA9IG51bGw7XG4gICAgICBpZiAoIXByZURlcGxveW1lbnRCYWNrdXApIHtcbiAgICAgICAgbGVnYWN5QmFja3VwUGF0aCA9IGAvY29uZmlnL2JhY2t1cHMvYmFja3VwLSR7RGF0ZS5ub3coKX1gO1xuICAgICAgICBhd2FpdCB0aGlzLm5ldHdvcmtGc09wZXJhdGlvbignY3JlYXRlX2RpcmVjdG9yeScsIHtcbiAgICAgICAgICBzaGFyZU5hbWU6ICdob21lLWFzc2lzdGFudCcsXG4gICAgICAgICAgZGlyZWN0b3J5UGF0aDogbGVnYWN5QmFja3VwUGF0aFxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIG9wZXJhdGlvbnMucHVzaCh7XG4gICAgICAgICAgb3BlcmF0aW9uOiAnY3JlYXRlX2xlZ2FjeV9iYWNrdXAnLFxuICAgICAgICAgIHJlc3VsdDogJ3N1Y2Nlc3MnLFxuICAgICAgICAgIGJhY2t1cFBhdGg6IGxlZ2FjeUJhY2t1cFBhdGhcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIDUuIERvd25sb2FkIGFuZCBhcHBseSBuZXcgY29uZmlndXJhdGlvbiBmaWxlc1xuICAgICAgY29uc3QgY29uZmlnRmlsZXMgPSBhd2FpdCB0aGlzLmdldENvbmZpZ3VyYXRpb25GaWxlcyhvd25lciwgcmVwbywgZGVwbG95bWVudFBhcmFtcy5icmFuY2gpO1xuICAgICAgXG4gICAgICBmb3IgKGNvbnN0IGZpbGUgb2YgY29uZmlnRmlsZXMpIHtcbiAgICAgICAgY29uc3QgZmlsZUNvbnRlbnQgPSBhd2FpdCB0aGlzLmdpdGh1Yk9wZXJhdGlvbignZ2V0X2ZpbGVfY29udGVudHMnLCB7XG4gICAgICAgICAgb3duZXIsXG4gICAgICAgICAgcmVwbyxcbiAgICAgICAgICBwYXRoOiBmaWxlLnBhdGgsXG4gICAgICAgICAgcmVmOiBkZXBsb3ltZW50UGFyYW1zLmJyYW5jaFxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGF3YWl0IHRoaXMubmV0d29ya0ZzT3BlcmF0aW9uKCd3cml0ZV9maWxlJywge1xuICAgICAgICAgIHNoYXJlTmFtZTogJ2hvbWUtYXNzaXN0YW50JyxcbiAgICAgICAgICBmaWxlUGF0aDogYC9jb25maWcvJHtmaWxlLnBhdGh9YCxcbiAgICAgICAgICBjb250ZW50OiBmaWxlQ29udGVudC5zdGRvdXRcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBvcGVyYXRpb25zLnB1c2goe1xuICAgICAgICAgIG9wZXJhdGlvbjogJ2RlcGxveV9maWxlJyxcbiAgICAgICAgICByZXN1bHQ6ICdzdWNjZXNzJyxcbiAgICAgICAgICBmaWxlOiBmaWxlLnBhdGhcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG9wZXJhdGlvbnMsXG4gICAgICAgIGJhY2t1cFBhdGg6IHByZURlcGxveW1lbnRCYWNrdXA/LnBhdGggfHwgbGVnYWN5QmFja3VwUGF0aCxcbiAgICAgICAgYmFja3VwSWQ6IHByZURlcGxveW1lbnRCYWNrdXA/LmJhY2t1cElkLFxuICAgICAgICBkZXBsb3llZEZpbGVzOiBjb25maWdGaWxlcy5sZW5ndGgsXG4gICAgICAgIHByZURlcGxveW1lbnRCYWNrdXA6IHByZURlcGxveW1lbnRCYWNrdXBcbiAgICAgIH07XG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5sb2dnZXI/LmVycm9yKCdEZXBsb3ltZW50IG9wZXJhdGlvbnMgZmFpbGVkJywge1xuICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgb3BlcmF0aW9uczogb3BlcmF0aW9ucy5sZW5ndGhcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBvcGVyYXRpb25zLnB1c2goe1xuICAgICAgICBvcGVyYXRpb246ICdkZXBsb3ltZW50JyxcbiAgICAgICAgcmVzdWx0OiAnZmFpbGVkJyxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgIG9wZXJhdGlvbnNcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgZ2V0Q29uZmlndXJhdGlvbkZpbGVzKG93bmVyLCByZXBvLCBicmFuY2ggPSAnbWFpbicpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVwb0NvbnRlbnRzID0gYXdhaXQgdGhpcy5naXRodWJPcGVyYXRpb24oJ2dldF9maWxlX2NvbnRlbnRzJywge1xuICAgICAgICBvd25lcixcbiAgICAgICAgcmVwbyxcbiAgICAgICAgcGF0aDogJycsXG4gICAgICAgIHJlZjogYnJhbmNoXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgY29uc3QgY29udGVudHMgPSBKU09OLnBhcnNlKHJlcG9Db250ZW50cy5zdGRvdXQpO1xuICAgICAgY29uc3QgY29uZmlnRmlsZXMgPSBbXTtcbiAgICAgIFxuICAgICAgY29uc3QgY29uZmlnRXh0ZW5zaW9ucyA9IFsnLnlhbWwnLCAnLnltbCcsICcuanNvbiddO1xuICAgICAgY29uc3QgY29uZmlnRGlyZWN0b3JpZXMgPSBbJ3BhY2thZ2VzJywgJ2xvdmVsYWNlJywgJ2ludGVncmF0aW9ucyddO1xuICAgICAgXG4gICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgY29udGVudHMpIHtcbiAgICAgICAgaWYgKGl0ZW0udHlwZSA9PT0gJ2ZpbGUnKSB7XG4gICAgICAgICAgY29uc3QgaGFzQ29uZmlnRXh0ZW5zaW9uID0gY29uZmlnRXh0ZW5zaW9ucy5zb21lKGV4dCA9PiBpdGVtLm5hbWUuZW5kc1dpdGgoZXh0KSk7XG4gICAgICAgICAgaWYgKGhhc0NvbmZpZ0V4dGVuc2lvbikge1xuICAgICAgICAgICAgY29uZmlnRmlsZXMucHVzaCh7XG4gICAgICAgICAgICAgIHBhdGg6IGl0ZW0ucGF0aCxcbiAgICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLFxuICAgICAgICAgICAgICBzaXplOiBpdGVtLnNpemUsXG4gICAgICAgICAgICAgIHNoYTogaXRlbS5zaGFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChpdGVtLnR5cGUgPT09ICdkaXInICYmIGNvbmZpZ0RpcmVjdG9yaWVzLmluY2x1ZGVzKGl0ZW0ubmFtZSkpIHtcbiAgICAgICAgICBjb25zdCBkaXJGaWxlcyA9IGF3YWl0IHRoaXMuZ2V0RGlyZWN0b3J5RmlsZXMob3duZXIsIHJlcG8sIGl0ZW0ucGF0aCwgYnJhbmNoKTtcbiAgICAgICAgICBjb25maWdGaWxlcy5wdXNoKC4uLmRpckZpbGVzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gY29uZmlnRmlsZXM7XG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5sb2dnZXI/LmVycm9yKCdGYWlsZWQgdG8gZ2V0IGNvbmZpZ3VyYXRpb24gZmlsZXMnLCB7XG4gICAgICAgIG93bmVyLFxuICAgICAgICByZXBvLFxuICAgICAgICBicmFuY2gsXG4gICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICB9KTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdldERpcmVjdG9yeUZpbGVzKG93bmVyLCByZXBvLCBkaXJQYXRoLCBicmFuY2gpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZGlyQ29udGVudHMgPSBhd2FpdCB0aGlzLmdpdGh1Yk9wZXJhdGlvbignZ2V0X2ZpbGVfY29udGVudHMnLCB7XG4gICAgICAgIG93bmVyLFxuICAgICAgICByZXBvLFxuICAgICAgICBwYXRoOiBkaXJQYXRoLFxuICAgICAgICByZWY6IGJyYW5jaFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGNvbnN0IGNvbnRlbnRzID0gSlNPTi5wYXJzZShkaXJDb250ZW50cy5zdGRvdXQpO1xuICAgICAgY29uc3QgZmlsZXMgPSBbXTtcbiAgICAgIFxuICAgICAgZm9yIChjb25zdCBpdGVtIG9mIGNvbnRlbnRzKSB7XG4gICAgICAgIGlmIChpdGVtLnR5cGUgPT09ICdmaWxlJykge1xuICAgICAgICAgIGZpbGVzLnB1c2goe1xuICAgICAgICAgICAgcGF0aDogaXRlbS5wYXRoLFxuICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lLFxuICAgICAgICAgICAgc2l6ZTogaXRlbS5zaXplLFxuICAgICAgICAgICAgc2hhOiBpdGVtLnNoYVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2UgaWYgKGl0ZW0udHlwZSA9PT0gJ2RpcicpIHtcbiAgICAgICAgICBjb25zdCBzdWJGaWxlcyA9IGF3YWl0IHRoaXMuZ2V0RGlyZWN0b3J5RmlsZXMob3duZXIsIHJlcG8sIGl0ZW0ucGF0aCwgYnJhbmNoKTtcbiAgICAgICAgICBmaWxlcy5wdXNoKC4uLnN1YkZpbGVzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gZmlsZXM7XG4gICAgICBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5sb2dnZXI/LmVycm9yKCdGYWlsZWQgdG8gZ2V0IGRpcmVjdG9yeSBmaWxlcycsIHtcbiAgICAgICAgZGlyUGF0aCxcbiAgICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2VcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHJvbGxiYWNrT3BlcmF0aW9ucyhiYWNrdXBQYXRoLCBvcHRpb25zID0ge30pIHtcbiAgICB0cnkge1xuICAgICAgdGhpcy5sb2dnZXI/LmluZm8oJ1N0YXJ0aW5nIHJvbGxiYWNrIG9wZXJhdGlvbnMnLCB7IGJhY2t1cFBhdGgsIG9wdGlvbnMgfSk7XG4gICAgICBcbiAgICAgIC8vIFRyeSB0byB1c2UgQmFja3VwTWFuYWdlciBmb3Igcm9sbGJhY2sgaWYgZGVwbG95bWVudElkIGlzIHByb3ZpZGVkXG4gICAgICBpZiAob3B0aW9ucy5kZXBsb3ltZW50SWQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCB7IFJlY292ZXJ5U2VydmljZSB9ID0gcmVxdWlyZSgnLi4vYmFja3VwL3JlY292ZXJ5LXNlcnZpY2UnKTtcbiAgICAgICAgICBjb25zdCByZWNvdmVyeVNlcnZpY2UgPSBuZXcgUmVjb3ZlcnlTZXJ2aWNlKCk7XG4gICAgICAgICAgYXdhaXQgcmVjb3ZlcnlTZXJ2aWNlLmluaXRpYWxpemUoKTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCByb2xsYmFja1Jlc3VsdCA9IGF3YWl0IHJlY292ZXJ5U2VydmljZS5wZXJmb3JtQ29udHJvbGxlZFJvbGxiYWNrKFxuICAgICAgICAgICAgb3B0aW9ucy5kZXBsb3ltZW50SWQsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHZhbGlkYXRlQmVmb3JlOiBvcHRpb25zLnZhbGlkYXRlQmVmb3JlICE9PSBmYWxzZSxcbiAgICAgICAgICAgICAgY3JlYXRlQmFja3VwQmVmb3JlOiBvcHRpb25zLmNyZWF0ZUJhY2t1cEJlZm9yZSAhPT0gZmFsc2UsXG4gICAgICAgICAgICAgIGhlYWx0aENoZWNrQWZ0ZXI6IG9wdGlvbnMuaGVhbHRoQ2hlY2tBZnRlciAhPT0gZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApO1xuICAgICAgICAgIFxuICAgICAgICAgIHRoaXMubG9nZ2VyPy5pbmZvKCdSb2xsYmFjayBjb21wbGV0ZWQgdXNpbmcgUmVjb3ZlcnlTZXJ2aWNlJywge1xuICAgICAgICAgICAgZGVwbG95bWVudElkOiBvcHRpb25zLmRlcGxveW1lbnRJZCxcbiAgICAgICAgICAgIGJhY2t1cElkOiByb2xsYmFja1Jlc3VsdC5yb2xsZWRCYWNrVG9CYWNrdXBcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgIG1ldGhvZDogJ3JlY292ZXJ5LXNlcnZpY2UnLFxuICAgICAgICAgICAgZGVwbG95bWVudElkOiBvcHRpb25zLmRlcGxveW1lbnRJZCxcbiAgICAgICAgICAgIGJhY2t1cElkOiByb2xsYmFja1Jlc3VsdC5yb2xsZWRCYWNrVG9CYWNrdXAsXG4gICAgICAgICAgICByZXN0b3JlZEZpbGVzOiByb2xsYmFja1Jlc3VsdC5yZXN0b3JlZEZpbGVzLFxuICAgICAgICAgICAgcmVzdG9yZWRTaXplOiByb2xsYmFja1Jlc3VsdC5yZXN0b3JlZFNpemUsXG4gICAgICAgICAgICBjdXJyZW50U3RhdGVCYWNrdXA6IHJvbGxiYWNrUmVzdWx0LmN1cnJlbnRTdGF0ZUJhY2t1cFxuICAgICAgICAgIH07XG4gICAgICAgICAgXG4gICAgICAgIH0gY2F0Y2ggKHJlY292ZXJ5RXJyb3IpIHtcbiAgICAgICAgICB0aGlzLmxvZ2dlcj8ud2FybignUmVjb3ZlcnlTZXJ2aWNlIHJvbGxiYWNrIGZhaWxlZCwgZmFsbGluZyBiYWNrIHRvIGxlZ2FjeSBtZXRob2QnLCB7XG4gICAgICAgICAgICBlcnJvcjogcmVjb3ZlcnlFcnJvci5tZXNzYWdlXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgLy8gRmFsbCB0aHJvdWdoIHRvIGxlZ2FjeSByb2xsYmFjayBtZXRob2RcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBMZWdhY3kgcm9sbGJhY2sgbWV0aG9kIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG4gICAgICB0aGlzLmxvZ2dlcj8uaW5mbygnVXNpbmcgbGVnYWN5IHJvbGxiYWNrIG1ldGhvZCcpO1xuICAgICAgXG4gICAgICAvLyBMaXN0IGJhY2t1cCBmaWxlc1xuICAgICAgY29uc3QgYmFja3VwRmlsZXMgPSBhd2FpdCB0aGlzLm5ldHdvcmtGc09wZXJhdGlvbignbGlzdF9kaXJlY3RvcnknLCB7XG4gICAgICAgIHNoYXJlTmFtZTogJ2hvbWUtYXNzaXN0YW50JyxcbiAgICAgICAgcGF0aDogYmFja3VwUGF0aFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIC8vIFJlc3RvcmUgZWFjaCBmaWxlXG4gICAgICBjb25zdCByZXN0b3JlZEZpbGVzID0gW107XG4gICAgICBmb3IgKGNvbnN0IGZpbGUgb2YgSlNPTi5wYXJzZShiYWNrdXBGaWxlcy5zdGRvdXQpKSB7XG4gICAgICAgIGlmIChmaWxlLnR5cGUgPT09ICdmaWxlJykge1xuICAgICAgICAgIGNvbnN0IGZpbGVDb250ZW50ID0gYXdhaXQgdGhpcy5uZXR3b3JrRnNPcGVyYXRpb24oJ3JlYWRfZmlsZScsIHtcbiAgICAgICAgICAgIHNoYXJlTmFtZTogJ2hvbWUtYXNzaXN0YW50JyxcbiAgICAgICAgICAgIGZpbGVQYXRoOiBgJHtiYWNrdXBQYXRofS8ke2ZpbGUubmFtZX1gXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgYXdhaXQgdGhpcy5uZXR3b3JrRnNPcGVyYXRpb24oJ3dyaXRlX2ZpbGUnLCB7XG4gICAgICAgICAgICBzaGFyZU5hbWU6ICdob21lLWFzc2lzdGFudCcsXG4gICAgICAgICAgICBmaWxlUGF0aDogYC9jb25maWcvJHtmaWxlLm5hbWV9YCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGZpbGVDb250ZW50LnN0ZG91dFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIHJlc3RvcmVkRmlsZXMucHVzaChmaWxlLm5hbWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIG1ldGhvZDogJ2xlZ2FjeScsXG4gICAgICAgIHJlc3RvcmVkRmlsZXM6IHJlc3RvcmVkRmlsZXMubGVuZ3RoLFxuICAgICAgICBmaWxlczogcmVzdG9yZWRGaWxlcyxcbiAgICAgICAgYmFja3VwUGF0aFxuICAgICAgfTtcbiAgICAgIFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0aGlzLmxvZ2dlcj8uZXJyb3IoJ1JvbGxiYWNrIG9wZXJhdGlvbnMgZmFpbGVkJywge1xuICAgICAgICBiYWNrdXBQYXRoLFxuICAgICAgICBvcHRpb25zLFxuICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgYmFja3VwUGF0aCxcbiAgICAgICAgbWV0aG9kOiAnZmFpbGVkJ1xuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBzdGFydEhlYWx0aENoZWNrcygpIHtcbiAgICBpZiAodGhpcy5oZWFsdGhDaGVja1RpbWVyKSB7XG4gICAgICBjbGVhckludGVydmFsKHRoaXMuaGVhbHRoQ2hlY2tUaW1lcik7XG4gICAgfVxuICAgIFxuICAgIHRoaXMuaGVhbHRoQ2hlY2tUaW1lciA9IHNldEludGVydmFsKGFzeW5jICgpID0+IHtcbiAgICAgIGF3YWl0IHRoaXMucGVyZm9ybUhlYWx0aENoZWNrcygpO1xuICAgIH0sIHRoaXMuaGVhbHRoQ2hlY2tJbnRlcnZhbCk7XG4gICAgXG4gICAgdGhpcy5sb2dnZXI/LmRlYnVnKCdIZWFsdGggY2hlY2tzIHN0YXJ0ZWQnLCB7IGludGVydmFsOiB0aGlzLmhlYWx0aENoZWNrSW50ZXJ2YWwgfSk7XG4gIH1cblxuICBhc3luYyBwZXJmb3JtSGVhbHRoQ2hlY2tzKCkge1xuICAgIGZvciAoY29uc3QgW25hbWUsIGNvbm5lY3Rpb25dIG9mIHRoaXMuY29ubmVjdGlvbnMpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChjb25uZWN0aW9uLnN0YXRlID09PSB0aGlzLmNvbm5lY3Rpb25TdGF0ZXMuQ09OTkVDVEVEKSB7XG4gICAgICAgICAgYXdhaXQgdGhpcy50ZXN0Q29ubmVjdGlvbihuYW1lKTtcbiAgICAgICAgfSBlbHNlIGlmIChjb25uZWN0aW9uLnN0YXRlID09PSB0aGlzLmNvbm5lY3Rpb25TdGF0ZXMuRVJST1IgJiYgY29ubmVjdGlvbi5yZXRyeUNvdW50IDwgdGhpcy5tYXhSZXRyaWVzKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXI/LmluZm8oJ0F0dGVtcHRpbmcgdG8gcmVjb25uZWN0IE1DUCBjb25uZWN0aW9uJywge1xuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHJldHJ5Q291bnQ6IGNvbm5lY3Rpb24ucmV0cnlDb3VudCxcbiAgICAgICAgICAgIG1heFJldHJpZXM6IHRoaXMubWF4UmV0cmllc1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIGF3YWl0IHRoaXMudGVzdENvbm5lY3Rpb24obmFtZSk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyPy5kZWJ1ZygnSGVhbHRoIGNoZWNrIGZhaWxlZCcsIHtcbiAgICAgICAgICBuYW1lLFxuICAgICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGNoZWNrSGVhbHRoKCkge1xuICAgIGNvbnN0IGhlYWx0aCA9IHtcbiAgICAgIHN0YXR1czogJ2hlYWx0aHknLFxuICAgICAgY29ubmVjdGlvbnM6IHt9XG4gICAgfTtcbiAgICBcbiAgICBmb3IgKGNvbnN0IFtuYW1lLCBjb25uZWN0aW9uXSBvZiB0aGlzLmNvbm5lY3Rpb25zKSB7XG4gICAgICBoZWFsdGguY29ubmVjdGlvbnNbbmFtZV0gPSB7XG4gICAgICAgIHN0YXR1czogY29ubmVjdGlvbi5zdGF0ZSxcbiAgICAgICAgbGFzdEhlYWx0aENoZWNrOiBjb25uZWN0aW9uLmxhc3RIZWFsdGhDaGVjayxcbiAgICAgICAgbGFzdEVycm9yOiBjb25uZWN0aW9uLmxhc3RFcnJvcixcbiAgICAgICAgcmV0cnlDb3VudDogY29ubmVjdGlvbi5yZXRyeUNvdW50LFxuICAgICAgICB3cmFwcGVyUGF0aDogY29ubmVjdGlvbi53cmFwcGVyUGF0aFxuICAgICAgfTtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgaGFzVW5oZWFsdGh5Q29ubmVjdGlvbnMgPSBPYmplY3QudmFsdWVzKGhlYWx0aC5jb25uZWN0aW9ucykuc29tZShcbiAgICAgIGNvbm4gPT4gY29ubi5zdGF0dXMgPT09IHRoaXMuY29ubmVjdGlvblN0YXRlcy5FUlJPUlxuICAgICk7XG4gICAgXG4gICAgaWYgKGhhc1VuaGVhbHRoeUNvbm5lY3Rpb25zKSB7XG4gICAgICBoZWFsdGguc3RhdHVzID0gJ2RlZ3JhZGVkJztcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGhlYWx0aDtcbiAgfVxuXG4gIGdldENvbm5lY3Rpb25TdGF0dXMobmFtZSkge1xuICAgIGNvbnN0IGNvbm5lY3Rpb24gPSB0aGlzLmNvbm5lY3Rpb25zLmdldChuYW1lKTtcbiAgICByZXR1cm4gY29ubmVjdGlvbiA/IGNvbm5lY3Rpb24uc3RhdGUgOiAnbm90X2ZvdW5kJztcbiAgfVxuXG4gIGdldEFsbENvbm5lY3Rpb25zKCkge1xuICAgIGNvbnN0IGNvbm5lY3Rpb25zID0ge307XG4gICAgZm9yIChjb25zdCBbbmFtZSwgY29ubmVjdGlvbl0gb2YgdGhpcy5jb25uZWN0aW9ucykge1xuICAgICAgY29ubmVjdGlvbnNbbmFtZV0gPSB7XG4gICAgICAgIG5hbWU6IGNvbm5lY3Rpb24ubmFtZSxcbiAgICAgICAgc3RhdGU6IGNvbm5lY3Rpb24uc3RhdGUsXG4gICAgICAgIGxhc3RIZWFsdGhDaGVjazogY29ubmVjdGlvbi5sYXN0SGVhbHRoQ2hlY2ssXG4gICAgICAgIGxhc3RFcnJvcjogY29ubmVjdGlvbi5sYXN0RXJyb3IsXG4gICAgICAgIHJldHJ5Q291bnQ6IGNvbm5lY3Rpb24ucmV0cnlDb3VudFxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbm5lY3Rpb25zO1xuICB9XG5cbiAgYXN5bmMgY2xlYW51cCgpIHtcbiAgICBpZiAodGhpcy5oZWFsdGhDaGVja1RpbWVyKSB7XG4gICAgICBjbGVhckludGVydmFsKHRoaXMuaGVhbHRoQ2hlY2tUaW1lcik7XG4gICAgICB0aGlzLmhlYWx0aENoZWNrVGltZXIgPSBudWxsO1xuICAgIH1cbiAgICBcbiAgICAvLyBDbG9zZSBhbnkgYWN0aXZlIHByb2Nlc3Nlc1xuICAgIGZvciAoY29uc3QgW25hbWUsIGNvbm5lY3Rpb25dIG9mIHRoaXMuY29ubmVjdGlvbnMpIHtcbiAgICAgIGlmIChjb25uZWN0aW9uLnByb2Nlc3MgJiYgIWNvbm5lY3Rpb24ucHJvY2Vzcy5raWxsZWQpIHtcbiAgICAgICAgY29ubmVjdGlvbi5wcm9jZXNzLmtpbGwoJ1NJR1RFUk0nKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgdGhpcy5jb25uZWN0aW9ucy5jbGVhcigpO1xuICAgIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKCk7XG4gICAgXG4gICAgdGhpcy5sb2dnZXI/LmluZm8oJ01DUCBjb29yZGluYXRvciBjbGVhbmVkIHVwJyk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNQ1BDb29yZGluYXRvcjsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlWTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBZlosTUFBTTtFQUFFRSxLQUFLO0VBQUVDO0FBQUssQ0FBQztBQUFBO0FBQUEsQ0FBQUgsY0FBQSxHQUFBSSxDQUFBLE9BQUdDLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDaEQsTUFBTTtFQUFFQztBQUFVLENBQUM7QUFBQTtBQUFBLENBQUFOLGNBQUEsR0FBQUksQ0FBQSxPQUFHQyxPQUFP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