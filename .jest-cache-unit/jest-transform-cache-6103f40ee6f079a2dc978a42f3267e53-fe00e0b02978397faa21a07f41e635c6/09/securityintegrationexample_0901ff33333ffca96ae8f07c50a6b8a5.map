{"version":3,"names":["cov_b4cwnsbw0","actualCoverage","express","s","require","authenticate","authenticateOptional","requirePermission","requireRole","requireAdmin","validateDeploymentRequest","validateRollbackRequest","validateWebhookRequest","sanitizeInput","limitRequestSize","getProductionMiddleware","getDevelopmentMiddleware","getAuthRateLimit","getSensitiveRateLimit","getErrorHandler","app","use","json","limit","urlencoded","extended","process","env","NODE_ENV","b","post","validateUserCredentials","req","res","f","status","token","user","id","username","error","code","message","get","deployment","deploymentId","authenticateApiKey","users","validateUserRequest","body","put","health","timestamp","Date","toISOString","metrics","isString","isLength","min","max","matches","withMessage","validateRequest","module","exports"],"sources":["security-integration-example.js"],"sourcesContent":["/**\n * Security Integration Example\n * \n * This file demonstrates how to integrate all the security middleware\n * into an Express.js application for comprehensive protection.\n */\n\nconst express = require('express');\nconst { authenticate, authenticateOptional } = require('./auth');\nconst { requirePermission, requireRole, requireAdmin } = require('./authorization');\nconst { \n  validateDeploymentRequest, \n  validateRollbackRequest,\n  validateWebhookRequest,\n  sanitizeInput,\n  limitRequestSize\n} = require('./enhanced-input-validation');\nconst {\n  getProductionMiddleware,\n  getDevelopmentMiddleware,\n  getAuthRateLimit,\n  getSensitiveRateLimit,\n  getErrorHandler\n} = require('./enhanced-security-headers');\n\nconst app = express();\n\n// ==========================================\n// Basic Express Setup\n// ==========================================\n\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true, limit: '10mb' }));\n\n// ==========================================\n// Security Middleware Stack\n// ==========================================\n\n// Apply environment-specific security middleware\nif (process.env.NODE_ENV === 'production') {\n  app.use(getProductionMiddleware());\n} else {\n  app.use(getDevelopmentMiddleware());\n}\n\n// Global input sanitization\napp.use(sanitizeInput());\n\n// ==========================================\n// Authentication Routes\n// ==========================================\n\n// Login endpoint with strict rate limiting\napp.post('/api/auth/login', \n  getAuthRateLimit(),\n  validateUserCredentials(),\n  async (req, res) => {\n    try {\n      // Login logic here\n      res.json({ \n        status: 'success', \n        token: 'jwt-token',\n        user: { id: 1, username: 'user' }\n      });\n    } catch (error) {\n      res.status(401).json({ \n        status: 'error', \n        error: { code: 'LOGIN_FAILED', message: 'Invalid credentials' }\n      });\n    }\n  }\n);\n\n// Token refresh endpoint\napp.post('/api/auth/refresh',\n  authenticate,\n  async (req, res) => {\n    try {\n      // Token refresh logic here\n      res.json({ \n        status: 'success', \n        token: 'new-jwt-token' \n      });\n    } catch (error) {\n      res.status(401).json({ \n        status: 'error', \n        error: { code: 'REFRESH_FAILED', message: 'Token refresh failed' }\n      });\n    }\n  }\n);\n\n// ==========================================\n// Deployment Routes with Security\n// ==========================================\n\n// Get deployment status (read-only, relaxed security)\napp.get('/api/deployments/:repository/status',\n  authenticateOptional,\n  requirePermission('deployment:read'),\n  async (req, res) => {\n    try {\n      // Get deployment status logic\n      res.json({ \n        status: 'success', \n        deployment: { status: 'running' }\n      });\n    } catch (error) {\n      res.status(500).json({ \n        status: 'error', \n        error: { code: 'STATUS_ERROR', message: 'Failed to get status' }\n      });\n    }\n  }\n);\n\n// Deploy endpoint (write operation, strict security)\napp.post('/api/deployments/:repository/deploy',\n  getSensitiveRateLimit(),\n  limitRequestSize(1024 * 1024), // 1MB limit for deployment requests\n  authenticate,\n  requirePermission('deployment:write'),\n  validateDeploymentRequest(),\n  async (req, res) => {\n    try {\n      // Deployment logic here\n      res.json({ \n        status: 'success', \n        deploymentId: 'deploy-123',\n        message: 'Deployment started'\n      });\n    } catch (error) {\n      res.status(500).json({ \n        status: 'error', \n        error: { code: 'DEPLOYMENT_ERROR', message: 'Deployment failed' }\n      });\n    }\n  }\n);\n\n// Rollback endpoint (sensitive operation, maximum security)\napp.post('/api/deployments/:repository/rollback',\n  getSensitiveRateLimit(),\n  authenticate,\n  requirePermission('deployment:rollback'),\n  validateRollbackRequest(),\n  async (req, res) => {\n    try {\n      // Rollback logic here\n      res.json({ \n        status: 'success', \n        message: 'Rollback completed'\n      });\n    } catch (error) {\n      res.status(500).json({ \n        status: 'error', \n        error: { code: 'ROLLBACK_ERROR', message: 'Rollback failed' }\n      });\n    }\n  }\n);\n\n// ==========================================\n// Webhook Routes with API Key Security\n// ==========================================\n\n// GitHub webhook endpoint\napp.post('/api/webhooks/github',\n  limitRequestSize(5 * 1024 * 1024), // 5MB limit for webhooks\n  authenticateApiKey,\n  requirePermission('webhook:receive'),\n  validateWebhookRequest(),\n  async (req, res) => {\n    try {\n      // Webhook processing logic here\n      res.json({ \n        status: 'success', \n        message: 'Webhook processed'\n      });\n    } catch (error) {\n      res.status(500).json({ \n        status: 'error', \n        error: { code: 'WEBHOOK_ERROR', message: 'Webhook processing failed' }\n      });\n    }\n  }\n);\n\n// ==========================================\n// Admin Routes with Maximum Security\n// ==========================================\n\n// User management (admin only)\napp.get('/api/admin/users',\n  authenticate,\n  requireAdmin(),\n  async (req, res) => {\n    try {\n      // Get users logic\n      res.json({ \n        status: 'success', \n        users: [] \n      });\n    } catch (error) {\n      res.status(500).json({ \n        status: 'error', \n        error: { code: 'USERS_ERROR', message: 'Failed to get users' }\n      });\n    }\n  }\n);\n\n// Create user (admin only, strict validation)\napp.post('/api/admin/users',\n  getSensitiveRateLimit(),\n  authenticate,\n  requireAdmin(),\n  validateUserRequest(),\n  async (req, res) => {\n    try {\n      // Create user logic\n      res.json({ \n        status: 'success', \n        user: { id: 1, username: req.body.username }\n      });\n    } catch (error) {\n      res.status(500).json({ \n        status: 'error', \n        error: { code: 'USER_CREATE_ERROR', message: 'Failed to create user' }\n      });\n    }\n  }\n);\n\n// System configuration (admin only)\napp.put('/api/admin/config',\n  getSensitiveRateLimit(),\n  authenticate,\n  requireAdmin(),\n  requirePermission('system:admin'),\n  async (req, res) => {\n    try {\n      // Update config logic\n      res.json({ \n        status: 'success', \n        message: 'Configuration updated'\n      });\n    } catch (error) {\n      res.status(500).json({ \n        status: 'error', \n        error: { code: 'CONFIG_ERROR', message: 'Failed to update configuration' }\n      });\n    }\n  }\n);\n\n// ==========================================\n// Monitoring and Health Check Routes\n// ==========================================\n\n// Health check (public, no authentication required)\napp.get('/api/health', (req, res) => {\n  res.json({ \n    status: 'success', \n    health: 'ok',\n    timestamp: new Date().toISOString()\n  });\n});\n\n// Metrics endpoint (authentication required)\napp.get('/api/metrics',\n  authenticate,\n  requirePermission('monitoring:read'),\n  async (req, res) => {\n    try {\n      // Metrics logic\n      res.json({ \n        status: 'success', \n        metrics: {} \n      });\n    } catch (error) {\n      res.status(500).json({ \n        status: 'error', \n        error: { code: 'METRICS_ERROR', message: 'Failed to get metrics' }\n      });\n    }\n  }\n);\n\n// ==========================================\n// Error Handling Middleware\n// ==========================================\n\n// 404 handler\napp.use('*', (req, res) => {\n  res.status(404).json({\n    status: 'error',\n    error: {\n      code: 'NOT_FOUND',\n      message: 'Endpoint not found',\n      timestamp: new Date().toISOString()\n    }\n  });\n});\n\n// Global error handler (must be last)\napp.use(getErrorHandler());\n\n// ==========================================\n// Helper Functions\n// ==========================================\n\nfunction validateUserCredentials() {\n  return [\n    body('username')\n      .isString()\n      .isLength({ min: 3, max: 30 })\n      .matches(/^[a-zA-Z0-9._-]+$/)\n      .withMessage('Invalid username format'),\n    \n    body('password')\n      .isString()\n      .isLength({ min: 8 })\n      .withMessage('Password must be at least 8 characters'),\n    \n    validateRequest\n  ];\n}\n\n// ==========================================\n// Security Best Practices Demonstrated\n// ==========================================\n\n/*\n1. **Authentication & Authorization**:\n   - JWT token authentication for users\n   - API key authentication for webhooks\n   - Role-based access control (RBAC)\n   - Permission-based authorization\n\n2. **Input Validation**:\n   - Comprehensive request validation\n   - Path traversal prevention\n   - SQL injection prevention\n   - XSS protection\n   - Command injection prevention\n\n3. **Rate Limiting**:\n   - General API rate limiting\n   - Strict rate limiting for authentication\n   - Sensitive operation rate limiting\n   - IP-based tracking\n\n4. **Security Headers**:\n   - Helmet.js for security headers\n   - CORS configuration\n   - Content Security Policy\n   - HSTS headers\n\n5. **Request Protection**:\n   - Request size limiting\n   - Input sanitization\n   - IP filtering (whitelist/blacklist)\n   - Suspicious activity detection\n\n6. **Audit Logging**:\n   - Authentication event logging\n   - Authorization event logging\n   - Security event logging\n   - Performance monitoring\n\n7. **Error Handling**:\n   - Secure error responses\n   - No internal information exposure\n   - Consistent error format\n   - Request tracking\n\n8. **Environment-Specific Security**:\n   - Production security stack\n   - Development security relaxation\n   - Configuration-based security\n*/\n\nmodule.exports = app;"],"mappingseY;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAfZ;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,OAAO;AAAA;AAAA,CAAAF,aAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEC,YAAY;EAAEC;AAAqB,CAAC;AAAA;AAAA,CAAAN,aAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,QAAQ,CAAC;AAChE,MAAM;EAAEG,iBAAiB;EAAEC,WAAW;EAAEC;AAAa,CAAC;AAAA;AAAA,CAAAT,aAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,iBAAiB,CAAC;AACnF,MAAM;EACJM,yBAAyB;EACzBC,uBAAuB;EACvBC,sBAAsB;EACtBC,aAAa;EACbC;AACF,CAAC;AAAA;AAAA,CAAAd,aAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,6BAA6B,CAAC;AAC1C,MAAM;EACJW,uBAAuB;EACvBC,wBAAwB;EACxBC,gBAAgB;EAChBC,qBAAqB;EACrBC;AACF,CAAC;AAAA;AAAA,CAAAnB,aAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,6BAA6B,CAAC;AAE1C,MAAMgB,GAAG;AAAA;AAAA,CAAApB,aAAA,GAAAG,CAAA,OAAGD,OAAO,CAAC,CAAC;;AAErB;AACA;AACA;AAAA;AAAAF,aAAA,GAAAG,CAAA;AAEAiB,GAAG,CAACC,GAAG,CAACnB,OAAO,CAACoB,IAAI,CAAC;EAAEC,KAAK,EAAE;AAAO,CAAC,CAAC,CAAC;AAAC;AAAAvB,aAAA,GAAAG,CAAA;AACzCiB,GAAG,CAACC,GAAG,CAACnB,OAAO,CAACsB,UAAU,CAAC;EAAEC,QAAQ,EAAE,IAAI;EAAEF,KAAK,EAAE;AAAO,CAAC,CAAC,CAAC;;AAE9D;AACA;AACA;;AAEA;AAAA;AAAAvB,aAAA,GAAAG,CAAA;AACA,IAAIuB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EAAA;EAAA5B,aAAA,GAAA6B,CAAA;EAAA7B,aAAA,GAAAG,CAAA;EACzCiB,GAAG,CAACC,GAAG,CAACN,uBAAuB,CAAC,CAAC,CAAC;AACpC,CAAC,MAAM;EAAA;EAAAf,aAAA,GAAA6B,CAAA;EAAA7B,aAAA,GAAAG,CAAA;EACLiB,GAAG,CAACC,GAAG,CAACL,wBAAwB,CAAC,CAAC,CAAC;AACrC;;AAEA;AAAA;AAAAhB,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACC,GAAG,CAACR,aAAa,CAAC,CAAC,CAAC;;AAExB;AACA;AACA;;AAEA;AAAA;AAAAb,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACU,IAAI,CAAC,iBAAiB,EACxBb,gBAAgB,CAAC,CAAC,EAClBc,uBAAuB,CAAC,CAAC,EACzB,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAO;IAClC,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAE;MAAsB;IAChE,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACU,IAAI,CAAC,mBAAmB,EAC1BzB,YAAY,EACZ,OAAO2B,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAuB;IACnE,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AACA;AACA;;AAEA;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACuB,GAAG,CAAC,qCAAqC,EAC3CrC,oBAAoB,EACpBC,iBAAiB,CAAC,iBAAiB,CAAC,EACpC,OAAOyB,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBS,UAAU,EAAE;QAAET,MAAM,EAAE;MAAU;IAClC,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAE;MAAuB;IACjE,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACU,IAAI,CAAC,qCAAqC,EAC5CZ,qBAAqB,CAAC,CAAC,EACvBJ,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC;AAAE;AAC/BT,YAAY,EACZE,iBAAiB,CAAC,kBAAkB,CAAC,EACrCG,yBAAyB,CAAC,CAAC,EAC3B,OAAOsB,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBU,YAAY,EAAE,YAAY;MAC1BH,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAoB;IAClE,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACU,IAAI,CAAC,uCAAuC,EAC9CZ,qBAAqB,CAAC,CAAC,EACvBb,YAAY,EACZE,iBAAiB,CAAC,qBAAqB,CAAC,EACxCI,uBAAuB,CAAC,CAAC,EACzB,OAAOqB,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBO,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAkB;IAC9D,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AACA;AACA;;AAEA;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACU,IAAI,CAAC,sBAAsB,EAC7BhB,gBAAgB,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;AAAE;AACnCgC,kBAAkB,EAClBvC,iBAAiB,CAAC,iBAAiB,CAAC,EACpCK,sBAAsB,CAAC,CAAC,EACxB,OAAOoB,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBO,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAE;MAA4B;IACvE,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AACA;AACA;;AAEA;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACuB,GAAG,CAAC,kBAAkB,EACxBtC,YAAY,EACZI,YAAY,CAAC,CAAC,EACd,OAAOuB,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBY,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOP,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAE;MAAsB;IAC/D,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACU,IAAI,CAAC,kBAAkB,EACzBZ,qBAAqB,CAAC,CAAC,EACvBb,YAAY,EACZI,YAAY,CAAC,CAAC,EACduC,mBAAmB,CAAC,CAAC,EACrB,OAAOhB,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBE,IAAI,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAEP,GAAG,CAACiB,IAAI,CAACV;MAAS;IAC7C,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,mBAAmB;QAAEC,OAAO,EAAE;MAAwB;IACvE,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAAC8B,GAAG,CAAC,mBAAmB,EACzBhC,qBAAqB,CAAC,CAAC,EACvBb,YAAY,EACZI,YAAY,CAAC,CAAC,EACdF,iBAAiB,CAAC,cAAc,CAAC,EACjC,OAAOyB,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBO,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAE;MAAiC;IAC3E,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AACA;AACA;;AAEA;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACuB,GAAG,CAAC,aAAa,EAAE,CAACX,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EACnC8B,GAAG,CAACX,IAAI,CAAC;IACPa,MAAM,EAAE,SAAS;IACjBgB,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACpC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AAAA;AAAAtD,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACuB,GAAG,CAAC,cAAc,EACpBtC,YAAY,EACZE,iBAAiB,CAAC,iBAAiB,CAAC,EACpC,OAAOyB,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EAClB,IAAI;IAAA;IAAAH,aAAA,GAAAG,CAAA;IACF;IACA8B,GAAG,CAACX,IAAI,CAAC;MACPa,MAAM,EAAE,SAAS;MACjBoB,OAAO,EAAE,CAAC;IACZ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOf,KAAK,EAAE;IAAA;IAAAxC,aAAA,GAAAG,CAAA;IACd8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;MACnBa,MAAM,EAAE,OAAO;MACfK,KAAK,EAAE;QAAEC,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAE;MAAwB;IACnE,CAAC,CAAC;EACJ;AACF,CACF,CAAC;;AAED;AACA;AACA;;AAEA;AAAA;AAAA1C,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACC,GAAG,CAAC,GAAG,EAAE,CAACW,GAAG,EAAEC,GAAG,KAAK;EAAA;EAAAjC,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EACzB8B,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACb,IAAI,CAAC;IACnBa,MAAM,EAAE,OAAO;IACfK,KAAK,EAAE;MACLC,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE,oBAAoB;MAC7BU,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IACpC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AAAA;AAAAtD,aAAA,GAAAG,CAAA;AACAiB,GAAG,CAACC,GAAG,CAACF,eAAe,CAAC,CAAC,CAAC;;AAE1B;AACA;AACA;;AAEA,SAASY,uBAAuBA,CAAA,EAAG;EAAA;EAAA/B,aAAA,GAAAkC,CAAA;EAAAlC,aAAA,GAAAG,CAAA;EACjC,OAAO,CACL8C,IAAI,CAAC,UAAU,CAAC,CACbO,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC;IAAEC,GAAG,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC,CAAC,CAC7BC,OAAO,CAAC,mBAAmB,CAAC,CAC5BC,WAAW,CAAC,yBAAyB,CAAC,EAEzCZ,IAAI,CAAC,UAAU,CAAC,CACbO,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC;IAAEC,GAAG,EAAE;EAAE,CAAC,CAAC,CACpBG,WAAW,CAAC,wCAAwC,CAAC,EAExDC,eAAe,CAChB;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA;AAAA9D,aAAA,GAAAG,CAAA;AAkDA4D,MAAM,CAACC,OAAO,GAAG5C,GAAG","ignoreList":[]}