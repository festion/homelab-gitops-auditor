{"version":3,"names":["express","require","cors","helmet","rateLimit","createServer","Server","crypto","v4","uuidv4","fs","promises","path","exec","spawn","promisify","DeploymentQueue","WebhookHandler","MCPCoordinator","DeploymentRepository","Logger","Validator","Security","execAsync","HomeAssistantDeployer","constructor","configPath","join","__dirname","config","app","server","io","logger","deploymentQueue","webhookHandler","mcpCoordinator","deploymentRepository","validator","security","currentDeployment","isProcessingQueue","serviceStartTime","Date","deploymentStates","QUEUED","IN_PROGRESS","COMPLETED","FAILED","ROLLED_BACK","initialize","loadConfiguration","initializeLogger","initializeDatabase","initializeDependencies","setupExpress","setupRoutes","setupWebSocket","setupSignalHandlers","info","component","version","error","message","stack","console","configData","readFile","JSON","parse","api","port","process","env","DEPLOYER_PORT","host","DEPLOYER_HOST","corsOrigins","CORS_ORIGINS","split","webhook","secret","GITHUB_WEBHOOK_SECRET","allowedEvents","mcp","networkFs","wrapper","NETWORK_MCP_WRAPPER","timeout","github","GITHUB_MCP_WRAPPER","Error","level","loggingConfig","format","logFormat","destinations","logDestinations","logFile","maxSize","maxLogSize","retention","logRetentionDays","database","type","networkFsWrapper","githubWrapper","use","contentSecurityPolicy","directives","defaultSrc","styleSrc","scriptSrc","imgSrc","origin","credentials","methods","allowedHeaders","limiter","windowMs","max","standardHeaders","legacyHeaders","json","limit","urlencoded","extended","req","res","next","correlationId","method","url","userAgent","get","ip","handleHealthCheck","bind","handleServiceStatus","post","handleDeploy","handleGetStatus","handleRollback","handleGetHistory","handleGetLogs","handleWebhook","handleQueueStatus","delete","handleClearQueue","err","status","timestamp","toISOString","warn","pingTimeout","pingInterval","on","socket","clientId","socketId","id","data","channel","debug","emit","queueLength","getQueueLength","reason","gracefulShutdown","signal","updateDeploymentStatus","close","cleanup","exit","promise","health","uptime","Math","floor","now","getTime","mcpHealth","checkHealth","dependencies","queue","length","isHealthy","Object","values","every","dep","service","deploymentRequest","validateDeploymentRequest","body","deploymentId","deployment","repository","homeAssistantConfig","branch","requestedBy","requestedAt","priority","dryRun","parameters","enqueue","createDeployment","broadcastUpdate","setImmediate","processDeploymentQueue","queuePosition","query","getDeployment","recentDeployments","getRecentDeployments","currentStatus","rollbackId","triggerRollback","originalDeploymentId","page","parseInt","min","history","getDeploymentHistory","lines","logs","getDeploymentLogs","signature","event","delivery","validateSignature","result","processWebhook","payload","shouldDeploy","triggerDeployment","trigger","webhookData","queueStatus","getStatus","clearedCount","clear","params","originalDeployment","backupPath","rollback","hasItems","dequeue","executeDeployment","completedAt","startedAt","executeRollback","executeNormalDeployment","scriptPath","command","filter","Boolean","DEPLOYMENT_ID","REPOSITORY","BRANCH","LOG_FILE","stdout","stderr","deploymentTimeout","maxBuffer","addDeploymentLog","ROLLBACK_MODE","BACKUP_PATH","rolledBackAt","additionalData","updateDeployment","updatedAt","to","start","listen","pid","log","main","module","catch","exports"],"sources":["home-assistant-deployer.js"],"sourcesContent":["\n\nconst express = require('express');\nconst cors = require('cors');\nconst helmet = require('helmet');\nconst rateLimit = require('express-rate-limit');\nconst { createServer } = require('http');\nconst { Server } = require('socket.io');\nconst crypto = require('crypto');\nconst { v4: uuidv4 } = require('uuid');\nconst fs = require('fs').promises;\nconst path = require('path');\nconst { exec, spawn } = require('child_process');\nconst { promisify } = require('util');\n\nconst DeploymentQueue = require('./deployment-queue');\nconst WebhookHandler = require('./webhook-handler');\nconst MCPCoordinator = require('./mcp-coordinator');\nconst DeploymentRepository = require('./database/deployment-repository');\nconst Logger = require('./utils/logger');\nconst Validator = require('./utils/validator');\nconst Security = require('./utils/security');\n\nconst execAsync = promisify(exec);\n\nclass HomeAssistantDeployer {\n  constructor(configPath = null) {\n    this.configPath = configPath || path.join(__dirname, '../../config/deployment-config.json');\n    this.config = null;\n    this.app = null;\n    this.server = null;\n    this.io = null;\n    this.logger = null;\n    \n    this.deploymentQueue = null;\n    this.webhookHandler = null;\n    this.mcpCoordinator = null;\n    this.deploymentRepository = null;\n    this.validator = null;\n    this.security = null;\n    \n    this.currentDeployment = null;\n    this.isProcessingQueue = false;\n    this.serviceStartTime = new Date();\n    \n    this.deploymentStates = {\n      QUEUED: 'queued',\n      IN_PROGRESS: 'in-progress',\n      COMPLETED: 'completed',\n      FAILED: 'failed',\n      ROLLED_BACK: 'rolled-back'\n    };\n  }\n\n  async initialize() {\n    try {\n      await this.loadConfiguration();\n      this.initializeLogger();\n      await this.initializeDatabase();\n      await this.initializeDependencies();\n      this.setupExpress();\n      this.setupRoutes();\n      this.setupWebSocket();\n      this.setupSignalHandlers();\n      \n      this.logger.info('Home Assistant Deployer service initialized successfully', {\n        component: 'HomeAssistantDeployer',\n        version: '1.0.0',\n        configPath: this.configPath\n      });\n      \n      return true;\n    } catch (error) {\n      if (this.logger) {\n        this.logger.error('Failed to initialize service', { error: error.message, stack: error.stack });\n      } else {\n        console.error('Failed to initialize service:', error);\n      }\n      throw error;\n    }\n  }\n\n  async loadConfiguration() {\n    try {\n      const configData = await fs.readFile(this.configPath, 'utf8');\n      this.config = JSON.parse(configData);\n      \n      this.config.api = {\n        port: process.env.DEPLOYER_PORT || 3071,\n        host: process.env.DEPLOYER_HOST || '0.0.0.0',\n        corsOrigins: process.env.CORS_ORIGINS ? process.env.CORS_ORIGINS.split(',') : ['http://192.168.1.58']\n      };\n      \n      this.config.webhook = {\n        secret: process.env.GITHUB_WEBHOOK_SECRET || 'github-webhook-secret',\n        allowedEvents: ['repository_dispatch', 'push']\n      };\n      \n      this.config.mcp = {\n        networkFs: {\n          wrapper: process.env.NETWORK_MCP_WRAPPER || '/home/dev/workspace/network-mcp-wrapper.sh',\n          timeout: 30000\n        },\n        github: {\n          wrapper: process.env.GITHUB_MCP_WRAPPER || '/home/dev/workspace/github-wrapper.sh',\n          timeout: 30000\n        }\n      };\n      \n    } catch (error) {\n      throw new Error(`Failed to load configuration: ${error.message}`);\n    }\n  }\n\n  initializeLogger() {\n    this.logger = new Logger({\n      level: this.config.loggingConfig?.level || 'info',\n      format: this.config.loggingConfig?.logFormat || 'json',\n      destinations: this.config.loggingConfig?.logDestinations || ['file', 'console'],\n      logFile: path.join(__dirname, '../../', this.config.loggingConfig?.logFile || 'logs/deployment.log'),\n      maxSize: this.config.loggingConfig?.maxLogSize || '100MB',\n      retention: this.config.loggingConfig?.logRetentionDays || 30\n    });\n  }\n\n  async initializeDatabase() {\n    this.deploymentRepository = new DeploymentRepository({\n      database: {\n        type: 'sqlite',\n        path: path.join(__dirname, '../../logs/deployments.db')\n      }\n    });\n    \n    await this.deploymentRepository.initialize();\n  }\n\n  async initializeDependencies() {\n    this.validator = new Validator(this.config);\n    this.security = new Security(this.config);\n    \n    this.deploymentQueue = new DeploymentQueue({\n      logger: this.logger,\n      deploymentRepository: this.deploymentRepository\n    });\n    \n    this.webhookHandler = new WebhookHandler({\n      secret: this.config.webhook.secret,\n      allowedEvents: this.config.webhook.allowedEvents,\n      logger: this.logger,\n      security: this.security\n    });\n    \n    this.mcpCoordinator = new MCPCoordinator({\n      networkFsWrapper: this.config.mcp.networkFs.wrapper,\n      githubWrapper: this.config.mcp.github.wrapper,\n      timeout: this.config.mcp.networkFs.timeout,\n      logger: this.logger\n    });\n    \n    await this.mcpCoordinator.initialize();\n  }\n\n  setupExpress() {\n    this.app = express();\n    this.server = createServer(this.app);\n    \n    this.app.use(helmet({\n      contentSecurityPolicy: {\n        directives: {\n          defaultSrc: [\"'self'\"],\n          styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n          scriptSrc: [\"'self'\"],\n          imgSrc: [\"'self'\", \"data:\", \"https:\"]\n        }\n      }\n    }));\n    \n    this.app.use(cors({\n      origin: this.config.api.corsOrigins,\n      credentials: true,\n      methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n      allowedHeaders: ['Content-Type', 'Authorization', 'X-GitHub-Event', 'X-GitHub-Delivery', 'X-Hub-Signature-256']\n    }));\n    \n    const limiter = rateLimit({\n      windowMs: 15 * 60 * 1000,\n      max: 100,\n      standardHeaders: true,\n      legacyHeaders: false,\n      message: {\n        error: 'Too many requests from this IP, please try again later.'\n      }\n    });\n    \n    this.app.use(limiter);\n    this.app.use(express.json({ limit: '10mb' }));\n    this.app.use(express.urlencoded({ extended: true, limit: '10mb' }));\n    \n    this.app.use((req, res, next) => {\n      req.correlationId = uuidv4();\n      this.logger.info('Incoming request', {\n        method: req.method,\n        url: req.url,\n        correlationId: req.correlationId,\n        userAgent: req.get('User-Agent'),\n        ip: req.ip\n      });\n      next();\n    });\n  }\n\n  setupRoutes() {\n    this.app.get('/health', this.handleHealthCheck.bind(this));\n    this.app.get('/api/status', this.handleServiceStatus.bind(this));\n    \n    this.app.post('/api/deployments/home-assistant-config/deploy', this.handleDeploy.bind(this));\n    this.app.get('/api/deployments/home-assistant-config/status', this.handleGetStatus.bind(this));\n    this.app.post('/api/deployments/home-assistant-config/rollback', this.handleRollback.bind(this));\n    this.app.get('/api/deployments/home-assistant-config/history', this.handleGetHistory.bind(this));\n    this.app.get('/api/deployments/home-assistant-config/logs', this.handleGetLogs.bind(this));\n    \n    this.app.post('/api/webhooks/github', this.handleWebhook.bind(this));\n    \n    this.app.get('/api/queue/status', this.handleQueueStatus.bind(this));\n    this.app.delete('/api/queue/clear', this.handleClearQueue.bind(this));\n    \n    this.app.use((err, req, res, next) => {\n      this.logger.error('Unhandled error', {\n        error: err.message,\n        stack: err.stack,\n        correlationId: req.correlationId,\n        url: req.url,\n        method: req.method\n      });\n      \n      res.status(500).json({\n        error: 'Internal server error',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    });\n    \n    this.app.use((req, res) => {\n      this.logger.warn('Route not found', {\n        url: req.url,\n        method: req.method,\n        correlationId: req.correlationId\n      });\n      \n      res.status(404).json({\n        error: 'Route not found',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    });\n  }\n\n  setupWebSocket() {\n    this.io = new Server(this.server, {\n      cors: {\n        origin: this.config.api.corsOrigins,\n        methods: ['GET', 'POST']\n      },\n      pingTimeout: 60000,\n      pingInterval: 25000\n    });\n    \n    this.io.on('connection', (socket) => {\n      const clientId = uuidv4();\n      this.logger.info('WebSocket client connected', { clientId, socketId: socket.id });\n      \n      socket.on('subscribe', (data) => {\n        const { channel } = data;\n        if (channel === 'deployments') {\n          socket.join('deployments');\n          this.logger.debug('Client subscribed to deployments channel', { clientId, socketId: socket.id });\n          \n          socket.emit('status', {\n            currentDeployment: this.currentDeployment,\n            queueLength: this.deploymentQueue ? this.deploymentQueue.getQueueLength() : 0,\n            timestamp: new Date().toISOString()\n          });\n        }\n      });\n      \n      socket.on('disconnect', (reason) => {\n        this.logger.info('WebSocket client disconnected', { clientId, socketId: socket.id, reason });\n      });\n    });\n  }\n\n  setupSignalHandlers() {\n    const gracefulShutdown = async (signal) => {\n      this.logger.info(`Received ${signal}, initiating graceful shutdown...`);\n      \n      try {\n        if (this.currentDeployment) {\n          this.logger.warn('Deployment in progress during shutdown, marking as failed');\n          await this.updateDeploymentStatus(this.currentDeployment.id, this.deploymentStates.FAILED, {\n            error: 'Service shutdown during deployment'\n          });\n        }\n        \n        if (this.server) {\n          this.server.close(() => {\n            this.logger.info('HTTP server closed');\n          });\n        }\n        \n        if (this.mcpCoordinator) {\n          await this.mcpCoordinator.cleanup();\n        }\n        \n        if (this.deploymentRepository) {\n          await this.deploymentRepository.close();\n        }\n        \n        this.logger.info('Graceful shutdown completed');\n        process.exit(0);\n      } catch (error) {\n        this.logger.error('Error during graceful shutdown', { error: error.message });\n        process.exit(1);\n      }\n    };\n    \n    process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));\n    process.on('SIGINT', () => gracefulShutdown('SIGINT'));\n    \n    process.on('uncaughtException', (error) => {\n      this.logger.error('Uncaught exception', { error: error.message, stack: error.stack });\n      process.exit(1);\n    });\n    \n    process.on('unhandledRejection', (reason, promise) => {\n      this.logger.error('Unhandled promise rejection', { reason, promise });\n    });\n  }\n\n  async handleHealthCheck(req, res) {\n    try {\n      const health = {\n        status: 'healthy',\n        timestamp: new Date().toISOString(),\n        uptime: Math.floor((Date.now() - this.serviceStartTime.getTime()) / 1000),\n        version: '1.0.0',\n        correlationId: req.correlationId\n      };\n      \n      const mcpHealth = await this.mcpCoordinator.checkHealth();\n      health.dependencies = {\n        mcp: mcpHealth,\n        database: await this.deploymentRepository.checkHealth(),\n        queue: {\n          status: this.deploymentQueue ? 'healthy' : 'unhealthy',\n          length: this.deploymentQueue ? this.deploymentQueue.getQueueLength() : 0\n        }\n      };\n      \n      const isHealthy = Object.values(health.dependencies).every(dep => \n        dep.status === 'healthy' || dep.status === 'connected'\n      );\n      \n      if (!isHealthy) {\n        health.status = 'degraded';\n        res.status(503);\n      }\n      \n      res.json(health);\n    } catch (error) {\n      this.logger.error('Health check failed', { error: error.message, correlationId: req.correlationId });\n      res.status(503).json({\n        status: 'unhealthy',\n        error: error.message,\n        timestamp: new Date().toISOString(),\n        correlationId: req.correlationId\n      });\n    }\n  }\n\n  async handleServiceStatus(req, res) {\n    try {\n      const status = {\n        service: 'home-assistant-deployer',\n        version: '1.0.0',\n        uptime: Math.floor((Date.now() - this.serviceStartTime.getTime()) / 1000),\n        currentDeployment: this.currentDeployment,\n        queueLength: this.deploymentQueue.getQueueLength(),\n        isProcessingQueue: this.isProcessingQueue,\n        timestamp: new Date().toISOString(),\n        correlationId: req.correlationId\n      };\n      \n      res.json(status);\n    } catch (error) {\n      this.logger.error('Failed to get service status', { error: error.message, correlationId: req.correlationId });\n      res.status(500).json({\n        error: 'Failed to get service status',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async handleDeploy(req, res) {\n    try {\n      const deploymentRequest = await this.validator.validateDeploymentRequest(req.body);\n      \n      const deploymentId = uuidv4();\n      const deployment = {\n        id: deploymentId,\n        repository: deploymentRequest.repository || this.config.homeAssistantConfig.repository,\n        branch: deploymentRequest.branch || this.config.homeAssistantConfig.branch || 'main',\n        requestedBy: deploymentRequest.requestedBy || 'api',\n        requestedAt: new Date().toISOString(),\n        correlationId: req.correlationId,\n        priority: deploymentRequest.priority || 'normal',\n        dryRun: deploymentRequest.dryRun || false,\n        parameters: deploymentRequest.parameters || {}\n      };\n      \n      await this.deploymentQueue.enqueue(deployment);\n      await this.deploymentRepository.createDeployment(deployment);\n      \n      this.logger.info('Deployment queued', { deploymentId, correlationId: req.correlationId });\n      \n      this.broadcastUpdate('deployment_queued', deployment);\n      \n      if (!this.isProcessingQueue) {\n        setImmediate(() => this.processDeploymentQueue());\n      }\n      \n      res.status(202).json({\n        deploymentId,\n        status: this.deploymentStates.QUEUED,\n        message: 'Deployment request accepted and queued',\n        queuePosition: this.deploymentQueue.getQueueLength(),\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n      \n    } catch (error) {\n      this.logger.error('Failed to queue deployment', { error: error.message, correlationId: req.correlationId });\n      res.status(400).json({\n        error: error.message,\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async handleGetStatus(req, res) {\n    try {\n      const deploymentId = req.query.deploymentId;\n      \n      if (deploymentId) {\n        const deployment = await this.deploymentRepository.getDeployment(deploymentId);\n        if (!deployment) {\n          return res.status(404).json({\n            error: 'Deployment not found',\n            deploymentId,\n            correlationId: req.correlationId,\n            timestamp: new Date().toISOString()\n          });\n        }\n        \n        res.json({\n          deployment,\n          correlationId: req.correlationId,\n          timestamp: new Date().toISOString()\n        });\n      } else {\n        const status = {\n          currentDeployment: this.currentDeployment,\n          queueLength: this.deploymentQueue.getQueueLength(),\n          isProcessingQueue: this.isProcessingQueue,\n          recentDeployments: await this.deploymentRepository.getRecentDeployments(5),\n          correlationId: req.correlationId,\n          timestamp: new Date().toISOString()\n        };\n        \n        res.json(status);\n      }\n    } catch (error) {\n      this.logger.error('Failed to get deployment status', { error: error.message, correlationId: req.correlationId });\n      res.status(500).json({\n        error: 'Failed to get deployment status',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async handleRollback(req, res) {\n    try {\n      const { deploymentId } = req.body;\n      \n      if (!deploymentId) {\n        return res.status(400).json({\n          error: 'Deployment ID is required',\n          correlationId: req.correlationId,\n          timestamp: new Date().toISOString()\n        });\n      }\n      \n      const deployment = await this.deploymentRepository.getDeployment(deploymentId);\n      if (!deployment) {\n        return res.status(404).json({\n          error: 'Deployment not found',\n          deploymentId,\n          correlationId: req.correlationId,\n          timestamp: new Date().toISOString()\n        });\n      }\n      \n      if (deployment.status !== this.deploymentStates.COMPLETED && deployment.status !== this.deploymentStates.FAILED) {\n        return res.status(400).json({\n          error: 'Can only rollback completed or failed deployments',\n          deploymentId,\n          currentStatus: deployment.status,\n          correlationId: req.correlationId,\n          timestamp: new Date().toISOString()\n        });\n      }\n      \n      const rollbackId = await this.triggerRollback(deploymentId, req.correlationId);\n      \n      res.json({\n        rollbackId,\n        originalDeploymentId: deploymentId,\n        message: 'Rollback initiated successfully',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n      \n    } catch (error) {\n      this.logger.error('Failed to initiate rollback', { error: error.message, correlationId: req.correlationId });\n      res.status(500).json({\n        error: 'Failed to initiate rollback',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async handleGetHistory(req, res) {\n    try {\n      const page = parseInt(req.query.page) || 1;\n      const limit = Math.min(parseInt(req.query.limit) || 20, 100);\n      const status = req.query.status;\n      \n      const history = await this.deploymentRepository.getDeploymentHistory({\n        page,\n        limit,\n        status\n      });\n      \n      res.json({\n        ...history,\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n      \n    } catch (error) {\n      this.logger.error('Failed to get deployment history', { error: error.message, correlationId: req.correlationId });\n      res.status(500).json({\n        error: 'Failed to get deployment history',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async handleGetLogs(req, res) {\n    try {\n      const deploymentId = req.query.deploymentId;\n      const lines = Math.min(parseInt(req.query.lines) || 100, 1000);\n      \n      if (!deploymentId) {\n        return res.status(400).json({\n          error: 'Deployment ID is required',\n          correlationId: req.correlationId,\n          timestamp: new Date().toISOString()\n        });\n      }\n      \n      const logs = await this.deploymentRepository.getDeploymentLogs(deploymentId, lines);\n      \n      res.json({\n        deploymentId,\n        logs,\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n      \n    } catch (error) {\n      this.logger.error('Failed to get deployment logs', { error: error.message, correlationId: req.correlationId });\n      res.status(500).json({\n        error: 'Failed to get deployment logs',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async handleWebhook(req, res) {\n    try {\n      const signature = req.get('X-Hub-Signature-256');\n      const event = req.get('X-GitHub-Event');\n      const delivery = req.get('X-GitHub-Delivery');\n      \n      if (!await this.webhookHandler.validateSignature(signature, req.body)) {\n        this.logger.warn('Invalid webhook signature', { delivery, correlationId: req.correlationId });\n        return res.status(401).json({\n          error: 'Invalid signature',\n          correlationId: req.correlationId,\n          timestamp: new Date().toISOString()\n        });\n      }\n      \n      const result = await this.webhookHandler.processWebhook({\n        event,\n        delivery,\n        payload: req.body,\n        correlationId: req.correlationId\n      });\n      \n      if (result.shouldDeploy) {\n        const deploymentId = await this.triggerDeployment({\n          repository: result.repository,\n          branch: result.branch,\n          requestedBy: 'webhook',\n          trigger: 'github_webhook',\n          correlationId: req.correlationId,\n          webhookData: {\n            event,\n            delivery,\n            repository: result.repository,\n            branch: result.branch\n          }\n        });\n        \n        result.deploymentId = deploymentId;\n      }\n      \n      res.json({\n        ...result,\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n      \n    } catch (error) {\n      this.logger.error('Webhook processing failed', { error: error.message, correlationId: req.correlationId });\n      res.status(500).json({\n        error: 'Webhook processing failed',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async handleQueueStatus(req, res) {\n    try {\n      const queueStatus = await this.deploymentQueue.getStatus();\n      \n      res.json({\n        ...queueStatus,\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n      \n    } catch (error) {\n      this.logger.error('Failed to get queue status', { error: error.message, correlationId: req.correlationId });\n      res.status(500).json({\n        error: 'Failed to get queue status',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async handleClearQueue(req, res) {\n    try {\n      const clearedCount = await this.deploymentQueue.clear();\n      \n      this.logger.info('Deployment queue cleared', { clearedCount, correlationId: req.correlationId });\n      \n      this.broadcastUpdate('queue_cleared', { clearedCount });\n      \n      res.json({\n        message: 'Queue cleared successfully',\n        clearedCount,\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n      \n    } catch (error) {\n      this.logger.error('Failed to clear queue', { error: error.message, correlationId: req.correlationId });\n      res.status(500).json({\n        error: 'Failed to clear queue',\n        correlationId: req.correlationId,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async triggerDeployment(params) {\n    const deploymentId = uuidv4();\n    const deployment = {\n      id: deploymentId,\n      repository: params.repository || this.config.homeAssistantConfig.repository,\n      branch: params.branch || this.config.homeAssistantConfig.branch || 'main',\n      requestedBy: params.requestedBy || 'api',\n      requestedAt: new Date().toISOString(),\n      correlationId: params.correlationId || uuidv4(),\n      priority: params.priority || 'normal',\n      trigger: params.trigger || 'manual',\n      webhookData: params.webhookData || null,\n      parameters: params.parameters || {}\n    };\n    \n    await this.deploymentQueue.enqueue(deployment);\n    await this.deploymentRepository.createDeployment(deployment);\n    \n    this.logger.info('Deployment triggered', { deploymentId, trigger: deployment.trigger });\n    \n    this.broadcastUpdate('deployment_queued', deployment);\n    \n    if (!this.isProcessingQueue) {\n      setImmediate(() => this.processDeploymentQueue());\n    }\n    \n    return deploymentId;\n  }\n\n  async triggerRollback(originalDeploymentId, correlationId) {\n    const originalDeployment = await this.deploymentRepository.getDeployment(originalDeploymentId);\n    if (!originalDeployment || !originalDeployment.backupPath) {\n      throw new Error('No backup available for rollback');\n    }\n    \n    const rollbackId = uuidv4();\n    const rollback = {\n      id: rollbackId,\n      type: 'rollback',\n      originalDeploymentId,\n      backupPath: originalDeployment.backupPath,\n      requestedBy: 'api',\n      requestedAt: new Date().toISOString(),\n      correlationId: correlationId || uuidv4(),\n      priority: 'high'\n    };\n    \n    await this.deploymentQueue.enqueue(rollback);\n    await this.deploymentRepository.createDeployment(rollback);\n    \n    this.logger.info('Rollback triggered', { rollbackId, originalDeploymentId });\n    \n    this.broadcastUpdate('rollback_queued', rollback);\n    \n    if (!this.isProcessingQueue) {\n      setImmediate(() => this.processDeploymentQueue());\n    }\n    \n    return rollbackId;\n  }\n\n  async processDeploymentQueue() {\n    if (this.isProcessingQueue) {\n      return;\n    }\n    \n    this.isProcessingQueue = true;\n    \n    try {\n      while (this.deploymentQueue.hasItems()) {\n        const deployment = await this.deploymentQueue.dequeue();\n        if (!deployment) break;\n        \n        this.currentDeployment = deployment;\n        this.broadcastUpdate('deployment_started', deployment);\n        \n        try {\n          await this.executeDeployment(deployment);\n        } catch (error) {\n          this.logger.error('Deployment execution failed', {\n            deploymentId: deployment.id,\n            error: error.message,\n            stack: error.stack\n          });\n          \n          await this.updateDeploymentStatus(deployment.id, this.deploymentStates.FAILED, {\n            error: error.message,\n            completedAt: new Date().toISOString()\n          });\n          \n          this.broadcastUpdate('deployment_failed', { ...deployment, error: error.message });\n        }\n        \n        this.currentDeployment = null;\n      }\n    } finally {\n      this.isProcessingQueue = false;\n    }\n  }\n\n  async executeDeployment(deployment) {\n    this.logger.info('Starting deployment execution', { deploymentId: deployment.id });\n    \n    await this.updateDeploymentStatus(deployment.id, this.deploymentStates.IN_PROGRESS, {\n      startedAt: new Date().toISOString()\n    });\n    \n    try {\n      if (deployment.type === 'rollback') {\n        await this.executeRollback(deployment);\n      } else {\n        await this.executeNormalDeployment(deployment);\n      }\n      \n      await this.updateDeploymentStatus(deployment.id, this.deploymentStates.COMPLETED, {\n        completedAt: new Date().toISOString()\n      });\n      \n      this.logger.info('Deployment completed successfully', { deploymentId: deployment.id });\n      this.broadcastUpdate('deployment_completed', deployment);\n      \n    } catch (error) {\n      await this.updateDeploymentStatus(deployment.id, this.deploymentStates.FAILED, {\n        error: error.message,\n        completedAt: new Date().toISOString()\n      });\n      throw error;\n    }\n  }\n\n  async executeNormalDeployment(deployment) {\n    const scriptPath = path.join(__dirname, '../deploy-home-assistant-config.sh');\n    const logFile = path.join(__dirname, '../../logs', `deployment-${deployment.id}.log`);\n    \n    const command = [\n      scriptPath,\n      deployment.dryRun ? '--dry-run' : '',\n      '--verbose'\n    ].filter(Boolean).join(' ');\n    \n    this.logger.info('Executing deployment script', { \n      deploymentId: deployment.id,\n      command,\n      logFile\n    });\n    \n    const env = {\n      ...process.env,\n      DEPLOYMENT_ID: deployment.id,\n      REPOSITORY: deployment.repository,\n      BRANCH: deployment.branch,\n      LOG_FILE: logFile\n    };\n    \n    try {\n      const { stdout, stderr } = await execAsync(command, {\n        env,\n        timeout: this.config.homeAssistantConfig.deploymentTimeout * 1000 || 300000,\n        maxBuffer: 1024 * 1024 * 10\n      });\n      \n      await this.deploymentRepository.addDeploymentLog(deployment.id, 'stdout', stdout);\n      if (stderr) {\n        await this.deploymentRepository.addDeploymentLog(deployment.id, 'stderr', stderr);\n      }\n      \n      this.logger.info('Deployment script completed', { deploymentId: deployment.id });\n      \n    } catch (error) {\n      await this.deploymentRepository.addDeploymentLog(deployment.id, 'error', error.message);\n      throw new Error(`Deployment script failed: ${error.message}`);\n    }\n  }\n\n  async executeRollback(rollback) {\n    this.logger.info('Executing rollback', { \n      rollbackId: rollback.id,\n      originalDeploymentId: rollback.originalDeploymentId,\n      backupPath: rollback.backupPath\n    });\n    \n    const scriptPath = path.join(__dirname, '../deploy-home-assistant-config.sh');\n    const command = `${scriptPath} --rollback --backup-path \"${rollback.backupPath}\" --verbose`;\n    \n    const env = {\n      ...process.env,\n      DEPLOYMENT_ID: rollback.id,\n      ROLLBACK_MODE: 'true',\n      BACKUP_PATH: rollback.backupPath\n    };\n    \n    try {\n      const { stdout, stderr } = await execAsync(command, {\n        env,\n        timeout: 120000,\n        maxBuffer: 1024 * 1024 * 10\n      });\n      \n      await this.deploymentRepository.addDeploymentLog(rollback.id, 'stdout', stdout);\n      if (stderr) {\n        await this.deploymentRepository.addDeploymentLog(rollback.id, 'stderr', stderr);\n      }\n      \n      await this.updateDeploymentStatus(rollback.originalDeploymentId, this.deploymentStates.ROLLED_BACK, {\n        rolledBackAt: new Date().toISOString(),\n        rollbackId: rollback.id\n      });\n      \n      this.logger.info('Rollback completed', { rollbackId: rollback.id });\n      \n    } catch (error) {\n      await this.deploymentRepository.addDeploymentLog(rollback.id, 'error', error.message);\n      throw new Error(`Rollback failed: ${error.message}`);\n    }\n  }\n\n  async updateDeploymentStatus(deploymentId, status, additionalData = {}) {\n    try {\n      await this.deploymentRepository.updateDeployment(deploymentId, {\n        status,\n        ...additionalData,\n        updatedAt: new Date().toISOString()\n      });\n      \n      this.broadcastUpdate('status_updated', {\n        deploymentId,\n        status,\n        ...additionalData\n      });\n      \n    } catch (error) {\n      this.logger.error('Failed to update deployment status', {\n        deploymentId,\n        status,\n        error: error.message\n      });\n    }\n  }\n\n  broadcastUpdate(event, data) {\n    if (this.io) {\n      this.io.to('deployments').emit(event, {\n        ...data,\n        timestamp: new Date().toISOString()\n      });\n    }\n  }\n\n  async start() {\n    try {\n      await this.initialize();\n      \n      this.server.listen(this.config.api.port, this.config.api.host, () => {\n        this.logger.info('Home Assistant Deployer service started', {\n          port: this.config.api.port,\n          host: this.config.api.host,\n          pid: process.pid\n        });\n        \n        console.log(`🚀 Home Assistant Deployer service running on http://${this.config.api.host}:${this.config.api.port}`);\n        console.log(`📊 Health check: http://${this.config.api.host}:${this.config.api.port}/health`);\n        console.log(`📋 API documentation: http://${this.config.api.host}:${this.config.api.port}/api/status`);\n      });\n      \n    } catch (error) {\n      this.logger.error('Failed to start service', { error: error.message, stack: error.stack });\n      process.exit(1);\n    }\n  }\n}\n\nif (require.main === module) {\n  const service = new HomeAssistantDeployer();\n  service.start().catch(console.error);\n}\n\nmodule.exports = HomeAssistantDeployer;"],"mappings":"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","ignoreList":[]}