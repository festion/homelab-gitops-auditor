f260ddb2407f84b1a1897d5056046f0f
/* istanbul ignore next */
function cov_2c3g0fu61j() {
  var path = "/home/dev/workspace/homelab-gitops-auditor/api/middleware/webhook-middleware.js";
  var hash = "a0e0dfc4108edb3b514acc8be0ed3f2b80dcbe69";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/dev/workspace/homelab-gitops-auditor/api/middleware/webhook-middleware.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 18
        },
        end: {
          line: 1,
          column: 47
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 32
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 67
        }
      },
      "3": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "4": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 23,
          column: 3
        }
      },
      "5": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "6": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 42,
          column: 23
        }
      },
      "7": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 54
        }
      },
      "8": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 48
        }
      },
      "9": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 84
        }
      },
      "10": {
        start: {
          line: 53,
          column: 30
        },
        end: {
          line: 53,
          column: 62
        }
      },
      "11": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "12": {
        start: {
          line: 71,
          column: 30
        },
        end: {
          line: 116,
          column: 1
        }
      },
      "13": {
        start: {
          line: 72,
          column: 2
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "14": {
        start: {
          line: 121,
          column: 29
        },
        end: {
          line: 154,
          column: 1
        }
      },
      "15": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 122,
          column: 30
        }
      },
      "16": {
        start: {
          line: 123,
          column: 19
        },
        end: {
          line: 128,
          column: 28
        }
      },
      "17": {
        start: {
          line: 131,
          column: 2
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "18": {
        start: {
          line: 139,
          column: 22
        },
        end: {
          line: 139,
          column: 29
        }
      },
      "19": {
        start: {
          line: 140,
          column: 2
        },
        end: {
          line: 151,
          column: 4
        }
      },
      "20": {
        start: {
          line: 141,
          column: 27
        },
        end: {
          line: 141,
          column: 49
        }
      },
      "21": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 148,
          column: 7
        }
      },
      "22": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 150,
          column: 44
        }
      },
      "23": {
        start: {
          line: 153,
          column: 2
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "24": {
        start: {
          line: 159,
          column: 33
        },
        end: {
          line: 188,
          column: 1
        }
      },
      "25": {
        start: {
          line: 160,
          column: 18
        },
        end: {
          line: 160,
          column: 29
        }
      },
      "26": {
        start: {
          line: 161,
          column: 24
        },
        end: {
          line: 161,
          column: 70
        }
      },
      "27": {
        start: {
          line: 163,
          column: 2
        },
        end: {
          line: 185,
          column: 3
        }
      },
      "28": {
        start: {
          line: 164,
          column: 18
        },
        end: {
          line: 164,
          column: 101
        }
      },
      "29": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 27
        }
      },
      "30": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 37
        }
      },
      "31": {
        start: {
          line: 169,
          column: 28
        },
        end: {
          line: 169,
          column: 60
        }
      },
      "32": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 178,
          column: 7
        }
      },
      "33": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 184,
          column: 7
        }
      },
      "34": {
        start: {
          line: 187,
          column: 2
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "35": {
        start: {
          line: 193,
          column: 29
        },
        end: {
          line: 241,
          column: 1
        }
      },
      "36": {
        start: {
          line: 194,
          column: 2
        },
        end: {
          line: 240,
          column: 3
        }
      },
      "37": {
        start: {
          line: 195,
          column: 19
        },
        end: {
          line: 195,
          column: 87
        }
      },
      "38": {
        start: {
          line: 196,
          column: 26
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "39": {
        start: {
          line: 203,
          column: 22
        },
        end: {
          line: 203,
          column: 51
        }
      },
      "40": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "41": {
        start: {
          line: 206,
          column: 6
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "42": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "43": {
        start: {
          line: 213,
          column: 20
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "44": {
        start: {
          line: 220,
          column: 30
        },
        end: {
          line: 220,
          column: 62
        }
      },
      "45": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "46": {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 230,
          column: 41
        }
      },
      "47": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "48": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 61
        }
      },
      "49": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 239,
          column: 7
        }
      },
      "50": {
        start: {
          line: 246,
          column: 20
        },
        end: {
          line: 268,
          column: 1
        }
      },
      "51": {
        start: {
          line: 249,
          column: 25
        },
        end: {
          line: 252,
          column: 3
        }
      },
      "52": {
        start: {
          line: 254,
          column: 17
        },
        end: {
          line: 254,
          column: 35
        }
      },
      "53": {
        start: {
          line: 255,
          column: 2
        },
        end: {
          line: 257,
          column: 3
        }
      },
      "54": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 256,
          column: 57
        }
      },
      "55": {
        start: {
          line: 259,
          column: 2
        },
        end: {
          line: 259,
          column: 56
        }
      },
      "56": {
        start: {
          line: 260,
          column: 2
        },
        end: {
          line: 260,
          column: 120
        }
      },
      "57": {
        start: {
          line: 261,
          column: 2
        },
        end: {
          line: 261,
          column: 51
        }
      },
      "58": {
        start: {
          line: 263,
          column: 2
        },
        end: {
          line: 265,
          column: 3
        }
      },
      "59": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 264,
          column: 33
        }
      },
      "60": {
        start: {
          line: 267,
          column: 2
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "61": {
        start: {
          line: 273,
          column: 28
        },
        end: {
          line: 298,
          column: 1
        }
      },
      "62": {
        start: {
          line: 274,
          column: 26
        },
        end: {
          line: 274,
          column: 58
        }
      },
      "63": {
        start: {
          line: 277,
          column: 2
        },
        end: {
          line: 286,
          column: 5
        }
      },
      "64": {
        start: {
          line: 289,
          column: 21
        },
        end: {
          line: 289,
          column: 60
        }
      },
      "65": {
        start: {
          line: 292,
          column: 2
        },
        end: {
          line: 297,
          column: 5
        }
      },
      "66": {
        start: {
          line: 305,
          column: 36
        },
        end: {
          line: 317,
          column: 1
        }
      },
      "67": {
        start: {
          line: 306,
          column: 23
        },
        end: {
          line: 306,
          column: 101
        }
      },
      "68": {
        start: {
          line: 308,
          column: 2
        },
        end: {
          line: 316,
          column: 4
        }
      },
      "69": {
        start: {
          line: 319,
          column: 0
        },
        end: {
          line: 328,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 19,
            column: 32
          }
        },
        loc: {
          start: {
            line: 19,
            column: 43
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 18
          },
          end: {
            line: 35,
            column: 19
          }
        },
        loc: {
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 10
          },
          end: {
            line: 44,
            column: 11
          }
        },
        loc: {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 21
          }
        },
        loc: {
          start: {
            line: 48,
            column: 43
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 71,
            column: 31
          }
        },
        loc: {
          start: {
            line: 71,
            column: 36
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 121,
            column: 29
          },
          end: {
            line: 121,
            column: 30
          }
        },
        loc: {
          start: {
            line: 121,
            column: 49
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 121
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        loc: {
          start: {
            line: 140,
            column: 38
          },
          end: {
            line: 151,
            column: 3
          }
        },
        line: 140
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 159,
            column: 34
          }
        },
        loc: {
          start: {
            line: 159,
            column: 53
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 159
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 193,
            column: 29
          },
          end: {
            line: 193,
            column: 30
          }
        },
        loc: {
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 193
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 246,
            column: 20
          },
          end: {
            line: 246,
            column: 21
          }
        },
        loc: {
          start: {
            line: 246,
            column: 40
          },
          end: {
            line: 268,
            column: 1
          }
        },
        line: 246
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 273,
            column: 28
          },
          end: {
            line: 273,
            column: 29
          }
        },
        loc: {
          start: {
            line: 273,
            column: 55
          },
          end: {
            line: 298,
            column: 1
          }
        },
        line: 273
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 305,
            column: 36
          },
          end: {
            line: 305,
            column: 37
          }
        },
        loc: {
          start: {
            line: 305,
            column: 54
          },
          end: {
            line: 317,
            column: 1
          }
        },
        line: 305
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 23,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 48
          }
        }, {
          start: {
            line: 20,
            column: 52
          },
          end: {
            line: 23,
            column: 3
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 42,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 13
          },
          end: {
            line: 37,
            column: 66
          }
        }, {
          start: {
            line: 38,
            column: 13
          },
          end: {
            line: 38,
            column: 37
          }
        }, {
          start: {
            line: 39,
            column: 13
          },
          end: {
            line: 39,
            column: 42
          }
        }, {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 40,
            column: 38
          }
        }, {
          start: {
            line: 41,
            column: 13
          },
          end: {
            line: 41,
            column: 19
          }
        }, {
          start: {
            line: 42,
            column: 13
          },
          end: {
            line: 42,
            column: 22
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 123,
            column: 19
          },
          end: {
            line: 128,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 19
          },
          end: {
            line: 123,
            column: 72
          }
        }, {
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 124,
            column: 43
          }
        }, {
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 125,
            column: 48
          }
        }, {
          start: {
            line: 126,
            column: 19
          },
          end: {
            line: 126,
            column: 44
          }
        }, {
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 127,
            column: 25
          }
        }, {
          start: {
            line: 128,
            column: 19
          },
          end: {
            line: 128,
            column: 28
          }
        }],
        line: 123
      },
      "3": {
        loc: {
          start: {
            line: 161,
            column: 33
          },
          end: {
            line: 161,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 33
          },
          end: {
            line: 161,
            column: 62
          }
        }, {
          start: {
            line: 161,
            column: 66
          },
          end: {
            line: 161,
            column: 69
          }
        }],
        line: 161
      },
      "4": {
        loc: {
          start: {
            line: 163,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "5": {
        loc: {
          start: {
            line: 195,
            column: 50
          },
          end: {
            line: 195,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 50
          },
          end: {
            line: 195,
            column: 70
          }
        }, {
          start: {
            line: 195,
            column: 74
          },
          end: {
            line: 195,
            column: 86
          }
        }],
        line: 195
      },
      "6": {
        loc: {
          start: {
            line: 196,
            column: 26
          },
          end: {
            line: 201,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 26
          },
          end: {
            line: 196,
            column: 55
          }
        }, {
          start: {
            line: 196,
            column: 59
          },
          end: {
            line: 201,
            column: 5
          }
        }],
        line: 196
      },
      "7": {
        loc: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "8": {
        loc: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "9": {
        loc: {
          start: {
            line: 255,
            column: 2
          },
          end: {
            line: 257,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 2
          },
          end: {
            line: 257,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "10": {
        loc: {
          start: {
            line: 263,
            column: 2
          },
          end: {
            line: 265,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 2
          },
          end: {
            line: 265,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "11": {
        loc: {
          start: {
            line: 281,
            column: 15
          },
          end: {
            line: 281,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 15
          },
          end: {
            line: 281,
            column: 25
          }
        }, {
          start: {
            line: 281,
            column: 29
          },
          end: {
            line: 281,
            column: 44
          }
        }],
        line: 281
      },
      "12": {
        loc: {
          start: {
            line: 289,
            column: 21
          },
          end: {
            line: 289,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 21
          },
          end: {
            line: 289,
            column: 37
          }
        }, {
          start: {
            line: 289,
            column: 41
          },
          end: {
            line: 289,
            column: 53
          }
        }, {
          start: {
            line: 289,
            column: 57
          },
          end: {
            line: 289,
            column: 60
          }
        }],
        line: 289
      },
      "13": {
        loc: {
          start: {
            line: 293,
            column: 11
          },
          end: {
            line: 293,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 11
          },
          end: {
            line: 293,
            column: 24
          }
        }, {
          start: {
            line: 293,
            column: 28
          },
          end: {
            line: 293,
            column: 51
          }
        }],
        line: 293
      },
      "14": {
        loc: {
          start: {
            line: 294,
            column: 10
          },
          end: {
            line: 294,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 10
          },
          end: {
            line: 294,
            column: 20
          }
        }, {
          start: {
            line: 294,
            column: 24
          },
          end: {
            line: 294,
            column: 40
          }
        }],
        line: 294
      },
      "15": {
        loc: {
          start: {
            line: 306,
            column: 23
          },
          end: {
            line: 306,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 306,
            column: 23
          },
          end: {
            line: 306,
            column: 29
          }
        }, {
          start: {
            line: 306,
            column: 33
          },
          end: {
            line: 306,
            column: 101
          }
        }],
        line: 306
      },
      "16": {
        loc: {
          start: {
            line: 306,
            column: 64
          },
          end: {
            line: 306,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 306,
            column: 64
          },
          end: {
            line: 306,
            column: 84
          }
        }, {
          start: {
            line: 306,
            column: 88
          },
          end: {
            line: 306,
            column: 100
          }
        }],
        line: 306
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0, 0, 0],
      "2": [0, 0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a0e0dfc4108edb3b514acc8be0ed3f2b80dcbe69"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2c3g0fu61j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2c3g0fu61j();
const rateLimit =
/* istanbul ignore next */
(cov_2c3g0fu61j().s[0]++, require('express-rate-limit'));
const helmet =
/* istanbul ignore next */
(cov_2c3g0fu61j().s[1]++, require('helmet'));
const {
  ConfigManager
} =
/* istanbul ignore next */
(cov_2c3g0fu61j().s[2]++, require('../config/utils/config-manager'));

/**
 * Webhook Middleware
 * 
 * Provides security middleware specifically designed for webhook endpoints:
 * - Rate limiting per IP address with configurable windows
 * - Security headers optimized for webhook processing
 * - Request logging and monitoring
 * - IP-based blocking and allowlisting
 */

/**
 * Rate limiting middleware for webhook endpoints
 * More restrictive than general API endpoints to prevent abuse
 */
/* istanbul ignore next */
cov_2c3g0fu61j().s[3]++;
const createWebhookRateLimit = config => {
  /* istanbul ignore next */
  cov_2c3g0fu61j().f[0]++;
  const rateLimitConfig =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[4]++,
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[0][0]++, config?.api?.rateLimit) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[0][1]++, {
    windowMs: 15 * 60 * 1000,
    // 15 minutes
    max: 100 // limit each IP to 100 requests per window
  }));
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[5]++;
  return rateLimit({
    windowMs: rateLimitConfig.windowMs,
    max: rateLimitConfig.max,
    message: {
      error: 'Too many webhook requests from this IP address',
      retryAfter: Math.ceil(rateLimitConfig.windowMs / 1000),
      limit: rateLimitConfig.max
    },
    standardHeaders: true,
    // Return rate limit info in `RateLimit-*` headers
    legacyHeaders: false,
    // Disable `X-RateLimit-*` headers
    keyGenerator: req => {
      /* istanbul ignore next */
      cov_2c3g0fu61j().f[1]++;
      cov_2c3g0fu61j().s[6]++;
      // Use the real IP address for rate limiting
      return /* istanbul ignore next */(cov_2c3g0fu61j().b[1][0]++, req.headers['x-forwarded-for']?.split(',')[0]?.trim()) ||
      /* istanbul ignore next */
      (cov_2c3g0fu61j().b[1][1]++, req.headers['x-real-ip']) ||
      /* istanbul ignore next */
      (cov_2c3g0fu61j().b[1][2]++, req.connection?.remoteAddress) ||
      /* istanbul ignore next */
      (cov_2c3g0fu61j().b[1][3]++, req.socket?.remoteAddress) ||
      /* istanbul ignore next */
      (cov_2c3g0fu61j().b[1][4]++, req.ip) ||
      /* istanbul ignore next */
      (cov_2c3g0fu61j().b[1][5]++, 'unknown');
    },
    skip: req => {
      /* istanbul ignore next */
      cov_2c3g0fu61j().f[2]++;
      cov_2c3g0fu61j().s[7]++;
      // Skip rate limiting for ping events (webhook validation)
      return req.headers['x-github-event'] === 'ping';
    },
    onLimitReached: (req, res, options) => {
      /* istanbul ignore next */
      cov_2c3g0fu61j().f[3]++;
      const clientIP =
      /* istanbul ignore next */
      (cov_2c3g0fu61j().s[8]++, options.keyGenerator(req));
      /* istanbul ignore next */
      cov_2c3g0fu61j().s[9]++;
      console.warn(`Rate limit exceeded for webhook endpoint from IP: ${clientIP}`);

      // Log rate limit violation for monitoring
      const {
        AuditLogger
      } =
      /* istanbul ignore next */
      (cov_2c3g0fu61j().s[10]++, require('../utils/audit-logger'));
      /* istanbul ignore next */
      cov_2c3g0fu61j().s[11]++;
      AuditLogger.logSecurityEvent({
        timestamp: new Date().toISOString(),
        type: 'rate-limit-exceeded',
        ipAddress: clientIP,
        userAgent: req.headers['user-agent'],
        eventType: req.headers['x-github-event'],
        delivery: req.headers['x-github-delivery'],
        error: 'Rate limit exceeded for webhook endpoint',
        errorCode: 'RATE_LIMIT_EXCEEDED'
      });
    }
  });
};

/**
 * Security headers middleware optimized for webhooks
 */
/* istanbul ignore next */
cov_2c3g0fu61j().s[12]++;
const createWebhookSecurity = () => {
  /* istanbul ignore next */
  cov_2c3g0fu61j().f[4]++;
  cov_2c3g0fu61j().s[13]++;
  return helmet({
    // Content Security Policy - relaxed for webhook endpoints
    contentSecurityPolicy: {
      directives: {
        defaultSrc: ["'self'"],
        scriptSrc: ["'none'"],
        // No scripts needed for webhook endpoints
        styleSrc: ["'none'"],
        // No styles needed for webhook endpoints
        imgSrc: ["'none'"],
        // No images needed for webhook endpoints
        connectSrc: ["'none'"],
        // No external connections needed
        fontSrc: ["'none'"],
        objectSrc: ["'none'"],
        mediaSrc: ["'none'"],
        frameSrc: ["'none'"]
      }
    },
    // HSTS - Force HTTPS
    hsts: {
      maxAge: 31536000,
      // 1 year
      includeSubDomains: true,
      preload: true
    },
    // Prevent MIME type sniffing
    noSniff: true,
    // Prevent XSS attacks
    xssFilter: true,
    // Prevent clickjacking
    frameguard: {
      action: 'deny'
    },
    // Hide server information
    hidePoweredBy: true,
    // Prevent DNS prefetching
    dnsPrefetchControl: {
      allow: false
    },
    // Prevent IE from executing downloads
    ieNoOpen: true,
    // Don't send referrer information
    referrerPolicy: {
      policy: 'no-referrer'
    }
  });
};

/**
 * Request logging middleware for webhooks
 */
/* istanbul ignore next */
cov_2c3g0fu61j().s[14]++;
const webhookRequestLogger = (req, res, next) => {
  /* istanbul ignore next */
  cov_2c3g0fu61j().f[5]++;
  const startTime =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[15]++, Date.now());
  const clientIP =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[16]++,
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[2][0]++, req.headers['x-forwarded-for']?.split(',')[0]?.trim()) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[2][1]++, req.headers['x-real-ip']) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[2][2]++, req.connection?.remoteAddress) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[2][3]++, req.socket?.remoteAddress) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[2][4]++, req.ip) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[2][5]++, 'unknown'));

  // Log incoming webhook request
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[17]++;
  console.log(`Webhook request: ${req.method} ${req.path} from ${clientIP}`, {
    event: req.headers['x-github-event'],
    delivery: req.headers['x-github-delivery'],
    userAgent: req.headers['user-agent'],
    contentLength: req.headers['content-length']
  });

  // Override res.end to log response
  const originalEnd =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[18]++, res.end);
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[19]++;
  res.end = function (chunk, encoding) {
    /* istanbul ignore next */
    cov_2c3g0fu61j().f[6]++;
    const processingTime =
    /* istanbul ignore next */
    (cov_2c3g0fu61j().s[20]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_2c3g0fu61j().s[21]++;
    console.log(`Webhook response: ${res.statusCode} in ${processingTime}ms`, {
      event: req.headers['x-github-event'],
      delivery: req.headers['x-github-delivery'],
      clientIP,
      processingTime
    });
    /* istanbul ignore next */
    cov_2c3g0fu61j().s[22]++;
    originalEnd.call(this, chunk, encoding);
  };
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[23]++;
  next();
};

/**
 * Request body size validation middleware
 */
/* istanbul ignore next */
cov_2c3g0fu61j().s[24]++;
const webhookBodySizeValidator = (req, res, next) => {
  /* istanbul ignore next */
  cov_2c3g0fu61j().f[7]++;
  const maxSize =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[25]++, 1024 * 1024); // 1MB
  const contentLength =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[26]++, parseInt(
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[3][0]++, req.headers['content-length']) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[3][1]++, '0')));
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[27]++;
  if (contentLength > maxSize) {
    /* istanbul ignore next */
    cov_2c3g0fu61j().b[4][0]++;
    const error =
    /* istanbul ignore next */
    (cov_2c3g0fu61j().s[28]++, new Error(`Request body too large: ${contentLength} bytes (max: ${maxSize} bytes)`));
    /* istanbul ignore next */
    cov_2c3g0fu61j().s[29]++;
    error.statusCode = 413;
    /* istanbul ignore next */
    cov_2c3g0fu61j().s[30]++;
    error.code = 'REQUEST_TOO_LARGE';

    // Log the violation
    const {
      AuditLogger
    } =
    /* istanbul ignore next */
    (cov_2c3g0fu61j().s[31]++, require('../utils/audit-logger'));
    /* istanbul ignore next */
    cov_2c3g0fu61j().s[32]++;
    AuditLogger.logWebhookError({
      eventType: req.headers['x-github-event'],
      delivery: req.headers['x-github-delivery'],
      error: error.message,
      errorCode: error.code,
      ipAddress: req.ip,
      userAgent: req.headers['user-agent'],
      requestSize: contentLength
    });
    /* istanbul ignore next */
    cov_2c3g0fu61j().s[33]++;
    return res.status(413).json({
      error: 'Request body too large',
      maxSize: maxSize,
      actualSize: contentLength
    });
  } else
  /* istanbul ignore next */
  {
    cov_2c3g0fu61j().b[4][1]++;
  }
  cov_2c3g0fu61j().s[34]++;
  next();
};

/**
 * GitHub event type validation middleware
 */
/* istanbul ignore next */
cov_2c3g0fu61j().s[35]++;
const githubEventValidator = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2c3g0fu61j().f[8]++;
  cov_2c3g0fu61j().s[36]++;
  try {
    const config =
    /* istanbul ignore next */
    (cov_2c3g0fu61j().s[37]++, await ConfigManager.loadConfig(
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[5][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[5][1]++, 'production')));
    const allowedEvents =
    /* istanbul ignore next */
    (cov_2c3g0fu61j().s[38]++,
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[6][0]++, config.webhook?.allowedEvents) ||
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[6][1]++, ['repository_dispatch', 'push', 'pull_request', 'ping']));
    const eventType =
    /* istanbul ignore next */
    (cov_2c3g0fu61j().s[39]++, req.headers['x-github-event']);
    /* istanbul ignore next */
    cov_2c3g0fu61j().s[40]++;
    if (!eventType) {
      /* istanbul ignore next */
      cov_2c3g0fu61j().b[7][0]++;
      cov_2c3g0fu61j().s[41]++;
      return res.status(400).json({
        error: 'Missing X-GitHub-Event header',
        code: 'MISSING_EVENT_HEADER'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2c3g0fu61j().b[7][1]++;
    }
    cov_2c3g0fu61j().s[42]++;
    if (!allowedEvents.includes(eventType)) {
      /* istanbul ignore next */
      cov_2c3g0fu61j().b[8][0]++;
      const error =
      /* istanbul ignore next */
      (cov_2c3g0fu61j().s[43]++, {
        error: `Event type '${eventType}' is not allowed`,
        code: 'INVALID_EVENT_TYPE',
        allowedEvents
      });

      // Log the violation
      const {
        AuditLogger
      } =
      /* istanbul ignore next */
      (cov_2c3g0fu61j().s[44]++, require('../utils/audit-logger'));
      /* istanbul ignore next */
      cov_2c3g0fu61j().s[45]++;
      AuditLogger.logWebhookError({
        eventType,
        delivery: req.headers['x-github-delivery'],
        error: error.error,
        errorCode: error.code,
        ipAddress: req.ip,
        userAgent: req.headers['user-agent']
      });
      /* istanbul ignore next */
      cov_2c3g0fu61j().s[46]++;
      return res.status(400).json(error);
    } else
    /* istanbul ignore next */
    {
      cov_2c3g0fu61j().b[8][1]++;
    }
    cov_2c3g0fu61j().s[47]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_2c3g0fu61j().s[48]++;
    console.error('Error in GitHub event validator:', error);
    /* istanbul ignore next */
    cov_2c3g0fu61j().s[49]++;
    res.status(500).json({
      error: 'Internal server error in event validation',
      code: 'INTERNAL_ERROR'
    });
  }
};

/**
 * CORS middleware specifically for webhook endpoints
 */
/* istanbul ignore next */
cov_2c3g0fu61j().s[50]++;
const webhookCORS = (req, res, next) => {
  /* istanbul ignore next */
  cov_2c3g0fu61j().f[9]++;
  // Webhooks don't need CORS since they're server-to-server
  // But we'll allow specific origins for testing
  const allowedOrigins =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[51]++, ['https://github.com', 'https://api.github.com']);
  const origin =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[52]++, req.headers.origin);
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[53]++;
  if (allowedOrigins.includes(origin)) {
    /* istanbul ignore next */
    cov_2c3g0fu61j().b[9][0]++;
    cov_2c3g0fu61j().s[54]++;
    res.setHeader('Access-Control-Allow-Origin', origin);
  } else
  /* istanbul ignore next */
  {
    cov_2c3g0fu61j().b[9][1]++;
  }
  cov_2c3g0fu61j().s[55]++;
  res.setHeader('Access-Control-Allow-Methods', 'POST');
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[56]++;
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, X-GitHub-Event, X-GitHub-Delivery, X-Hub-Signature-256');
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[57]++;
  res.setHeader('Access-Control-Max-Age', '86400'); // 24 hours
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[58]++;
  if (req.method === 'OPTIONS') {
    /* istanbul ignore next */
    cov_2c3g0fu61j().b[10][0]++;
    cov_2c3g0fu61j().s[59]++;
    return res.status(200).end();
  } else
  /* istanbul ignore next */
  {
    cov_2c3g0fu61j().b[10][1]++;
  }
  cov_2c3g0fu61j().s[60]++;
  next();
};

/**
 * Error handling middleware for webhook endpoints
 */
/* istanbul ignore next */
cov_2c3g0fu61j().s[61]++;
const webhookErrorHandler = (error, req, res, next) => {
  /* istanbul ignore next */
  cov_2c3g0fu61j().f[10]++;
  const {
    AuditLogger
  } =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[62]++, require('../utils/audit-logger'));

  // Log the error
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[63]++;
  AuditLogger.logWebhookError({
    eventType: req.headers['x-github-event'],
    delivery: req.headers['x-github-delivery'],
    error: error.message,
    errorCode:
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[11][0]++, error.code) ||
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[11][1]++, 'WEBHOOK_ERROR'),
    ipAddress: req.ip,
    userAgent: req.headers['user-agent'],
    stackTrace: error.stack,
    headers: req.headers
  });

  // Determine status code
  const statusCode =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[64]++,
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[12][0]++, error.statusCode) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[12][1]++, error.status) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[12][2]++, 500));

  // Send error response
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[65]++;
  res.status(statusCode).json({
    error:
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[13][0]++, error.message) ||
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[13][1]++, 'Internal server error'),
    code:
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[14][0]++, error.code) ||
    /* istanbul ignore next */
    (cov_2c3g0fu61j().b[14][1]++, 'INTERNAL_ERROR'),
    delivery: req.headers['x-github-delivery'],
    timestamp: new Date().toISOString()
  });
};

/**
 * Initialize all webhook middleware
 * @param {Object} config - Application configuration
 * @returns {Object} Middleware functions
 */
/* istanbul ignore next */
cov_2c3g0fu61j().s[66]++;
const initializeWebhookMiddleware = async config => {
  /* istanbul ignore next */
  cov_2c3g0fu61j().f[11]++;
  const loadedConfig =
  /* istanbul ignore next */
  (cov_2c3g0fu61j().s[67]++,
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[15][0]++, config) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[15][1]++, await ConfigManager.loadConfig(
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[16][0]++, process.env.NODE_ENV) ||
  /* istanbul ignore next */
  (cov_2c3g0fu61j().b[16][1]++, 'production'))));
  /* istanbul ignore next */
  cov_2c3g0fu61j().s[68]++;
  return {
    rateLimit: createWebhookRateLimit(loadedConfig),
    security: createWebhookSecurity(),
    requestLogger: webhookRequestLogger,
    bodySizeValidator: webhookBodySizeValidator,
    eventValidator: githubEventValidator,
    cors: webhookCORS,
    errorHandler: webhookErrorHandler
  };
};
/* istanbul ignore next */
cov_2c3g0fu61j().s[69]++;
module.exports = {
  createWebhookRateLimit,
  createWebhookSecurity,
  webhookRequestLogger,
  webhookBodySizeValidator,
  githubEventValidator,
  webhookCORS,
  webhookErrorHandler,
  initializeWebhookMiddleware
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,