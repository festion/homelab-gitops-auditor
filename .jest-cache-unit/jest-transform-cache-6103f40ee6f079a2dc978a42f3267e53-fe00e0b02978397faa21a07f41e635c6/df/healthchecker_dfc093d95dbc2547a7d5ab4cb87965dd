79154371466af0f98dc39b0346667aee
/* istanbul ignore next */
function cov_82w931bt3() {
  var path = "/home/dev/workspace/homelab-gitops-auditor/scripts/health-checks/health-checker.js";
  var hash = "e1bbca5e2812f9e1094bebdcb6d1edc59276661a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/dev/workspace/homelab-gitops-auditor/scripts/health-checks/health-checker.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 14
        },
        end: {
          line: 1,
          column: 30
        }
      },
      "1": {
        start: {
          line: 2,
          column: 13
        },
        end: {
          line: 2,
          column: 31
        }
      },
      "2": {
        start: {
          line: 3,
          column: 11
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 41
        }
      },
      "4": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 37
        }
      },
      "5": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "6": {
        start: {
          line: 7,
          column: 27
        },
        end: {
          line: 7,
          column: 72
        }
      },
      "7": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 52
        }
      },
      "8": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 23
        }
      },
      "9": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "10": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "11": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "12": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "13": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 47
        }
      },
      "14": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 43
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 37
        }
      },
      "16": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "17": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 51,
          column: 6
        }
      },
      "18": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "19": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 72
        }
      },
      "20": {
        start: {
          line: 57,
          column: 19
        },
        end: {
          line: 57,
          column: 58
        }
      },
      "21": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 58,
          column: 46
        }
      },
      "22": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 78
        }
      },
      "23": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 34
        }
      },
      "24": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 62
        }
      },
      "25": {
        start: {
          line: 68,
          column: 19
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "26": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 76,
          column: 52
        }
      },
      "27": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 77,
          column: 77
        }
      },
      "28": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "29": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 100
        }
      },
      "30": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 60
        }
      },
      "31": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 24
        }
      },
      "32": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 63
        }
      },
      "33": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 28
        }
      },
      "34": {
        start: {
          line: 93,
          column: 19
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "35": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 52
        }
      },
      "36": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 102,
          column: 78
        }
      },
      "37": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "38": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 101
        }
      },
      "39": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 61
        }
      },
      "40": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 109,
          column: 24
        }
      },
      "41": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 66
        }
      },
      "42": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "43": {
        start: {
          line: 117,
          column: 26
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "44": {
        start: {
          line: 120,
          column: 29
        },
        end: {
          line: 120,
          column: 71
        }
      },
      "45": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 123,
          column: 77
        }
      },
      "46": {
        start: {
          line: 126,
          column: 34
        },
        end: {
          line: 126,
          column: 89
        }
      },
      "47": {
        start: {
          line: 129,
          column: 33
        },
        end: {
          line: 129,
          column: 83
        }
      },
      "48": {
        start: {
          line: 131,
          column: 31
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "49": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 139,
          column: 96
        }
      },
      "50": {
        start: {
          line: 140,
          column: 6
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "51": {
        start: {
          line: 143,
          column: 6
        },
        end: {
          line: 143,
          column: 66
        }
      },
      "52": {
        start: {
          line: 144,
          column: 6
        },
        end: {
          line: 147,
          column: 8
        }
      },
      "53": {
        start: {
          line: 153,
          column: 21
        },
        end: {
          line: 153,
          column: 83
        }
      },
      "54": {
        start: {
          line: 154,
          column: 18
        },
        end: {
          line: 154,
          column: 66
        }
      },
      "55": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "56": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 157,
          column: 34
        }
      },
      "57": {
        start: {
          line: 158,
          column: 23
        },
        end: {
          line: 164,
          column: 8
        }
      },
      "58": {
        start: {
          line: 166,
          column: 27
        },
        end: {
          line: 166,
          column: 49
        }
      },
      "59": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 181,
          column: 7
        }
      },
      "60": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "61": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 70
        }
      },
      "62": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 192,
          column: 8
        }
      },
      "63": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "64": {
        start: {
          line: 198,
          column: 25
        },
        end: {
          line: 198,
          column: 34
        }
      },
      "65": {
        start: {
          line: 199,
          column: 25
        },
        end: {
          line: 199,
          column: 69
        }
      },
      "66": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 214,
          column: 7
        }
      },
      "67": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 206,
          column: 10
        }
      },
      "68": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 213,
          column: 10
        }
      },
      "69": {
        start: {
          line: 217,
          column: 6
        },
        end: {
          line: 221,
          column: 8
        }
      },
      "70": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "71": {
        start: {
          line: 227,
          column: 23
        },
        end: {
          line: 227,
          column: 105
        }
      },
      "72": {
        start: {
          line: 228,
          column: 20
        },
        end: {
          line: 228,
          column: 68
        }
      },
      "73": {
        start: {
          line: 230,
          column: 23
        },
        end: {
          line: 235,
          column: 8
        }
      },
      "74": {
        start: {
          line: 237,
          column: 21
        },
        end: {
          line: 237,
          column: 34
        }
      },
      "75": {
        start: {
          line: 239,
          column: 6
        },
        end: {
          line: 248,
          column: 8
        }
      },
      "76": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 255,
          column: 8
        }
      },
      "77": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "78": {
        start: {
          line: 262,
          column: 24
        },
        end: {
          line: 262,
          column: 49
        }
      },
      "79": {
        start: {
          line: 263,
          column: 26
        },
        end: {
          line: 263,
          column: 53
        }
      },
      "80": {
        start: {
          line: 264,
          column: 23
        },
        end: {
          line: 264,
          column: 47
        }
      },
      "81": {
        start: {
          line: 266,
          column: 25
        },
        end: {
          line: 266,
          column: 47
        }
      },
      "82": {
        start: {
          line: 268,
          column: 21
        },
        end: {
          line: 268,
          column: 23
        }
      },
      "83": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 269,
          column: 90
        }
      },
      "84": {
        start: {
          line: 269,
          column: 44
        },
        end: {
          line: 269,
          column: 90
        }
      },
      "85": {
        start: {
          line: 270,
          column: 6
        },
        end: {
          line: 270,
          column: 98
        }
      },
      "86": {
        start: {
          line: 270,
          column: 48
        },
        end: {
          line: 270,
          column: 98
        }
      },
      "87": {
        start: {
          line: 271,
          column: 6
        },
        end: {
          line: 271,
          column: 86
        }
      },
      "88": {
        start: {
          line: 271,
          column: 42
        },
        end: {
          line: 271,
          column: 86
        }
      },
      "89": {
        start: {
          line: 273,
          column: 6
        },
        end: {
          line: 283,
          column: 8
        }
      },
      "90": {
        start: {
          line: 286,
          column: 6
        },
        end: {
          line: 290,
          column: 8
        }
      },
      "91": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 329,
          column: 5
        }
      },
      "92": {
        start: {
          line: 297,
          column: 24
        },
        end: {
          line: 297,
          column: 67
        }
      },
      "93": {
        start: {
          line: 298,
          column: 29
        },
        end: {
          line: 298,
          column: 31
        }
      },
      "94": {
        start: {
          line: 299,
          column: 31
        },
        end: {
          line: 299,
          column: 33
        }
      },
      "95": {
        start: {
          line: 301,
          column: 6
        },
        end: {
          line: 310,
          column: 7
        }
      },
      "96": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "97": {
        start: {
          line: 303,
          column: 10
        },
        end: {
          line: 303,
          column: 42
        }
      },
      "98": {
        start: {
          line: 305,
          column: 10
        },
        end: {
          line: 308,
          column: 13
        }
      },
      "99": {
        start: {
          line: 312,
          column: 6
        },
        end: {
          line: 321,
          column: 8
        }
      },
      "100": {
        start: {
          line: 315,
          column: 93
        },
        end: {
          line: 315,
          column: 101
        }
      },
      "101": {
        start: {
          line: 324,
          column: 6
        },
        end: {
          line: 328,
          column: 8
        }
      },
      "102": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 359,
          column: 5
        }
      },
      "103": {
        start: {
          line: 334,
          column: 25
        },
        end: {
          line: 334,
          column: 34
        }
      },
      "104": {
        start: {
          line: 335,
          column: 20
        },
        end: {
          line: 335,
          column: 59
        }
      },
      "105": {
        start: {
          line: 336,
          column: 24
        },
        end: {
          line: 336,
          column: 64
        }
      },
      "106": {
        start: {
          line: 339,
          column: 34
        },
        end: {
          line: 339,
          column: 51
        }
      },
      "107": {
        start: {
          line: 340,
          column: 28
        },
        end: {
          line: 340,
          column: 51
        }
      },
      "108": {
        start: {
          line: 342,
          column: 6
        },
        end: {
          line: 351,
          column: 8
        }
      },
      "109": {
        start: {
          line: 354,
          column: 6
        },
        end: {
          line: 358,
          column: 8
        }
      },
      "110": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 398,
          column: 5
        }
      },
      "111": {
        start: {
          line: 364,
          column: 24
        },
        end: {
          line: 368,
          column: 7
        }
      },
      "112": {
        start: {
          line: 370,
          column: 22
        },
        end: {
          line: 376,
          column: 7
        }
      },
      "113": {
        start: {
          line: 372,
          column: 10
        },
        end: {
          line: 374,
          column: 94
        }
      },
      "114": {
        start: {
          line: 373,
          column: 25
        },
        end: {
          line: 373,
          column: 69
        }
      },
      "115": {
        start: {
          line: 374,
          column: 29
        },
        end: {
          line: 374,
          column: 92
        }
      },
      "116": {
        start: {
          line: 378,
          column: 27
        },
        end: {
          line: 378,
          column: 62
        }
      },
      "117": {
        start: {
          line: 378,
          column: 49
        },
        end: {
          line: 378,
          column: 61
        }
      },
      "118": {
        start: {
          line: 379,
          column: 32
        },
        end: {
          line: 379,
          column: 79
        }
      },
      "119": {
        start: {
          line: 379,
          column: 57
        },
        end: {
          line: 379,
          column: 78
        }
      },
      "120": {
        start: {
          line: 381,
          column: 6
        },
        end: {
          line: 390,
          column: 8
        }
      },
      "121": {
        start: {
          line: 384,
          column: 96
        },
        end: {
          line: 384,
          column: 102
        }
      },
      "122": {
        start: {
          line: 393,
          column: 6
        },
        end: {
          line: 397,
          column: 8
        }
      },
      "123": {
        start: {
          line: 402,
          column: 4
        },
        end: {
          line: 437,
          column: 5
        }
      },
      "124": {
        start: {
          line: 403,
          column: 23
        },
        end: {
          line: 403,
          column: 85
        }
      },
      "125": {
        start: {
          line: 404,
          column: 20
        },
        end: {
          line: 404,
          column: 68
        }
      },
      "126": {
        start: {
          line: 406,
          column: 24
        },
        end: {
          line: 406,
          column: 34
        }
      },
      "127": {
        start: {
          line: 407,
          column: 23
        },
        end: {
          line: 412,
          column: 8
        }
      },
      "128": {
        start: {
          line: 413,
          column: 27
        },
        end: {
          line: 413,
          column: 49
        }
      },
      "129": {
        start: {
          line: 415,
          column: 32
        },
        end: {
          line: 415,
          column: 34
        }
      },
      "130": {
        start: {
          line: 416,
          column: 6
        },
        end: {
          line: 418,
          column: 7
        }
      },
      "131": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 71
        }
      },
      "132": {
        start: {
          line: 420,
          column: 6
        },
        end: {
          line: 429,
          column: 8
        }
      },
      "133": {
        start: {
          line: 432,
          column: 6
        },
        end: {
          line: 436,
          column: 8
        }
      },
      "134": {
        start: {
          line: 441,
          column: 4
        },
        end: {
          line: 463,
          column: 5
        }
      },
      "135": {
        start: {
          line: 443,
          column: 23
        },
        end: {
          line: 443,
          column: 105
        }
      },
      "136": {
        start: {
          line: 444,
          column: 20
        },
        end: {
          line: 444,
          column: 68
        }
      },
      "137": {
        start: {
          line: 449,
          column: 6
        },
        end: {
          line: 455,
          column: 8
        }
      },
      "138": {
        start: {
          line: 458,
          column: 6
        },
        end: {
          line: 462,
          column: 8
        }
      },
      "139": {
        start: {
          line: 468,
          column: 19
        },
        end: {
          line: 468,
          column: 21
        }
      },
      "140": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 480,
          column: 5
        }
      },
      "141": {
        start: {
          line: 471,
          column: 6
        },
        end: {
          line: 479,
          column: 7
        }
      },
      "142": {
        start: {
          line: 472,
          column: 24
        },
        end: {
          line: 472,
          column: 60
        }
      },
      "143": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 27
        }
      },
      "144": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 478,
          column: 11
        }
      },
      "145": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 485,
          column: 6
        }
      },
      "146": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 519,
          column: 5
        }
      },
      "147": {
        start: {
          line: 491,
          column: 21
        },
        end: {
          line: 493,
          column: 8
        }
      },
      "148": {
        start: {
          line: 495,
          column: 6
        },
        end: {
          line: 499,
          column: 8
        }
      },
      "149": {
        start: {
          line: 503,
          column: 6
        },
        end: {
          line: 518,
          column: 7
        }
      },
      "150": {
        start: {
          line: 504,
          column: 27
        },
        end: {
          line: 504,
          column: 61
        }
      },
      "151": {
        start: {
          line: 505,
          column: 24
        },
        end: {
          line: 505,
          column: 61
        }
      },
      "152": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 506,
          column: 27
        }
      },
      "153": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 512,
          column: 10
        }
      },
      "154": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 517,
          column: 10
        }
      },
      "155": {
        start: {
          line: 524,
          column: 19
        },
        end: {
          line: 524,
          column: 21
        }
      },
      "156": {
        start: {
          line: 526,
          column: 4
        },
        end: {
          line: 538,
          column: 5
        }
      },
      "157": {
        start: {
          line: 529,
          column: 6
        },
        end: {
          line: 532,
          column: 8
        }
      },
      "158": {
        start: {
          line: 534,
          column: 6
        },
        end: {
          line: 537,
          column: 8
        }
      },
      "159": {
        start: {
          line: 542,
          column: 19
        },
        end: {
          line: 542,
          column: 21
        }
      },
      "160": {
        start: {
          line: 544,
          column: 4
        },
        end: {
          line: 569,
          column: 5
        }
      },
      "161": {
        start: {
          line: 545,
          column: 6
        },
        end: {
          line: 557,
          column: 7
        }
      },
      "162": {
        start: {
          line: 546,
          column: 24
        },
        end: {
          line: 546,
          column: 60
        }
      },
      "163": {
        start: {
          line: 549,
          column: 8
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "164": {
        start: {
          line: 550,
          column: 10
        },
        end: {
          line: 550,
          column: 73
        }
      },
      "165": {
        start: {
          line: 554,
          column: 8
        },
        end: {
          line: 556,
          column: 9
        }
      },
      "166": {
        start: {
          line: 555,
          column: 10
        },
        end: {
          line: 555,
          column: 70
        }
      },
      "167": {
        start: {
          line: 559,
          column: 6
        },
        end: {
          line: 562,
          column: 8
        }
      },
      "168": {
        start: {
          line: 565,
          column: 6
        },
        end: {
          line: 568,
          column: 8
        }
      },
      "169": {
        start: {
          line: 574,
          column: 18
        },
        end: {
          line: 574,
          column: 20
        }
      },
      "170": {
        start: {
          line: 575,
          column: 23
        },
        end: {
          line: 575,
          column: 40
        }
      },
      "171": {
        start: {
          line: 577,
          column: 4
        },
        end: {
          line: 590,
          column: 5
        }
      },
      "172": {
        start: {
          line: 578,
          column: 22
        },
        end: {
          line: 578,
          column: 75
        }
      },
      "173": {
        start: {
          line: 580,
          column: 6
        },
        end: {
          line: 587,
          column: 7
        }
      },
      "174": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 586,
          column: 9
        }
      },
      "175": {
        start: {
          line: 581,
          column: 53
        },
        end: {
          line: 581,
          column: 77
        }
      },
      "176": {
        start: {
          line: 582,
          column: 10
        },
        end: {
          line: 585,
          column: 13
        }
      },
      "177": {
        start: {
          line: 589,
          column: 6
        },
        end: {
          line: 589,
          column: 76
        }
      },
      "178": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 592,
          column: 17
        }
      },
      "179": {
        start: {
          line: 596,
          column: 19
        },
        end: {
          line: 596,
          column: 54
        }
      },
      "180": {
        start: {
          line: 596,
          column: 41
        },
        end: {
          line: 596,
          column: 53
        }
      },
      "181": {
        start: {
          line: 597,
          column: 26
        },
        end: {
          line: 597,
          column: 76
        }
      },
      "182": {
        start: {
          line: 597,
          column: 49
        },
        end: {
          line: 597,
          column: 75
        }
      },
      "183": {
        start: {
          line: 598,
          column: 28
        },
        end: {
          line: 598,
          column: 80
        }
      },
      "184": {
        start: {
          line: 598,
          column: 51
        },
        end: {
          line: 598,
          column: 79
        }
      },
      "185": {
        start: {
          line: 600,
          column: 4
        },
        end: {
          line: 611,
          column: 6
        }
      },
      "186": {
        start: {
          line: 608,
          column: 77
        },
        end: {
          line: 608,
          column: 84
        }
      },
      "187": {
        start: {
          line: 615,
          column: 4
        },
        end: {
          line: 615,
          column: 59
        }
      },
      "188": {
        start: {
          line: 615,
          column: 34
        },
        end: {
          line: 615,
          column: 57
        }
      },
      "189": {
        start: {
          line: 620,
          column: 4
        },
        end: {
          line: 625,
          column: 5
        }
      },
      "190": {
        start: {
          line: 621,
          column: 21
        },
        end: {
          line: 621,
          column: 91
        }
      },
      "191": {
        start: {
          line: 622,
          column: 6
        },
        end: {
          line: 622,
          column: 44
        }
      },
      "192": {
        start: {
          line: 624,
          column: 6
        },
        end: {
          line: 624,
          column: 68
        }
      },
      "193": {
        start: {
          line: 629,
          column: 4
        },
        end: {
          line: 634,
          column: 5
        }
      },
      "194": {
        start: {
          line: 630,
          column: 21
        },
        end: {
          line: 630,
          column: 96
        }
      },
      "195": {
        start: {
          line: 631,
          column: 6
        },
        end: {
          line: 631,
          column: 46
        }
      },
      "196": {
        start: {
          line: 633,
          column: 6
        },
        end: {
          line: 633,
          column: 70
        }
      },
      "197": {
        start: {
          line: 638,
          column: 4
        },
        end: {
          line: 643,
          column: 5
        }
      },
      "198": {
        start: {
          line: 639,
          column: 21
        },
        end: {
          line: 639,
          column: 104
        }
      },
      "199": {
        start: {
          line: 640,
          column: 6
        },
        end: {
          line: 640,
          column: 46
        }
      },
      "200": {
        start: {
          line: 642,
          column: 6
        },
        end: {
          line: 642,
          column: 67
        }
      },
      "201": {
        start: {
          line: 647,
          column: 4
        },
        end: {
          line: 652,
          column: 5
        }
      },
      "202": {
        start: {
          line: 648,
          column: 21
        },
        end: {
          line: 648,
          column: 67
        }
      },
      "203": {
        start: {
          line: 649,
          column: 6
        },
        end: {
          line: 649,
          column: 44
        }
      },
      "204": {
        start: {
          line: 651,
          column: 6
        },
        end: {
          line: 651,
          column: 15
        }
      },
      "205": {
        start: {
          line: 656,
          column: 4
        },
        end: {
          line: 661,
          column: 5
        }
      },
      "206": {
        start: {
          line: 657,
          column: 21
        },
        end: {
          line: 657,
          column: 82
        }
      },
      "207": {
        start: {
          line: 658,
          column: 6
        },
        end: {
          line: 658,
          column: 51
        }
      },
      "208": {
        start: {
          line: 660,
          column: 6
        },
        end: {
          line: 660,
          column: 73
        }
      },
      "209": {
        start: {
          line: 665,
          column: 0
        },
        end: {
          line: 665,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        loc: {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        loc: {
          start: {
            line: 54,
            column: 30
          },
          end: {
            line: 63,
            column: 3
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 65,
            column: 3
          }
        },
        loc: {
          start: {
            line: 65,
            column: 37
          },
          end: {
            line: 85,
            column: 3
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 87,
            column: 2
          },
          end: {
            line: 87,
            column: 3
          }
        },
        loc: {
          start: {
            line: 87,
            column: 38
          },
          end: {
            line: 110,
            column: 3
          }
        },
        line: 87
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 112,
            column: 2
          },
          end: {
            line: 112,
            column: 3
          }
        },
        loc: {
          start: {
            line: 112,
            column: 42
          },
          end: {
            line: 149,
            column: 3
          }
        },
        line: 112
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 152,
            column: 2
          },
          end: {
            line: 152,
            column: 3
          }
        },
        loc: {
          start: {
            line: 152,
            column: 32
          },
          end: {
            line: 194,
            column: 3
          }
        },
        line: 152
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 196,
            column: 2
          },
          end: {
            line: 196,
            column: 3
          }
        },
        loc: {
          start: {
            line: 196,
            column: 38
          },
          end: {
            line: 223,
            column: 3
          }
        },
        line: 196
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 225,
            column: 2
          },
          end: {
            line: 225,
            column: 3
          }
        },
        loc: {
          start: {
            line: 225,
            column: 35
          },
          end: {
            line: 257,
            column: 3
          }
        },
        line: 225
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 260,
            column: 2
          },
          end: {
            line: 260,
            column: 3
          }
        },
        loc: {
          start: {
            line: 260,
            column: 31
          },
          end: {
            line: 292,
            column: 3
          }
        },
        line: 260
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 294,
            column: 2
          },
          end: {
            line: 294,
            column: 3
          }
        },
        loc: {
          start: {
            line: 294,
            column: 26
          },
          end: {
            line: 330,
            column: 3
          }
        },
        line: 294
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 315,
            column: 88
          },
          end: {
            line: 315,
            column: 89
          }
        },
        loc: {
          start: {
            line: 315,
            column: 93
          },
          end: {
            line: 315,
            column: 101
          }
        },
        line: 315
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 332,
            column: 2
          },
          end: {
            line: 332,
            column: 3
          }
        },
        loc: {
          start: {
            line: 332,
            column: 27
          },
          end: {
            line: 360,
            column: 3
          }
        },
        line: 332
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 362,
            column: 2
          },
          end: {
            line: 362,
            column: 3
          }
        },
        loc: {
          start: {
            line: 362,
            column: 35
          },
          end: {
            line: 399,
            column: 3
          }
        },
        line: 362
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 371,
            column: 22
          },
          end: {
            line: 371,
            column: 23
          }
        },
        loc: {
          start: {
            line: 372,
            column: 10
          },
          end: {
            line: 374,
            column: 94
          }
        },
        line: 372
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 373,
            column: 18
          },
          end: {
            line: 373,
            column: 19
          }
        },
        loc: {
          start: {
            line: 373,
            column: 25
          },
          end: {
            line: 373,
            column: 69
          }
        },
        line: 373
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 374,
            column: 19
          },
          end: {
            line: 374,
            column: 20
          }
        },
        loc: {
          start: {
            line: 374,
            column: 29
          },
          end: {
            line: 374,
            column: 92
          }
        },
        line: 374
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 378,
            column: 39
          },
          end: {
            line: 378,
            column: 40
          }
        },
        loc: {
          start: {
            line: 378,
            column: 49
          },
          end: {
            line: 378,
            column: 61
          }
        },
        line: 378
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 379,
            column: 52
          },
          end: {
            line: 379,
            column: 53
          }
        },
        loc: {
          start: {
            line: 379,
            column: 57
          },
          end: {
            line: 379,
            column: 78
          }
        },
        line: 379
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 384,
            column: 91
          },
          end: {
            line: 384,
            column: 92
          }
        },
        loc: {
          start: {
            line: 384,
            column: 96
          },
          end: {
            line: 384,
            column: 102
          }
        },
        line: 384
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 401,
            column: 2
          },
          end: {
            line: 401,
            column: 3
          }
        },
        loc: {
          start: {
            line: 401,
            column: 34
          },
          end: {
            line: 438,
            column: 3
          }
        },
        line: 401
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 440,
            column: 2
          },
          end: {
            line: 440,
            column: 3
          }
        },
        loc: {
          start: {
            line: 440,
            column: 25
          },
          end: {
            line: 464,
            column: 3
          }
        },
        line: 440
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 467,
            column: 2
          },
          end: {
            line: 467,
            column: 3
          }
        },
        loc: {
          start: {
            line: 467,
            column: 40
          },
          end: {
            line: 486,
            column: 3
          }
        },
        line: 467
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 488,
            column: 2
          },
          end: {
            line: 488,
            column: 3
          }
        },
        loc: {
          start: {
            line: 488,
            column: 48
          },
          end: {
            line: 520,
            column: 3
          }
        },
        line: 488
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 522,
            column: 2
          },
          end: {
            line: 522,
            column: 3
          }
        },
        loc: {
          start: {
            line: 522,
            column: 53
          },
          end: {
            line: 539,
            column: 3
          }
        },
        line: 522
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 541,
            column: 2
          },
          end: {
            line: 541,
            column: 3
          }
        },
        loc: {
          start: {
            line: 541,
            column: 48
          },
          end: {
            line: 570,
            column: 3
          }
        },
        line: 541
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 573,
            column: 2
          },
          end: {
            line: 573,
            column: 3
          }
        },
        loc: {
          start: {
            line: 573,
            column: 42
          },
          end: {
            line: 593,
            column: 3
          }
        },
        line: 573
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 581,
            column: 46
          },
          end: {
            line: 581,
            column: 47
          }
        },
        loc: {
          start: {
            line: 581,
            column: 53
          },
          end: {
            line: 581,
            column: 77
          }
        },
        line: 581
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 595,
            column: 2
          },
          end: {
            line: 595,
            column: 3
          }
        },
        loc: {
          start: {
            line: 595,
            column: 39
          },
          end: {
            line: 612,
            column: 3
          }
        },
        line: 595
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 596,
            column: 31
          },
          end: {
            line: 596,
            column: 32
          }
        },
        loc: {
          start: {
            line: 596,
            column: 41
          },
          end: {
            line: 596,
            column: 53
          }
        },
        line: 596
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 597,
            column: 40
          },
          end: {
            line: 597,
            column: 41
          }
        },
        loc: {
          start: {
            line: 597,
            column: 49
          },
          end: {
            line: 597,
            column: 75
          }
        },
        line: 597
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 598,
            column: 42
          },
          end: {
            line: 598,
            column: 43
          }
        },
        loc: {
          start: {
            line: 598,
            column: 51
          },
          end: {
            line: 598,
            column: 79
          }
        },
        line: 598
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 608,
            column: 72
          },
          end: {
            line: 608,
            column: 73
          }
        },
        loc: {
          start: {
            line: 608,
            column: 77
          },
          end: {
            line: 608,
            column: 84
          }
        },
        line: 608
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 614,
            column: 2
          },
          end: {
            line: 614,
            column: 3
          }
        },
        loc: {
          start: {
            line: 614,
            column: 18
          },
          end: {
            line: 616,
            column: 3
          }
        },
        line: 614
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 615,
            column: 23
          },
          end: {
            line: 615,
            column: 24
          }
        },
        loc: {
          start: {
            line: 615,
            column: 34
          },
          end: {
            line: 615,
            column: 57
          }
        },
        line: 615
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 619,
            column: 2
          },
          end: {
            line: 619,
            column: 3
          }
        },
        loc: {
          start: {
            line: 619,
            column: 23
          },
          end: {
            line: 626,
            column: 3
          }
        },
        line: 619
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 628,
            column: 2
          },
          end: {
            line: 628,
            column: 3
          }
        },
        loc: {
          start: {
            line: 628,
            column: 25
          },
          end: {
            line: 635,
            column: 3
          }
        },
        line: 628
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 637,
            column: 2
          },
          end: {
            line: 637,
            column: 3
          }
        },
        loc: {
          start: {
            line: 637,
            column: 22
          },
          end: {
            line: 644,
            column: 3
          }
        },
        line: 637
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 646,
            column: 2
          },
          end: {
            line: 646,
            column: 3
          }
        },
        loc: {
          start: {
            line: 646,
            column: 34
          },
          end: {
            line: 653,
            column: 3
          }
        },
        line: 646
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 655,
            column: 2
          },
          end: {
            line: 655,
            column: 3
          }
        },
        loc: {
          start: {
            line: 655,
            column: 35
          },
          end: {
            line: 662,
            column: 3
          }
        },
        line: 655
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 61
          }
        }, {
          start: {
            line: 37,
            column: 65
          },
          end: {
            line: 37,
            column: 96
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 49
          }
        }, {
          start: {
            line: 38,
            column: 53
          },
          end: {
            line: 38,
            column: 95
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "3": {
        loc: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "4": {
        loc: {
          start: {
            line: 132,
            column: 15
          },
          end: {
            line: 132,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 15
          },
          end: {
            line: 132,
            column: 35
          }
        }, {
          start: {
            line: 132,
            column: 39
          },
          end: {
            line: 132,
            column: 57
          }
        }, {
          start: {
            line: 132,
            column: 61
          },
          end: {
            line: 132,
            column: 86
          }
        }, {
          start: {
            line: 132,
            column: 90
          },
          end: {
            line: 132,
            column: 114
          }
        }],
        line: 132
      },
      "5": {
        loc: {
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 181,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 181,
            column: 7
          }
        }, {
          start: {
            line: 179,
            column: 13
          },
          end: {
            line: 181,
            column: 7
          }
        }],
        line: 168
      },
      "6": {
        loc: {
          start: {
            line: 176,
            column: 21
          },
          end: {
            line: 176,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 21
          },
          end: {
            line: 176,
            column: 53
          }
        }, {
          start: {
            line: 176,
            column: 57
          },
          end: {
            line: 176,
            column: 66
          }
        }],
        line: 176
      },
      "7": {
        loc: {
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 214,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 214,
            column: 7
          }
        }, {
          start: {
            line: 207,
            column: 13
          },
          end: {
            line: 214,
            column: 7
          }
        }],
        line: 201
      },
      "8": {
        loc: {
          start: {
            line: 246,
            column: 22
          },
          end: {
            line: 246,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 22
          },
          end: {
            line: 246,
            column: 47
          }
        }, {
          start: {
            line: 246,
            column: 51
          },
          end: {
            line: 246,
            column: 52
          }
        }],
        line: 246
      },
      "9": {
        loc: {
          start: {
            line: 269,
            column: 6
          },
          end: {
            line: 269,
            column: 90
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 6
          },
          end: {
            line: 269,
            column: 90
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "10": {
        loc: {
          start: {
            line: 270,
            column: 6
          },
          end: {
            line: 270,
            column: 98
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 6
          },
          end: {
            line: 270,
            column: 98
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "11": {
        loc: {
          start: {
            line: 271,
            column: 6
          },
          end: {
            line: 271,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 6
          },
          end: {
            line: 271,
            column: 86
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "12": {
        loc: {
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 275,
            column: 38
          },
          end: {
            line: 275,
            column: 47
          }
        }, {
          start: {
            line: 275,
            column: 50
          },
          end: {
            line: 275,
            column: 61
          }
        }],
        line: 275
      },
      "13": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        }, {
          start: {
            line: 304,
            column: 15
          },
          end: {
            line: 309,
            column: 9
          }
        }],
        line: 302
      },
      "14": {
        loc: {
          start: {
            line: 307,
            column: 19
          },
          end: {
            line: 307,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 19
          },
          end: {
            line: 307,
            column: 35
          }
        }, {
          start: {
            line: 307,
            column: 39
          },
          end: {
            line: 307,
            column: 54
          }
        }],
        line: 307
      },
      "15": {
        loc: {
          start: {
            line: 314,
            column: 16
          },
          end: {
            line: 314,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 48
          },
          end: {
            line: 314,
            column: 57
          }
        }, {
          start: {
            line: 314,
            column: 60
          },
          end: {
            line: 314,
            column: 71
          }
        }],
        line: 314
      },
      "16": {
        loc: {
          start: {
            line: 315,
            column: 15
          },
          end: {
            line: 315,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 315,
            column: 45
          },
          end: {
            line: 315,
            column: 115
          }
        }, {
          start: {
            line: 315,
            column: 118
          },
          end: {
            line: 315,
            column: 122
          }
        }],
        line: 315
      },
      "17": {
        loc: {
          start: {
            line: 344,
            column: 16
          },
          end: {
            line: 344,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 344,
            column: 44
          },
          end: {
            line: 344,
            column: 53
          }
        }, {
          start: {
            line: 344,
            column: 56
          },
          end: {
            line: 344,
            column: 67
          }
        }],
        line: 344
      },
      "18": {
        loc: {
          start: {
            line: 345,
            column: 15
          },
          end: {
            line: 345,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 345,
            column: 44
          },
          end: {
            line: 345,
            column: 71
          }
        }, {
          start: {
            line: 345,
            column: 74
          },
          end: {
            line: 345,
            column: 78
          }
        }],
        line: 345
      },
      "19": {
        loc: {
          start: {
            line: 383,
            column: 16
          },
          end: {
            line: 383,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 383,
            column: 49
          },
          end: {
            line: 383,
            column: 58
          }
        }, {
          start: {
            line: 383,
            column: 61
          },
          end: {
            line: 383,
            column: 72
          }
        }],
        line: 383
      },
      "20": {
        loc: {
          start: {
            line: 384,
            column: 15
          },
          end: {
            line: 384,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 46
          },
          end: {
            line: 384,
            column: 116
          }
        }, {
          start: {
            line: 384,
            column: 119
          },
          end: {
            line: 384,
            column: 123
          }
        }],
        line: 384
      },
      "21": {
        loc: {
          start: {
            line: 416,
            column: 6
          },
          end: {
            line: 418,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 6
          },
          end: {
            line: 418,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "22": {
        loc: {
          start: {
            line: 422,
            column: 16
          },
          end: {
            line: 422,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 422,
            column: 49
          },
          end: {
            line: 422,
            column: 58
          }
        }, {
          start: {
            line: 422,
            column: 61
          },
          end: {
            line: 422,
            column: 72
          }
        }],
        line: 422
      },
      "23": {
        loc: {
          start: {
            line: 498,
            column: 16
          },
          end: {
            line: 498,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 498,
            column: 32
          },
          end: {
            line: 498,
            column: 47
          }
        }, {
          start: {
            line: 498,
            column: 50
          },
          end: {
            line: 498,
            column: 52
          }
        }],
        line: 498
      },
      "24": {
        loc: {
          start: {
            line: 549,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 549,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 549
      },
      "25": {
        loc: {
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 549,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 549,
            column: 46
          }
        }, {
          start: {
            line: 549,
            column: 50
          },
          end: {
            line: 549,
            column: 81
          }
        }],
        line: 549
      },
      "26": {
        loc: {
          start: {
            line: 554,
            column: 8
          },
          end: {
            line: 556,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 8
          },
          end: {
            line: 556,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 554
      },
      "27": {
        loc: {
          start: {
            line: 554,
            column: 12
          },
          end: {
            line: 554,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 554,
            column: 12
          },
          end: {
            line: 554,
            column: 39
          }
        }, {
          start: {
            line: 554,
            column: 43
          },
          end: {
            line: 554,
            column: 73
          }
        }],
        line: 554
      },
      "28": {
        loc: {
          start: {
            line: 581,
            column: 8
          },
          end: {
            line: 586,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 581,
            column: 8
          },
          end: {
            line: 586,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 581
      },
      "29": {
        loc: {
          start: {
            line: 581,
            column: 12
          },
          end: {
            line: 581,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 581,
            column: 12
          },
          end: {
            line: 581,
            column: 26
          }
        }, {
          start: {
            line: 581,
            column: 30
          },
          end: {
            line: 581,
            column: 78
          }
        }],
        line: 581
      },
      "30": {
        loc: {
          start: {
            line: 608,
            column: 23
          },
          end: {
            line: 608,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 608,
            column: 52
          },
          end: {
            line: 608,
            column: 96
          }
        }, {
          start: {
            line: 608,
            column: 99
          },
          end: {
            line: 608,
            column: 103
          }
        }],
        line: 608
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e1bbca5e2812f9e1094bebdcb6d1edc59276661a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_82w931bt3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_82w931bt3();
const axios =
/* istanbul ignore next */
(cov_82w931bt3().s[0]++, require('axios'));
const yaml =
/* istanbul ignore next */
(cov_82w931bt3().s[1]++, require('js-yaml'));
const fs =
/* istanbul ignore next */
(cov_82w931bt3().s[2]++, require('fs').promises);
const {
  exec
} =
/* istanbul ignore next */
(cov_82w931bt3().s[3]++, require('child_process'));
const {
  promisify
} =
/* istanbul ignore next */
(cov_82w931bt3().s[4]++, require('util'));
const execAsync =
/* istanbul ignore next */
(cov_82w931bt3().s[5]++, promisify(exec));
const {
  MCPCoordinator
} =
/* istanbul ignore next */
(cov_82w931bt3().s[6]++, require('../../api/services/mcp-coordinator'));
const {
  Logger
} =
/* istanbul ignore next */
(cov_82w931bt3().s[7]++, require('../../api/utils/logger'));
class HealthChecker {
  constructor() {
    /* istanbul ignore next */
    cov_82w931bt3().f[0]++;
    cov_82w931bt3().s[8]++;
    this.config = null;
    /* istanbul ignore next */
    cov_82w931bt3().s[9]++;
    this.logger = new Logger('HealthChecker');
    /* istanbul ignore next */
    cov_82w931bt3().s[10]++;
    this.mcpCoordinator = null;
    /* istanbul ignore next */
    cov_82w931bt3().s[11]++;
    this.baselineMetrics = null;
  }
  async initialize() {
    /* istanbul ignore next */
    cov_82w931bt3().f[1]++;
    cov_82w931bt3().s[12]++;
    // Load configuration from existing config manager
    await this.loadConfiguration();

    // Initialize MCP coordinator
    /* istanbul ignore next */
    cov_82w931bt3().s[13]++;
    this.mcpCoordinator = new MCPCoordinator();
    /* istanbul ignore next */
    cov_82w931bt3().s[14]++;
    await this.mcpCoordinator.initialize();

    // Load baseline metrics
    /* istanbul ignore next */
    cov_82w931bt3().s[15]++;
    await this.loadBaselineMetrics();
    /* istanbul ignore next */
    cov_82w931bt3().s[16]++;
    this.logger.info('Health Checker initialized');
  }
  async loadConfiguration() {
    /* istanbul ignore next */
    cov_82w931bt3().f[2]++;
    cov_82w931bt3().s[17]++;
    // Default configuration
    this.config = {
      deployment: {
        homeAssistantConfig: {
          healthCheckEndpoint:
          /* istanbul ignore next */
          (cov_82w931bt3().b[0][0]++, process.env.HOME_ASSISTANT_URL) ||
          /* istanbul ignore next */
          (cov_82w931bt3().b[0][1]++, 'http://192.168.1.155:8123/api'),
          token:
          /* istanbul ignore next */
          (cov_82w931bt3().b[1][0]++, process.env.HOME_ASSISTANT_TOKEN) ||
          /* istanbul ignore next */
          (cov_82w931bt3().b[1][1]++, 'test-home-assistant-token-for-diagnostic')
        }
      },
      thresholds: {
        diskUsage: 85,
        memoryUsage: 90,
        cpuUsage: 95,
        responseTime: 2000
      },
      monitoring: {
        retries: 3,
        timeout: 10000
      }
    };
  }
  async loadBaselineMetrics() {
    /* istanbul ignore next */
    cov_82w931bt3().f[3]++;
    cov_82w931bt3().s[18]++;
    try {
      const baselinePath =
      /* istanbul ignore next */
      (cov_82w931bt3().s[19]++, 'scripts/health-checks/baseline-metrics.json');
      const data =
      /* istanbul ignore next */
      (cov_82w931bt3().s[20]++, await fs.readFile(baselinePath, 'utf8'));
      /* istanbul ignore next */
      cov_82w931bt3().s[21]++;
      this.baselineMetrics = JSON.parse(data);
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[22]++;
      this.logger.warn('No baseline metrics found, will create new baseline');
      /* istanbul ignore next */
      cov_82w931bt3().s[23]++;
      this.baselineMetrics = null;
    }
  }
  async performPreDeploymentChecks() {
    /* istanbul ignore next */
    cov_82w931bt3().f[4]++;
    cov_82w931bt3().s[24]++;
    this.logger.info('Starting pre-deployment health checks');
    const checks =
    /* istanbul ignore next */
    (cov_82w931bt3().s[25]++, [this.checkHomeAssistantAPI(), this.checkSystemResources(), this.checkMCPServers(), this.checkBackupSpace(), this.checkNetworkConnectivity()]);
    const results =
    /* istanbul ignore next */
    (cov_82w931bt3().s[26]++, await Promise.allSettled(checks));
    const healthReport =
    /* istanbul ignore next */
    (cov_82w931bt3().s[27]++, this.processHealthResults(results, 'pre-deployment'));
    /* istanbul ignore next */
    cov_82w931bt3().s[28]++;
    if (!healthReport.overall.healthy) {
      /* istanbul ignore next */
      cov_82w931bt3().b[2][0]++;
      cov_82w931bt3().s[29]++;
      throw new Error(`Pre-deployment health checks failed: ${healthReport.overall.failureReason}`);
    } else
    /* istanbul ignore next */
    {
      cov_82w931bt3().b[2][1]++;
    }
    cov_82w931bt3().s[30]++;
    this.logger.info('Pre-deployment health checks passed');
    /* istanbul ignore next */
    cov_82w931bt3().s[31]++;
    return healthReport;
  }
  async performPostDeploymentChecks() {
    /* istanbul ignore next */
    cov_82w931bt3().f[5]++;
    cov_82w931bt3().s[32]++;
    this.logger.info('Starting post-deployment health checks');

    // Allow system to settle after deployment
    /* istanbul ignore next */
    cov_82w931bt3().s[33]++;
    await this.sleep(10000);
    const checks =
    /* istanbul ignore next */
    (cov_82w931bt3().s[34]++, [this.checkHomeAssistantAPI(), this.checkConfigurationIntegrity(), this.checkServiceAvailability(), this.checkPerformanceMetrics(), this.checkLogErrors()]);
    const results =
    /* istanbul ignore next */
    (cov_82w931bt3().s[35]++, await Promise.allSettled(checks));
    const healthReport =
    /* istanbul ignore next */
    (cov_82w931bt3().s[36]++, this.processHealthResults(results, 'post-deployment'));
    /* istanbul ignore next */
    cov_82w931bt3().s[37]++;
    if (!healthReport.overall.healthy) {
      /* istanbul ignore next */
      cov_82w931bt3().b[3][0]++;
      cov_82w931bt3().s[38]++;
      throw new Error(`Post-deployment health checks failed: ${healthReport.overall.failureReason}`);
    } else
    /* istanbul ignore next */
    {
      cov_82w931bt3().b[3][1]++;
    }
    cov_82w931bt3().s[39]++;
    this.logger.info('Post-deployment health checks passed');
    /* istanbul ignore next */
    cov_82w931bt3().s[40]++;
    return healthReport;
  }
  async validateConfiguration(configPath) {
    /* istanbul ignore next */
    cov_82w931bt3().f[6]++;
    cov_82w931bt3().s[41]++;
    this.logger.info(`Validating configuration at ${configPath}`);
    /* istanbul ignore next */
    cov_82w931bt3().s[42]++;
    try {
      // Read configuration files
      const configFiles =
      /* istanbul ignore next */
      (cov_82w931bt3().s[43]++, await this.getConfigurationFiles(configPath));

      // Validate YAML syntax
      const yamlValidation =
      /* istanbul ignore next */
      (cov_82w931bt3().s[44]++, await this.validateYAMLSyntax(configFiles));

      // Validate Home Assistant configuration
      const haValidation =
      /* istanbul ignore next */
      (cov_82w931bt3().s[45]++, await this.validateHomeAssistantConfig(configPath));

      // Validate configuration references
      const referenceValidation =
      /* istanbul ignore next */
      (cov_82w931bt3().s[46]++, await this.validateConfigurationReferences(configFiles));

      // Security validation
      const securityValidation =
      /* istanbul ignore next */
      (cov_82w931bt3().s[47]++, await this.validateSecurityCompliance(configFiles));
      const validationResult =
      /* istanbul ignore next */
      (cov_82w931bt3().s[48]++, {
        valid:
        /* istanbul ignore next */
        (cov_82w931bt3().b[4][0]++, yamlValidation.valid) &&
        /* istanbul ignore next */
        (cov_82w931bt3().b[4][1]++, haValidation.valid) &&
        /* istanbul ignore next */
        (cov_82w931bt3().b[4][2]++, referenceValidation.valid) &&
        /* istanbul ignore next */
        (cov_82w931bt3().b[4][3]++, securityValidation.valid),
        yamlSyntax: yamlValidation,
        homeAssistantConfig: haValidation,
        references: referenceValidation,
        security: securityValidation
      });
      /* istanbul ignore next */
      cov_82w931bt3().s[49]++;
      this.logger.info('Configuration validation completed', {
        valid: validationResult.valid
      });
      /* istanbul ignore next */
      cov_82w931bt3().s[50]++;
      return validationResult;
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[51]++;
      this.logger.error('Configuration validation failed', error);
      /* istanbul ignore next */
      cov_82w931bt3().s[52]++;
      return {
        valid: false,
        error: error.message
      };
    }
  }

  // Home Assistant Health Checks
  async checkHomeAssistantAPI() {
    /* istanbul ignore next */
    cov_82w931bt3().f[7]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_82w931bt3().s[53]++, this.config.deployment.homeAssistantConfig.healthCheckEndpoint);
    const token =
    /* istanbul ignore next */
    (cov_82w931bt3().s[54]++, this.config.deployment.homeAssistantConfig.token);
    /* istanbul ignore next */
    cov_82w931bt3().s[55]++;
    try {
      const startTime =
      /* istanbul ignore next */
      (cov_82w931bt3().s[56]++, Date.now());
      const response =
      /* istanbul ignore next */
      (cov_82w931bt3().s[57]++, await axios.get(`${endpoint}/states`, {
        timeout: this.config.monitoring.timeout,
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      }));
      const responseTime =
      /* istanbul ignore next */
      (cov_82w931bt3().s[58]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_82w931bt3().s[59]++;
      if (response.status === 200) {
        /* istanbul ignore next */
        cov_82w931bt3().b[5][0]++;
        cov_82w931bt3().s[60]++;
        return {
          name: 'home-assistant-api',
          status: 'healthy',
          responseTime: responseTime,
          details: {
            statusCode: response.status,
            stateCount: response.data.length,
            version:
            /* istanbul ignore next */
            (cov_82w931bt3().b[6][0]++, response.headers['x-ha-version']) ||
            /* istanbul ignore next */
            (cov_82w931bt3().b[6][1]++, 'unknown')
          }
        };
      } else {
        /* istanbul ignore next */
        cov_82w931bt3().b[5][1]++;
        cov_82w931bt3().s[61]++;
        throw new Error(`Unexpected status code: ${response.status}`);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[62]++;
      return {
        name: 'home-assistant-api',
        status: 'unhealthy',
        error: error.message,
        details: {
          endpoint: endpoint,
          timeout: error.code === 'ECONNABORTED'
        }
      };
    }
  }
  async checkConfigurationIntegrity() {
    /* istanbul ignore next */
    cov_82w931bt3().f[8]++;
    cov_82w931bt3().s[63]++;
    try {
      const configPath =
      /* istanbul ignore next */
      (cov_82w931bt3().s[64]++, '/config');
      const validation =
      /* istanbul ignore next */
      (cov_82w931bt3().s[65]++, await this.validateConfiguration(configPath));
      /* istanbul ignore next */
      cov_82w931bt3().s[66]++;
      if (validation.valid) {
        /* istanbul ignore next */
        cov_82w931bt3().b[7][0]++;
        cov_82w931bt3().s[67]++;
        return {
          name: 'configuration-integrity',
          status: 'healthy',
          details: validation
        };
      } else {
        /* istanbul ignore next */
        cov_82w931bt3().b[7][1]++;
        cov_82w931bt3().s[68]++;
        return {
          name: 'configuration-integrity',
          status: 'unhealthy',
          error: 'Configuration validation failed',
          details: validation
        };
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[69]++;
      return {
        name: 'configuration-integrity',
        status: 'unhealthy',
        error: error.message
      };
    }
  }
  async checkServiceAvailability() {
    /* istanbul ignore next */
    cov_82w931bt3().f[9]++;
    cov_82w931bt3().s[70]++;
    try {
      const endpoint =
      /* istanbul ignore next */
      (cov_82w931bt3().s[71]++, this.config.deployment.homeAssistantConfig.healthCheckEndpoint.replace('/api', ''));
      const token =
      /* istanbul ignore next */
      (cov_82w931bt3().s[72]++, this.config.deployment.homeAssistantConfig.token);
      const response =
      /* istanbul ignore next */
      (cov_82w931bt3().s[73]++, await axios.get(`${endpoint}/api/config`, {
        timeout: 5000,
        headers: {
          'Authorization': `Bearer ${token}`
        }
      }));
      const config =
      /* istanbul ignore next */
      (cov_82w931bt3().s[74]++, response.data);
      /* istanbul ignore next */
      cov_82w931bt3().s[75]++;
      return {
        name: 'service-availability',
        status: 'healthy',
        details: {
          version: config.version,
          units: config.unit_system,
          timeZone: config.time_zone,
          components:
          /* istanbul ignore next */
          (cov_82w931bt3().b[8][0]++, config.components?.length) ||
          /* istanbul ignore next */
          (cov_82w931bt3().b[8][1]++, 0)
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[76]++;
      return {
        name: 'service-availability',
        status: 'unhealthy',
        error: error.message
      };
    }
  }

  // System Health Checks
  async checkSystemResources() {
    /* istanbul ignore next */
    cov_82w931bt3().f[10]++;
    cov_82w931bt3().s[77]++;
    try {
      const diskUsage =
      /* istanbul ignore next */
      (cov_82w931bt3().s[78]++, await this.getDiskUsage());
      const memoryUsage =
      /* istanbul ignore next */
      (cov_82w931bt3().s[79]++, await this.getMemoryUsage());
      const cpuUsage =
      /* istanbul ignore next */
      (cov_82w931bt3().s[80]++, await this.getCPUUsage());
      const thresholds =
      /* istanbul ignore next */
      (cov_82w931bt3().s[81]++, this.config.thresholds);
      const issues =
      /* istanbul ignore next */
      (cov_82w931bt3().s[82]++, []);
      /* istanbul ignore next */
      cov_82w931bt3().s[83]++;
      if (diskUsage > thresholds.diskUsage) {
        /* istanbul ignore next */
        cov_82w931bt3().b[9][0]++;
        cov_82w931bt3().s[84]++;
        issues.push(`Disk usage high: ${diskUsage}%`);
      } else
      /* istanbul ignore next */
      {
        cov_82w931bt3().b[9][1]++;
      }
      cov_82w931bt3().s[85]++;
      if (memoryUsage > thresholds.memoryUsage) {
        /* istanbul ignore next */
        cov_82w931bt3().b[10][0]++;
        cov_82w931bt3().s[86]++;
        issues.push(`Memory usage high: ${memoryUsage}%`);
      } else
      /* istanbul ignore next */
      {
        cov_82w931bt3().b[10][1]++;
      }
      cov_82w931bt3().s[87]++;
      if (cpuUsage > thresholds.cpuUsage) {
        /* istanbul ignore next */
        cov_82w931bt3().b[11][0]++;
        cov_82w931bt3().s[88]++;
        issues.push(`CPU usage high: ${cpuUsage}%`);
      } else
      /* istanbul ignore next */
      {
        cov_82w931bt3().b[11][1]++;
      }
      cov_82w931bt3().s[89]++;
      return {
        name: 'system-resources',
        status: issues.length === 0 ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[12][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_82w931bt3().b[12][1]++, 'unhealthy'),
        error: issues.join(', '),
        details: {
          diskUsage: diskUsage,
          memoryUsage: memoryUsage,
          cpuUsage: cpuUsage,
          thresholds: thresholds
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[90]++;
      return {
        name: 'system-resources',
        status: 'unhealthy',
        error: error.message
      };
    }
  }
  async checkMCPServers() {
    /* istanbul ignore next */
    cov_82w931bt3().f[11]++;
    cov_82w931bt3().s[91]++;
    try {
      // Get MCP server status from coordinator
      const mcpHealth =
      /* istanbul ignore next */
      (cov_82w931bt3().s[92]++, await this.mcpCoordinator.getHealthStatus());
      const healthyServers =
      /* istanbul ignore next */
      (cov_82w931bt3().s[93]++, []);
      const unhealthyServers =
      /* istanbul ignore next */
      (cov_82w931bt3().s[94]++, []);
      /* istanbul ignore next */
      cov_82w931bt3().s[95]++;
      for (const [serverType, status] of Object.entries(mcpHealth)) {
        /* istanbul ignore next */
        cov_82w931bt3().s[96]++;
        if (status.status === 'healthy') {
          /* istanbul ignore next */
          cov_82w931bt3().b[13][0]++;
          cov_82w931bt3().s[97]++;
          healthyServers.push(serverType);
        } else {
          /* istanbul ignore next */
          cov_82w931bt3().b[13][1]++;
          cov_82w931bt3().s[98]++;
          unhealthyServers.push({
            server: serverType,
            error:
            /* istanbul ignore next */
            (cov_82w931bt3().b[14][0]++, status.lastError) ||
            /* istanbul ignore next */
            (cov_82w931bt3().b[14][1]++, 'Unknown error')
          });
        }
      }
      /* istanbul ignore next */
      cov_82w931bt3().s[99]++;
      return {
        name: 'mcp-servers',
        status: unhealthyServers.length === 0 ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[15][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_82w931bt3().b[15][1]++, 'unhealthy'),
        error: unhealthyServers.length > 0 ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[16][0]++, `Unhealthy servers: ${unhealthyServers.map(s => {
          /* istanbul ignore next */
          cov_82w931bt3().f[12]++;
          cov_82w931bt3().s[100]++;
          return s.server;
        }).join(', ')}`) :
        /* istanbul ignore next */
        (cov_82w931bt3().b[16][1]++, null),
        details: {
          healthyServers: healthyServers,
          unhealthyServers: unhealthyServers,
          totalServers: Object.keys(mcpHealth).length
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[101]++;
      return {
        name: 'mcp-servers',
        status: 'unhealthy',
        error: error.message
      };
    }
  }
  async checkBackupSpace() {
    /* istanbul ignore next */
    cov_82w931bt3().f[13]++;
    cov_82w931bt3().s[102]++;
    try {
      const backupPath =
      /* istanbul ignore next */
      (cov_82w931bt3().s[103]++, '/backup');
      const usage =
      /* istanbul ignore next */
      (cov_82w931bt3().s[104]++, await this.getDirectorySize(backupPath));
      const available =
      /* istanbul ignore next */
      (cov_82w931bt3().s[105]++, await this.getAvailableSpace(backupPath));

      // Check if we have enough space for at least 2 more backups
      const estimatedBackupSize =
      /* istanbul ignore next */
      (cov_82w931bt3().s[106]++, 100 * 1024 * 1024); // 100MB estimated
      const requiredSpace =
      /* istanbul ignore next */
      (cov_82w931bt3().s[107]++, estimatedBackupSize * 2);
      /* istanbul ignore next */
      cov_82w931bt3().s[108]++;
      return {
        name: 'backup-space',
        status: available > requiredSpace ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[17][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_82w931bt3().b[17][1]++, 'unhealthy'),
        error: available <= requiredSpace ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[18][0]++, 'Insufficient backup space') :
        /* istanbul ignore next */
        (cov_82w931bt3().b[18][1]++, null),
        details: {
          currentUsage: usage,
          availableSpace: available,
          requiredSpace: requiredSpace
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[109]++;
      return {
        name: 'backup-space',
        status: 'unhealthy',
        error: error.message
      };
    }
  }
  async checkNetworkConnectivity() {
    /* istanbul ignore next */
    cov_82w931bt3().f[14]++;
    cov_82w931bt3().s[110]++;
    try {
      const endpoints =
      /* istanbul ignore next */
      (cov_82w931bt3().s[111]++, [{
        name: 'home-assistant',
        url: this.config.deployment.homeAssistantConfig.healthCheckEndpoint.replace('/api', '')
      }, {
        name: 'github',
        url: 'https://api.github.com'
      }, {
        name: 'dns',
        url: 'https://1.1.1.1'
      }]);
      const results =
      /* istanbul ignore next */
      (cov_82w931bt3().s[112]++, await Promise.allSettled(endpoints.map(endpoint => {
        /* istanbul ignore next */
        cov_82w931bt3().f[15]++;
        cov_82w931bt3().s[113]++;
        return axios.get(endpoint.url, {
          timeout: 5000
        }).then(() => {
          /* istanbul ignore next */
          cov_82w931bt3().f[16]++;
          cov_82w931bt3().s[114]++;
          return {
            name: endpoint.name,
            status: 'connected'
          };
        }).catch(error => {
          /* istanbul ignore next */
          cov_82w931bt3().f[17]++;
          cov_82w931bt3().s[115]++;
          return {
            name: endpoint.name,
            status: 'failed',
            error: error.message
          };
        });
      })));
      const connectivity =
      /* istanbul ignore next */
      (cov_82w931bt3().s[116]++, results.map(result => {
        /* istanbul ignore next */
        cov_82w931bt3().f[18]++;
        cov_82w931bt3().s[117]++;
        return result.value;
      }));
      const failedConnections =
      /* istanbul ignore next */
      (cov_82w931bt3().s[118]++, connectivity.filter(c => {
        /* istanbul ignore next */
        cov_82w931bt3().f[19]++;
        cov_82w931bt3().s[119]++;
        return c.status === 'failed';
      }));
      /* istanbul ignore next */
      cov_82w931bt3().s[120]++;
      return {
        name: 'network-connectivity',
        status: failedConnections.length === 0 ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[19][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_82w931bt3().b[19][1]++, 'unhealthy'),
        error: failedConnections.length > 0 ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[20][0]++, `Failed connections: ${failedConnections.map(c => {
          /* istanbul ignore next */
          cov_82w931bt3().f[20]++;
          cov_82w931bt3().s[121]++;
          return c.name;
        }).join(', ')}`) :
        /* istanbul ignore next */
        (cov_82w931bt3().b[20][1]++, null),
        details: {
          connectivity: connectivity,
          totalEndpoints: endpoints.length,
          failedEndpoints: failedConnections.length
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[122]++;
      return {
        name: 'network-connectivity',
        status: 'unhealthy',
        error: error.message
      };
    }
  }
  async checkPerformanceMetrics() {
    /* istanbul ignore next */
    cov_82w931bt3().f[21]++;
    cov_82w931bt3().s[123]++;
    try {
      const endpoint =
      /* istanbul ignore next */
      (cov_82w931bt3().s[124]++, this.config.deployment.homeAssistantConfig.healthCheckEndpoint);
      const token =
      /* istanbul ignore next */
      (cov_82w931bt3().s[125]++, this.config.deployment.homeAssistantConfig.token);
      const startTime =
      /* istanbul ignore next */
      (cov_82w931bt3().s[126]++, Date.now());
      const response =
      /* istanbul ignore next */
      (cov_82w931bt3().s[127]++, await axios.get(`${endpoint}/states`, {
        timeout: 5000,
        headers: {
          'Authorization': `Bearer ${token}`
        }
      }));
      const responseTime =
      /* istanbul ignore next */
      (cov_82w931bt3().s[128]++, Date.now() - startTime);
      const performanceIssues =
      /* istanbul ignore next */
      (cov_82w931bt3().s[129]++, []);
      /* istanbul ignore next */
      cov_82w931bt3().s[130]++;
      if (responseTime > this.config.thresholds.responseTime) {
        /* istanbul ignore next */
        cov_82w931bt3().b[21][0]++;
        cov_82w931bt3().s[131]++;
        performanceIssues.push(`Slow API response: ${responseTime}ms`);
      } else
      /* istanbul ignore next */
      {
        cov_82w931bt3().b[21][1]++;
      }
      cov_82w931bt3().s[132]++;
      return {
        name: 'performance-metrics',
        status: performanceIssues.length === 0 ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[22][0]++, 'healthy') :
        /* istanbul ignore next */
        (cov_82w931bt3().b[22][1]++, 'unhealthy'),
        error: performanceIssues.join(', '),
        details: {
          apiResponseTime: responseTime,
          threshold: this.config.thresholds.responseTime,
          stateCount: response.data.length
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[133]++;
      return {
        name: 'performance-metrics',
        status: 'unhealthy',
        error: error.message
      };
    }
  }
  async checkLogErrors() {
    /* istanbul ignore next */
    cov_82w931bt3().f[22]++;
    cov_82w931bt3().s[134]++;
    try {
      // Check Home Assistant logs for recent errors
      const endpoint =
      /* istanbul ignore next */
      (cov_82w931bt3().s[135]++, this.config.deployment.homeAssistantConfig.healthCheckEndpoint.replace('/api', ''));
      const token =
      /* istanbul ignore next */
      (cov_82w931bt3().s[136]++, this.config.deployment.homeAssistantConfig.token);

      // This would require a custom endpoint or file access to check logs
      // For now, we'll check if error log endpoints are available
      /* istanbul ignore next */
      cov_82w931bt3().s[137]++;
      return {
        name: 'log-errors',
        status: 'healthy',
        details: {
          message: 'Log error checking not yet implemented - requires custom endpoint'
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[138]++;
      return {
        name: 'log-errors',
        status: 'unhealthy',
        error: error.message
      };
    }
  }

  // Configuration Validation Methods
  async validateYAMLSyntax(configFiles) {
    /* istanbul ignore next */
    cov_82w931bt3().f[23]++;
    const errors =
    /* istanbul ignore next */
    (cov_82w931bt3().s[139]++, []);
    /* istanbul ignore next */
    cov_82w931bt3().s[140]++;
    for (const file of configFiles) {
      /* istanbul ignore next */
      cov_82w931bt3().s[141]++;
      try {
        const content =
        /* istanbul ignore next */
        (cov_82w931bt3().s[142]++, await fs.readFile(file.path, 'utf8'));
        /* istanbul ignore next */
        cov_82w931bt3().s[143]++;
        yaml.load(content);
      } catch (error) {
        /* istanbul ignore next */
        cov_82w931bt3().s[144]++;
        errors.push({
          file: file.path,
          error: error.message
        });
      }
    }
    /* istanbul ignore next */
    cov_82w931bt3().s[145]++;
    return {
      valid: errors.length === 0,
      errors: errors
    };
  }
  async validateHomeAssistantConfig(configPath) {
    /* istanbul ignore next */
    cov_82w931bt3().f[24]++;
    cov_82w931bt3().s[146]++;
    try {
      // Use Home Assistant's config check command if available
      const result =
      /* istanbul ignore next */
      (cov_82w931bt3().s[147]++, await execAsync(`hass --config ${configPath} --script check_config`, {
        timeout: 60000
      }));
      /* istanbul ignore next */
      cov_82w931bt3().s[148]++;
      return {
        valid: result.stderr === '',
        output: result.stdout,
        errors: result.stderr ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[23][0]++, [result.stderr]) :
        /* istanbul ignore next */
        (cov_82w931bt3().b[23][1]++, [])
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[149]++;
      // If hass command is not available, do basic file checks
      try {
        const configFile =
        /* istanbul ignore next */
        (cov_82w931bt3().s[150]++, `${configPath}/configuration.yaml`);
        const content =
        /* istanbul ignore next */
        (cov_82w931bt3().s[151]++, await fs.readFile(configFile, 'utf8'));
        /* istanbul ignore next */
        cov_82w931bt3().s[152]++;
        yaml.load(content);
        /* istanbul ignore next */
        cov_82w931bt3().s[153]++;
        return {
          valid: true,
          output: 'Basic YAML validation passed',
          errors: []
        };
      } catch (fileError) {
        /* istanbul ignore next */
        cov_82w931bt3().s[154]++;
        return {
          valid: false,
          errors: [fileError.message]
        };
      }
    }
  }
  async validateConfigurationReferences(configFiles) {
    /* istanbul ignore next */
    cov_82w931bt3().f[25]++;
    // Validate that references between config files are valid
    const errors =
    /* istanbul ignore next */
    (cov_82w931bt3().s[155]++, []);
    /* istanbul ignore next */
    cov_82w931bt3().s[156]++;
    try {
      /* istanbul ignore next */
      cov_82w931bt3().s[157]++;
      // This would implement cross-reference validation
      // For now, return basic validation
      return {
        valid: true,
        errors: []
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[158]++;
      return {
        valid: false,
        errors: [error.message]
      };
    }
  }
  async validateSecurityCompliance(configFiles) {
    /* istanbul ignore next */
    cov_82w931bt3().f[26]++;
    const issues =
    /* istanbul ignore next */
    (cov_82w931bt3().s[159]++, []);
    /* istanbul ignore next */
    cov_82w931bt3().s[160]++;
    try {
      /* istanbul ignore next */
      cov_82w931bt3().s[161]++;
      for (const file of configFiles) {
        const content =
        /* istanbul ignore next */
        (cov_82w931bt3().s[162]++, await fs.readFile(file.path, 'utf8'));

        // Check for hardcoded passwords/tokens
        /* istanbul ignore next */
        cov_82w931bt3().s[163]++;
        if (
        /* istanbul ignore next */
        (cov_82w931bt3().b[25][0]++, content.match(/password:\s*[^!]/i)) ||
        /* istanbul ignore next */
        (cov_82w931bt3().b[25][1]++, content.match(/token:\s*[^!]/i))) {
          /* istanbul ignore next */
          cov_82w931bt3().b[24][0]++;
          cov_82w931bt3().s[164]++;
          issues.push(`Potential hardcoded credentials in ${file.name}`);
        } else
        /* istanbul ignore next */
        {
          cov_82w931bt3().b[24][1]++;
        }

        // Check for insecure protocols
        cov_82w931bt3().s[165]++;
        if (
        /* istanbul ignore next */
        (cov_82w931bt3().b[27][0]++, content.includes('http://')) &&
        /* istanbul ignore next */
        (cov_82w931bt3().b[27][1]++, !content.includes('localhost'))) {
          /* istanbul ignore next */
          cov_82w931bt3().b[26][0]++;
          cov_82w931bt3().s[166]++;
          issues.push(`Insecure HTTP protocol found in ${file.name}`);
        } else
        /* istanbul ignore next */
        {
          cov_82w931bt3().b[26][1]++;
        }
      }
      /* istanbul ignore next */
      cov_82w931bt3().s[167]++;
      return {
        valid: issues.length === 0,
        issues: issues
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[168]++;
      return {
        valid: false,
        issues: [error.message]
      };
    }
  }

  // Utility Methods
  async getConfigurationFiles(configPath) {
    /* istanbul ignore next */
    cov_82w931bt3().f[27]++;
    const files =
    /* istanbul ignore next */
    (cov_82w931bt3().s[169]++, []);
    const extensions =
    /* istanbul ignore next */
    (cov_82w931bt3().s[170]++, ['.yaml', '.yml']);
    /* istanbul ignore next */
    cov_82w931bt3().s[171]++;
    try {
      const entries =
      /* istanbul ignore next */
      (cov_82w931bt3().s[172]++, await fs.readdir(configPath, {
        withFileTypes: true
      }));
      /* istanbul ignore next */
      cov_82w931bt3().s[173]++;
      for (const entry of entries) {
        /* istanbul ignore next */
        cov_82w931bt3().s[174]++;
        if (
        /* istanbul ignore next */
        (cov_82w931bt3().b[29][0]++, entry.isFile()) &&
        /* istanbul ignore next */
        (cov_82w931bt3().b[29][1]++, extensions.some(ext => {
          /* istanbul ignore next */
          cov_82w931bt3().f[28]++;
          cov_82w931bt3().s[175]++;
          return entry.name.endsWith(ext);
        }))) {
          /* istanbul ignore next */
          cov_82w931bt3().b[28][0]++;
          cov_82w931bt3().s[176]++;
          files.push({
            name: entry.name,
            path: `${configPath}/${entry.name}`
          });
        } else
        /* istanbul ignore next */
        {
          cov_82w931bt3().b[28][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[177]++;
      this.logger.warn(`Could not read config directory: ${error.message}`);
    }
    /* istanbul ignore next */
    cov_82w931bt3().s[178]++;
    return files;
  }
  processHealthResults(results, phase) {
    /* istanbul ignore next */
    cov_82w931bt3().f[29]++;
    const checks =
    /* istanbul ignore next */
    (cov_82w931bt3().s[179]++, results.map(result => {
      /* istanbul ignore next */
      cov_82w931bt3().f[30]++;
      cov_82w931bt3().s[180]++;
      return result.value;
    }));
    const healthyChecks =
    /* istanbul ignore next */
    (cov_82w931bt3().s[181]++, checks.filter(check => {
      /* istanbul ignore next */
      cov_82w931bt3().f[31]++;
      cov_82w931bt3().s[182]++;
      return check.status === 'healthy';
    }));
    const unhealthyChecks =
    /* istanbul ignore next */
    (cov_82w931bt3().s[183]++, checks.filter(check => {
      /* istanbul ignore next */
      cov_82w931bt3().f[32]++;
      cov_82w931bt3().s[184]++;
      return check.status === 'unhealthy';
    }));
    /* istanbul ignore next */
    cov_82w931bt3().s[185]++;
    return {
      phase: phase,
      timestamp: new Date().toISOString(),
      overall: {
        healthy: unhealthyChecks.length === 0,
        totalChecks: checks.length,
        healthyChecks: healthyChecks.length,
        unhealthyChecks: unhealthyChecks.length,
        failureReason: unhealthyChecks.length > 0 ?
        /* istanbul ignore next */
        (cov_82w931bt3().b[30][0]++, unhealthyChecks.map(c => {
          /* istanbul ignore next */
          cov_82w931bt3().f[33]++;
          cov_82w931bt3().s[186]++;
          return c.error;
        }).join('; ')) :
        /* istanbul ignore next */
        (cov_82w931bt3().b[30][1]++, null)
      },
      checks: checks
    };
  }
  async sleep(ms) {
    /* istanbul ignore next */
    cov_82w931bt3().f[34]++;
    cov_82w931bt3().s[187]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_82w931bt3().f[35]++;
      cov_82w931bt3().s[188]++;
      return setTimeout(resolve, ms);
    });
  }

  // System resource monitoring methods
  async getDiskUsage() {
    /* istanbul ignore next */
    cov_82w931bt3().f[36]++;
    cov_82w931bt3().s[189]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_82w931bt3().s[190]++, await execAsync('df / | tail -1 | awk \'{print $5}\' | sed \'s/%//\''));
      /* istanbul ignore next */
      cov_82w931bt3().s[191]++;
      return parseInt(result.stdout.trim());
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[192]++;
      throw new Error(`Failed to get disk usage: ${error.message}`);
    }
  }
  async getMemoryUsage() {
    /* istanbul ignore next */
    cov_82w931bt3().f[37]++;
    cov_82w931bt3().s[193]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_82w931bt3().s[194]++, await execAsync('free | grep Mem | awk \'{printf "%.1f", $3/$2 * 100.0}\''));
      /* istanbul ignore next */
      cov_82w931bt3().s[195]++;
      return parseFloat(result.stdout.trim());
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[196]++;
      throw new Error(`Failed to get memory usage: ${error.message}`);
    }
  }
  async getCPUUsage() {
    /* istanbul ignore next */
    cov_82w931bt3().f[38]++;
    cov_82w931bt3().s[197]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_82w931bt3().s[198]++, await execAsync('top -bn1 | grep "Cpu(s)" | awk \'{print $2}\' | sed \'s/%us,//\''));
      /* istanbul ignore next */
      cov_82w931bt3().s[199]++;
      return parseFloat(result.stdout.trim());
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[200]++;
      throw new Error(`Failed to get CPU usage: ${error.message}`);
    }
  }
  async getDirectorySize(dirPath) {
    /* istanbul ignore next */
    cov_82w931bt3().f[39]++;
    cov_82w931bt3().s[201]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_82w931bt3().s[202]++, await execAsync(`du -sb ${dirPath} | cut -f1`));
      /* istanbul ignore next */
      cov_82w931bt3().s[203]++;
      return parseInt(result.stdout.trim());
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[204]++;
      return 0; // Directory might not exist
    }
  }
  async getAvailableSpace(dirPath) {
    /* istanbul ignore next */
    cov_82w931bt3().f[40]++;
    cov_82w931bt3().s[205]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_82w931bt3().s[206]++, await execAsync(`df ${dirPath} | tail -1 | awk '{print $4}'`));
      /* istanbul ignore next */
      cov_82w931bt3().s[207]++;
      return parseInt(result.stdout.trim()) * 1024; // Convert from KB to bytes
    } catch (error) {
      /* istanbul ignore next */
      cov_82w931bt3().s[208]++;
      throw new Error(`Failed to get available space: ${error.message}`);
    }
  }
}
/* istanbul ignore next */
cov_82w931bt3().s[209]++;
module.exports = {
  HealthChecker
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,