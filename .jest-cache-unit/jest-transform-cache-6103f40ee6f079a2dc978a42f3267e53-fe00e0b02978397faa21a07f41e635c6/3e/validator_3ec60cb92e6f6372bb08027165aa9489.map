{"version":3,"names":["Joi","require","Validator","constructor","config","schemas","buildSchemas","deploymentRequest","object","repository","string","pattern","optional","messages","branch","priority","valid","default","dryRun","boolean","requestedBy","min","max","parameters","environment","rollbackRequest","deploymentId","guid","version","required","reason","webhookPayload","action","full_name","name","owner","login","sender","unknown","queueParameters","page","number","integer","limit","status","historyParameters","startDate","date","iso","endDate","ref","logsParameters","lines","level","type","configurationUpdate","deployment","targetServer","ip","deploymentPath","backupRetention","healthCheckEndpoint","uri","deploymentTimeout","api","port","host","hostname","corsOrigins","array","items","webhook","secret","allowedEvents","validateDeploymentRequest","data","validated","validateAsync","abortEarly","stripUnknown","validateDeploymentBusinessRules","error","isJoi","validationError","Error","details","map","detail","field","path","join","message","value","context","validateRollbackRequest","validateWebhookPayload","allowUnknown","validateQueueParameters","formatJoiError","validateHistoryParameters","validateLogsParameters","validateConfigurationUpdate","errors","allowedRepositories","includes","push","allowedBranches","length","businessError","validateGitHubSignature","signature","payload","startsWith","validateDeploymentId","uuidRegex","test","validateFileOperation","operation","filePath","content","allowedOperations","allowedPaths","isAllowed","some","allowed","undefined","Buffer","byteLength","validateIPAddress","ipv4Regex","ipv6Regex","parts","split","Number","isValid","every","part","validatePort","portNum","parseInt","isNaN","restrictedPorts","sanitizeInput","input","String","trim","replace","getValidationSchema","schemaName","addCustomSchema","schema","getSchemaNames","Object","keys","module","exports"],"sources":["validator.js"],"sourcesContent":["const Joi = require('joi');\n\nclass Validator {\n  constructor(config = {}) {\n    this.config = config;\n    this.schemas = this.buildSchemas();\n  }\n\n  buildSchemas() {\n    return {\n      deploymentRequest: Joi.object({\n        repository: Joi.string()\n          .pattern(/^[a-zA-Z0-9_.-]+\\/[a-zA-Z0-9_.-]+$/)\n          .optional()\n          .messages({\n            'string.pattern.base': 'Repository must be in format \"owner/repo\"'\n          }),\n        \n        branch: Joi.string()\n          .pattern(/^[a-zA-Z0-9_.\\/-]+$/)\n          .optional()\n          .messages({\n            'string.pattern.base': 'Branch name contains invalid characters'\n          }),\n        \n        priority: Joi.string()\n          .valid('low', 'normal', 'high', 'urgent')\n          .optional()\n          .default('normal'),\n        \n        dryRun: Joi.boolean()\n          .optional()\n          .default(false),\n        \n        requestedBy: Joi.string()\n          .min(1)\n          .max(100)\n          .optional(),\n        \n        parameters: Joi.object()\n          .optional()\n          .default({}),\n        \n        environment: Joi.string()\n          .valid('development', 'staging', 'production')\n          .optional()\n          .default('production')\n      }),\n\n      rollbackRequest: Joi.object({\n        deploymentId: Joi.string()\n          .guid({ version: 'uuidv4' })\n          .required()\n          .messages({\n            'any.required': 'Deployment ID is required',\n            'string.guid': 'Deployment ID must be a valid UUID'\n          }),\n        \n        reason: Joi.string()\n          .min(1)\n          .max(500)\n          .optional(),\n        \n        requestedBy: Joi.string()\n          .min(1)\n          .max(100)\n          .optional()\n      }),\n\n      webhookPayload: Joi.object({\n        action: Joi.string().required(),\n        repository: Joi.object({\n          full_name: Joi.string().required(),\n          name: Joi.string().required(),\n          owner: Joi.object({\n            login: Joi.string().required()\n          }).required()\n        }).required(),\n        sender: Joi.object({\n          login: Joi.string().required()\n        }).required()\n      }).unknown(true),\n\n      queueParameters: Joi.object({\n        page: Joi.number()\n          .integer()\n          .min(1)\n          .optional()\n          .default(1),\n        \n        limit: Joi.number()\n          .integer()\n          .min(1)\n          .max(100)\n          .optional()\n          .default(20),\n        \n        status: Joi.string()\n          .valid('queued', 'in-progress', 'completed', 'failed', 'rolled-back')\n          .optional()\n      }),\n\n      historyParameters: Joi.object({\n        page: Joi.number()\n          .integer()\n          .min(1)\n          .optional()\n          .default(1),\n        \n        limit: Joi.number()\n          .integer()\n          .min(1)\n          .max(100)\n          .optional()\n          .default(20),\n        \n        status: Joi.string()\n          .valid('queued', 'in-progress', 'completed', 'failed', 'rolled-back')\n          .optional(),\n        \n        repository: Joi.string()\n          .pattern(/^[a-zA-Z0-9_.-]+\\/[a-zA-Z0-9_.-]+$/)\n          .optional(),\n        \n        startDate: Joi.date()\n          .iso()\n          .optional(),\n        \n        endDate: Joi.date()\n          .iso()\n          .min(Joi.ref('startDate'))\n          .optional()\n      }),\n\n      logsParameters: Joi.object({\n        deploymentId: Joi.string()\n          .guid({ version: 'uuidv4' })\n          .required(),\n        \n        lines: Joi.number()\n          .integer()\n          .min(1)\n          .max(1000)\n          .optional()\n          .default(100),\n        \n        level: Joi.string()\n          .valid('error', 'warn', 'info', 'debug')\n          .optional(),\n        \n        type: Joi.string()\n          .valid('stdout', 'stderr', 'system')\n          .optional()\n      }),\n\n      configurationUpdate: Joi.object({\n        deployment: Joi.object({\n          repository: Joi.string()\n            .pattern(/^[a-zA-Z0-9_.-]+\\/[a-zA-Z0-9_.-]+$/)\n            .optional(),\n          \n          targetServer: Joi.string()\n            .ip()\n            .optional(),\n          \n          deploymentPath: Joi.string()\n            .pattern(/^\\/[a-zA-Z0-9_.\\/-]*$/)\n            .optional(),\n          \n          backupRetention: Joi.number()\n            .integer()\n            .min(1)\n            .max(365)\n            .optional(),\n          \n          healthCheckEndpoint: Joi.string()\n            .uri()\n            .optional(),\n          \n          deploymentTimeout: Joi.number()\n            .integer()\n            .min(30)\n            .max(3600)\n            .optional()\n        }).optional(),\n\n        api: Joi.object({\n          port: Joi.number()\n            .integer()\n            .min(1000)\n            .max(65535)\n            .optional(),\n          \n          host: Joi.string()\n            .hostname()\n            .optional(),\n          \n          corsOrigins: Joi.array()\n            .items(Joi.string().uri())\n            .optional()\n        }).optional(),\n\n        webhook: Joi.object({\n          secret: Joi.string()\n            .min(10)\n            .optional(),\n          \n          allowedEvents: Joi.array()\n            .items(Joi.string().valid('repository_dispatch', 'push', 'pull_request', 'release'))\n            .optional()\n        }).optional()\n      })\n    };\n  }\n\n  async validateDeploymentRequest(data) {\n    try {\n      const validated = await this.schemas.deploymentRequest.validateAsync(data, {\n        abortEarly: false,\n        stripUnknown: true\n      });\n      \n      // Additional business logic validation\n      await this.validateDeploymentBusinessRules(validated);\n      \n      return validated;\n      \n    } catch (error) {\n      if (error.isJoi) {\n        const validationError = new Error('Validation failed');\n        validationError.name = 'ValidationError';\n        validationError.details = error.details.map(detail => ({\n          field: detail.path.join('.'),\n          message: detail.message,\n          value: detail.context?.value\n        }));\n        throw validationError;\n      }\n      throw error;\n    }\n  }\n\n  async validateRollbackRequest(data) {\n    try {\n      const validated = await this.schemas.rollbackRequest.validateAsync(data, {\n        abortEarly: false,\n        stripUnknown: true\n      });\n      \n      return validated;\n      \n    } catch (error) {\n      if (error.isJoi) {\n        const validationError = new Error('Validation failed');\n        validationError.name = 'ValidationError';\n        validationError.details = error.details.map(detail => ({\n          field: detail.path.join('.'),\n          message: detail.message,\n          value: detail.context?.value\n        }));\n        throw validationError;\n      }\n      throw error;\n    }\n  }\n\n  async validateWebhookPayload(data) {\n    try {\n      const validated = await this.schemas.webhookPayload.validateAsync(data, {\n        abortEarly: false,\n        allowUnknown: true\n      });\n      \n      return validated;\n      \n    } catch (error) {\n      if (error.isJoi) {\n        const validationError = new Error('Webhook validation failed');\n        validationError.name = 'ValidationError';\n        validationError.details = error.details.map(detail => ({\n          field: detail.path.join('.'),\n          message: detail.message,\n          value: detail.context?.value\n        }));\n        throw validationError;\n      }\n      throw error;\n    }\n  }\n\n  async validateQueueParameters(data) {\n    try {\n      return await this.schemas.queueParameters.validateAsync(data, {\n        abortEarly: false,\n        stripUnknown: true\n      });\n    } catch (error) {\n      throw this.formatJoiError(error);\n    }\n  }\n\n  async validateHistoryParameters(data) {\n    try {\n      return await this.schemas.historyParameters.validateAsync(data, {\n        abortEarly: false,\n        stripUnknown: true\n      });\n    } catch (error) {\n      throw this.formatJoiError(error);\n    }\n  }\n\n  async validateLogsParameters(data) {\n    try {\n      return await this.schemas.logsParameters.validateAsync(data, {\n        abortEarly: false,\n        stripUnknown: true\n      });\n    } catch (error) {\n      throw this.formatJoiError(error);\n    }\n  }\n\n  async validateConfigurationUpdate(data) {\n    try {\n      return await this.schemas.configurationUpdate.validateAsync(data, {\n        abortEarly: false,\n        stripUnknown: true\n      });\n    } catch (error) {\n      throw this.formatJoiError(error);\n    }\n  }\n\n  async validateDeploymentBusinessRules(deployment) {\n    const errors = [];\n    \n    // Check repository allowlist\n    if (deployment.repository) {\n      const allowedRepositories = this.config.deployment?.allowedRepositories || [\n        'festion/home-assistant-config',\n        'homelab-gitops-auditor/home-assistant-config'\n      ];\n      \n      if (!allowedRepositories.includes(deployment.repository)) {\n        errors.push({\n          field: 'repository',\n          message: `Repository ${deployment.repository} is not in the allowed list`,\n          allowedRepositories\n        });\n      }\n    }\n    \n    // Check branch allowlist\n    if (deployment.branch) {\n      const allowedBranches = this.config.deployment?.allowedBranches || ['main', 'master', 'production'];\n      \n      if (!allowedBranches.includes(deployment.branch)) {\n        errors.push({\n          field: 'branch',\n          message: `Branch ${deployment.branch} is not in the allowed list`,\n          allowedBranches\n        });\n      }\n    }\n    \n    // Check environment-specific rules\n    if (deployment.environment === 'production') {\n      if (deployment.dryRun !== false) {\n        // Production deployments should not be dry runs unless explicitly requested\n      }\n    }\n    \n    if (errors.length > 0) {\n      const businessError = new Error('Business rule validation failed');\n      businessError.name = 'BusinessValidationError';\n      businessError.details = errors;\n      throw businessError;\n    }\n  }\n\n  validateGitHubSignature(signature, payload, secret) {\n    if (!signature) {\n      throw new Error('No signature provided');\n    }\n    \n    if (!signature.startsWith('sha256=')) {\n      throw new Error('Invalid signature format');\n    }\n    \n    if (!secret) {\n      throw new Error('Webhook secret not configured');\n    }\n    \n    return true;\n  }\n\n  validateDeploymentId(deploymentId) {\n    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n    \n    if (!deploymentId) {\n      throw new Error('Deployment ID is required');\n    }\n    \n    if (!uuidRegex.test(deploymentId)) {\n      throw new Error('Deployment ID must be a valid UUID v4');\n    }\n    \n    return true;\n  }\n\n  validateFileOperation(operation, filePath, content = null) {\n    const allowedOperations = ['create', 'update', 'delete', 'backup'];\n    \n    if (!allowedOperations.includes(operation)) {\n      throw new Error(`Invalid file operation: ${operation}. Allowed: ${allowedOperations.join(', ')}`);\n    }\n    \n    if (!filePath || typeof filePath !== 'string') {\n      throw new Error('File path is required and must be a string');\n    }\n    \n    // Path traversal protection\n    if (filePath.includes('..') || filePath.includes('//')) {\n      throw new Error('Invalid file path: contains path traversal sequences');\n    }\n    \n    // Ensure path is within allowed directories\n    const allowedPaths = ['/config', '/backup'];\n    const isAllowed = allowedPaths.some(allowed => filePath.startsWith(allowed));\n    \n    if (!isAllowed) {\n      throw new Error(`File path must start with one of: ${allowedPaths.join(', ')}`);\n    }\n    \n    // Content validation for create/update operations\n    if (['create', 'update'].includes(operation)) {\n      if (content === null || content === undefined) {\n        throw new Error(`Content is required for ${operation} operation`);\n      }\n      \n      if (typeof content !== 'string') {\n        throw new Error('Content must be a string');\n      }\n      \n      // Check content size (max 10MB)\n      if (Buffer.byteLength(content, 'utf8') > 10 * 1024 * 1024) {\n        throw new Error('Content size exceeds maximum limit (10MB)');\n      }\n    }\n    \n    return true;\n  }\n\n  validateIPAddress(ip) {\n    const ipv4Regex = /^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})$/;\n    const ipv6Regex = /^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/;\n    \n    if (!ip) {\n      throw new Error('IP address is required');\n    }\n    \n    if (ipv4Regex.test(ip)) {\n      const parts = ip.split('.').map(Number);\n      const isValid = parts.every(part => part >= 0 && part <= 255);\n      \n      if (!isValid) {\n        throw new Error('Invalid IPv4 address');\n      }\n      \n      return 'ipv4';\n    }\n    \n    if (ipv6Regex.test(ip)) {\n      return 'ipv6';\n    }\n    \n    throw new Error('Invalid IP address format');\n  }\n\n  validatePort(port) {\n    if (!port) {\n      throw new Error('Port is required');\n    }\n    \n    const portNum = parseInt(port, 10);\n    \n    if (isNaN(portNum) || portNum < 1 || portNum > 65535) {\n      throw new Error('Port must be a number between 1 and 65535');\n    }\n    \n    // Check for well-known ports that should be avoided\n    const restrictedPorts = [22, 25, 53, 80, 110, 143, 443, 993, 995];\n    \n    if (restrictedPorts.includes(portNum)) {\n      throw new Error(`Port ${portNum} is restricted`);\n    }\n    \n    return portNum;\n  }\n\n  sanitizeInput(input, type = 'string') {\n    if (input === null || input === undefined) {\n      return input;\n    }\n    \n    switch (type) {\n      case 'string':\n        return String(input).trim();\n      \n      case 'filename':\n        return String(input)\n          .replace(/[^a-zA-Z0-9._-]/g, '')\n          .trim();\n      \n      case 'path':\n        return String(input)\n          .replace(/\\/+/g, '/')\n          .replace(/\\.\\./g, '')\n          .trim();\n      \n      case 'identifier':\n        return String(input)\n          .replace(/[^a-zA-Z0-9_-]/g, '')\n          .trim();\n      \n      default:\n        return input;\n    }\n  }\n\n  formatJoiError(error) {\n    if (error.isJoi) {\n      const validationError = new Error('Validation failed');\n      validationError.name = 'ValidationError';\n      validationError.details = error.details.map(detail => ({\n        field: detail.path.join('.'),\n        message: detail.message,\n        value: detail.context?.value\n      }));\n      return validationError;\n    }\n    return error;\n  }\n\n  getValidationSchema(schemaName) {\n    return this.schemas[schemaName];\n  }\n\n  addCustomSchema(name, schema) {\n    if (!schema || typeof schema.validateAsync !== 'function') {\n      throw new Error('Schema must be a valid Joi schema');\n    }\n    \n    this.schemas[name] = schema;\n  }\n\n  getSchemaNames() {\n    return Object.keys(this.schemas);\n  }\n}\n\nmodule.exports = Validator;"],"mappings":"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","ignoreList":[]}